Created new pacemaker configuration
A new shadow instance was created. To begin using it, enter the following into your shell:
	export CIB_shadow=cts-cli
=#=#=#= Begin test: Validate CIB =#=#=#=
<cib epoch="1" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config/>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= Current cib after: Validate CIB =#=#=#=
<cib epoch="1" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config/>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Validate CIB - OK (0) =#=#=#=
* Passed: cibadmin       - Validate CIB
=#=#=#= Begin test: List all available options (invalid type) =#=#=#=
crm_attribute: Invalid --list-options value 'asdf'. Allowed values: cluster
=#=#=#= End test: List all available options (invalid type) - Incorrect usage (64) =#=#=#=
* Passed: crm_attribute  - List all available options (invalid type)
=#=#=#= Begin test: List all available options (invalid type) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_attribute --list-options=asdf --output-as=xml">
  <status code="64" message="Incorrect usage">
    <errors>
      <error>crm_attribute: Invalid --list-options value 'asdf'. Allowed values: cluster</error>
    </errors>
  </status>
</pacemaker-result>
=#=#=#= End test: List all available options (invalid type) (XML) - Incorrect usage (64) =#=#=#=
* Passed: crm_attribute  - List all available options (invalid type) (XML)
=#=#=#= Begin test: List non-advanced cluster options =#=#=#=
Pacemaker cluster options

Also known as properties, these are options that affect behavior across the entire cluster. They are configured within cluster_property_set elements inside the crm_config subsection of the CIB configuration section.

  * dc-version: Pacemaker version on cluster node elected Designated Controller (DC)
    * Includes a hash which identifies the exact revision the code was built from. Used for diagnostic purposes.
    * Possible values (generated by Pacemaker): version (no default)

  * cluster-infrastructure: The messaging layer on which Pacemaker is currently running
    * Used for informational and diagnostic purposes.
    * Possible values (generated by Pacemaker): string (no default)

  * cluster-name: An arbitrary name for the cluster
    * This optional value is mostly for users' convenience as desired in administration, but may also be used in Pacemaker configuration rules via the #cluster-name node attribute, and by higher-level tools and resource agents.
    * Possible values: string (no default)

  * dc-deadtime: How long to wait for a response from other nodes during start-up
    * The optimal value will depend on the speed and load of your network and the type of switches used.
    * Possible values: duration (default: )

  * cluster-recheck-interval: Polling interval to recheck cluster state and evaluate rules with date specifications
    * Pacemaker is primarily event-driven, and looks ahead to know when to recheck cluster state for failure-timeout settings and most time-based rules. However, it will also recheck the cluster after this amount of inactivity, to evaluate rules with date specifications and serve as a fail-safe for certain types of scheduler bugs. A value of 0 disables polling. A positive value sets an interval in seconds, unless other units are specified (for example, "5min").
    * Possible values: duration (default: )

  * fence-reaction: How a cluster node should react if notified of its own fencing
    * A cluster node may receive notification of a "succeeded" fencing that targeted it if fencing is misconfigured, or if fabric fencing is in use that doesn't cut cluster communication. Use "stop" to attempt to immediately stop Pacemaker and stay stopped, or "panic" to attempt to immediately reboot the local node, falling back to stop on failure.
    * Possible values: "stop" (default), "panic"

  * no-quorum-policy: What to do when the cluster does not have quorum
    * Possible values: "stop" (default), "freeze", "ignore", "demote", "fence", "suicide"

  * shutdown-lock: Whether to lock resources to a cleanly shut down node
    * When true, resources active on a node when it is cleanly shut down are kept "locked" to that node (not allowed to run elsewhere) until they start again on that node after it rejoins (or for at most shutdown-lock-limit, if set). Stonith resources and Pacemaker Remote connections are never locked. Clone and bundle instances and the promoted role of promotable clones are currently never locked, though support could be added in a future release.
    * Possible values: boolean (default: )

  * shutdown-lock-limit: Do not lock resources to a cleanly shut down node longer than this
    * If shutdown-lock is true and this is set to a nonzero time duration, shutdown locks will expire after this much time has passed since the shutdown was initiated, even if the node has not rejoined.
    * Possible values: duration (default: )

  * enable-acl: Enable Access Control Lists (ACLs) for the CIB
    * Possible values: boolean (default: )

  * symmetric-cluster: Whether resources can run on any node by default
    * Possible values: boolean (default: )

  * maintenance-mode: Whether the cluster should refrain from monitoring, starting, and stopping resources
    * Possible values: boolean (default: )

  * start-failure-is-fatal: Whether a start failure should prevent a resource from being recovered on the same node
    * When true, the cluster will immediately ban a resource from a node if it fails to start there. When false, the cluster will instead check the resource's fail count against its migration-threshold.
    * Possible values: boolean (default: )

  * enable-startup-probes: Whether the cluster should check for active resources during start-up
    * Possible values: boolean (default: )

  * stonith-action: Action to send to fence device when a node needs to be fenced ("poweroff" is a deprecated alias for "off")
    * Possible values: "reboot" (default), "off", "poweroff"

  * stonith-timeout: How long to wait for on, off, and reboot fence actions to complete by default
    * Possible values: duration (default: )

  * have-watchdog: Whether watchdog integration is enabled
    * This is set automatically by the cluster according to whether SBD is detected to be in use. User-configured values are ignored. The value `true` is meaningful if diskless SBD is used and `stonith-watchdog-timeout` is nonzero. In that case, if fencing is required, watchdog-based self-fencing will be performed via SBD without requiring a fencing resource explicitly configured.
    * Possible values (generated by Pacemaker): boolean (default: )

  * stonith-watchdog-timeout: How long before nodes can be assumed to be safely down when watchdog-based self-fencing via SBD is in use
    * If this is set to a positive value, lost nodes are assumed to achieve self-fencing using watchdog-based SBD within this much time. This does not require a fencing resource to be explicitly configured, though a fence_watchdog resource can be configured, to limit use to specific nodes. If this is set to 0 (the default), the cluster will never assume watchdog-based self-fencing. If this is set to a negative value, the cluster will use twice the local value of the `SBD_WATCHDOG_TIMEOUT` environment variable if that is positive, or otherwise treat this as 0. WARNING: When used, this timeout must be larger than `SBD_WATCHDOG_TIMEOUT` on all nodes that use watchdog-based SBD, and Pacemaker will refuse to start on any of those nodes where this is not true for the local value or SBD is not active. When this is set to a negative value, `SBD_WATCHDOG_TIMEOUT` must be set to the same value on all nodes that use SBD, otherwise data corruption or loss could occur.
    * Possible values: timeout (default: )

  * stonith-max-attempts: How many times fencing can fail before it will no longer be immediately re-attempted on a target
    * Possible values: score (default: )

  * concurrent-fencing: Allow performing fencing operations in parallel
    * Possible values: boolean (default: )

  * priority-fencing-delay: Apply fencing delay targeting the lost nodes with the highest total resource priority
    * Apply specified delay for the fencings that are targeting the lost nodes with the highest total resource priority in case we don't have the majority of the nodes in our cluster partition, so that the more significant nodes potentially win any fencing match, which is especially meaningful under split-brain of 2-node cluster. A promoted resource instance takes the base priority + 1 on calculation if the base priority is not 0. Any static/random delays that are introduced by `pcmk_delay_base/max` configured for the corresponding fencing resources will be added to this delay. This delay should be significantly greater than, safely twice, the maximum `pcmk_delay_base/max`. By default, priority fencing delay is disabled.
    * Possible values: duration (default: )

  * node-pending-timeout: How long to wait for a node that has joined the cluster to join the controller process group
    * Fence nodes that do not join the controller process group within this much time after joining the cluster, to allow the cluster to continue managing resources. A value of 0 means never fence pending nodes. Setting the value to 2h means fence nodes after 2 hours.
    * Possible values: duration (default: )

  * cluster-delay: Maximum time for node-to-node communication
    * The node elected Designated Controller (DC) will consider an action failed if it does not get a response from the node executing the action within this time (after considering the action's own timeout). The "correct" value will depend on the speed and load of your network and cluster nodes.
    * Possible values: duration (default: )

  * load-threshold: Maximum amount of system load that should be used by cluster nodes
    * The cluster will slow down its recovery process when the amount of system resources used (currently CPU) approaches this limit
    * Possible values: percentage (default: )

  * node-action-limit: Maximum number of jobs that can be scheduled per node (defaults to 2x cores)
    * Possible values: integer (default: )

  * batch-limit: Maximum number of jobs that the cluster may execute in parallel across all nodes
    * The "correct" value will depend on the speed and load of your network and cluster nodes. If set to 0, the cluster will impose a dynamically calculated limit when any node has a high load.
    * Possible values: integer (default: )

  * migration-limit: The number of live migration actions that the cluster is allowed to execute in parallel on a node (-1 means no limit)
    * Possible values: integer (default: )

  * cluster-ipc-limit: Maximum IPC message backlog before disconnecting a cluster daemon
    * Raise this if log has "Evicting client" messages for cluster daemon PIDs (a good value is the number of resources in the cluster multiplied by the number of nodes).
    * Possible values: nonnegative_integer (default: )

  * stop-all-resources: Whether the cluster should stop all active resources
    * Possible values: boolean (default: )

  * stop-orphan-resources: Whether to stop resources that were removed from the configuration
    * Possible values: boolean (default: )

  * stop-orphan-actions: Whether to cancel recurring actions removed from the configuration
    * Possible values: boolean (default: )

  * pe-error-series-max: The number of scheduler inputs resulting in errors to save
    * Zero to disable, -1 to store unlimited.
    * Possible values: integer (default: )

  * pe-warn-series-max: The number of scheduler inputs resulting in warnings to save
    * Zero to disable, -1 to store unlimited.
    * Possible values: integer (default: )

  * pe-input-series-max: The number of scheduler inputs without errors or warnings to save
    * Zero to disable, -1 to store unlimited.
    * Possible values: integer (default: )

  * node-health-strategy: How cluster should react to node health attributes
    * Requires external entities to create node attributes (named with the prefix "#health") with values "red", "yellow", or "green".
    * Possible values: "none" (default), "migrate-on-red", "only-green", "progressive", "custom"

  * node-health-base: Base health score assigned to a node
    * Only used when "node-health-strategy" is set to "progressive".
    * Possible values: score (default: )

  * node-health-green: The score to use for a node health attribute whose value is "green"
    * Only used when "node-health-strategy" is set to "custom" or "progressive".
    * Possible values: score (default: )

  * node-health-yellow: The score to use for a node health attribute whose value is "yellow"
    * Only used when "node-health-strategy" is set to "custom" or "progressive".
    * Possible values: score (default: )

  * node-health-red: The score to use for a node health attribute whose value is "red"
    * Only used when "node-health-strategy" is set to "custom" or "progressive".
    * Possible values: score (default: )

  * placement-strategy: How the cluster should allocate resources to nodes
    * Possible values: "default" (default), "utilization", "minimal", "balanced"
=#=#=#= End test: List non-advanced cluster options - OK (0) =#=#=#=
* Passed: crm_attribute  - List non-advanced cluster options
=#=#=#= Begin test: List non-advanced cluster options (XML) (shows all) =#=#=#=
<pacemaker-result api-version="X" request="crm_attribute --list-options=cluster --output-as=xml">
  <resource-agent name="cluster-options" version="">
    <version>1.1</version>
    <longdesc lang="en">Also known as properties, these are options that affect behavior across the entire cluster. They are configured within cluster_property_set elements inside the crm_config subsection of the CIB configuration section.</longdesc>
    <shortdesc lang="en">Pacemaker cluster options</shortdesc>
    <parameters>
      <parameter name="dc-version" advanced="0" generated="1">
        <longdesc lang="en">Includes a hash which identifies the exact revision the code was built from. Used for diagnostic purposes.</longdesc>
        <shortdesc lang="en">Pacemaker version on cluster node elected Designated Controller (DC)</shortdesc>
        <content type="version"/>
      </parameter>
      <parameter name="cluster-infrastructure" advanced="0" generated="1">
        <longdesc lang="en">Used for informational and diagnostic purposes.</longdesc>
        <shortdesc lang="en">The messaging layer on which Pacemaker is currently running</shortdesc>
        <content type="string"/>
      </parameter>
      <parameter name="cluster-name" advanced="0" generated="0">
        <longdesc lang="en">This optional value is mostly for users' convenience as desired in administration, but may also be used in Pacemaker configuration rules via the #cluster-name node attribute, and by higher-level tools and resource agents.</longdesc>
        <shortdesc lang="en">An arbitrary name for the cluster</shortdesc>
        <content type="string"/>
      </parameter>
      <parameter name="dc-deadtime" advanced="0" generated="0">
        <longdesc lang="en">The optimal value will depend on the speed and load of your network and the type of switches used.</longdesc>
        <shortdesc lang="en">How long to wait for a response from other nodes during start-up</shortdesc>
        <content type="duration" default=""/>
      </parameter>
      <parameter name="cluster-recheck-interval" advanced="0" generated="0">
        <longdesc lang="en">Pacemaker is primarily event-driven, and looks ahead to know when to recheck cluster state for failure-timeout settings and most time-based rules. However, it will also recheck the cluster after this amount of inactivity, to evaluate rules with date specifications and serve as a fail-safe for certain types of scheduler bugs. A value of 0 disables polling. A positive value sets an interval in seconds, unless other units are specified (for example, "5min").</longdesc>
        <shortdesc lang="en">Polling interval to recheck cluster state and evaluate rules with date specifications</shortdesc>
        <content type="duration" default=""/>
      </parameter>
      <parameter name="fence-reaction" advanced="0" generated="0">
        <longdesc lang="en">A cluster node may receive notification of a "succeeded" fencing that targeted it if fencing is misconfigured, or if fabric fencing is in use that doesn't cut cluster communication. Use "stop" to attempt to immediately stop Pacemaker and stay stopped, or "panic" to attempt to immediately reboot the local node, falling back to stop on failure.</longdesc>
        <shortdesc lang="en">How a cluster node should react if notified of its own fencing</shortdesc>
        <content type="select" default="">
          <option value="stop"/>
          <option value="panic"/>
        </content>
      </parameter>
      <parameter name="election-timeout" advanced="1" generated="0">
        <longdesc lang="en">Declare an election failed if it is not decided within this much time. If you need to adjust this value, it probably indicates the presence of a bug.</longdesc>
        <shortdesc lang="en">Declare an election failed if it is not decided within this much time. If you need to adjust this value, it probably indicates the presence of a bug.</shortdesc>
        <content type="duration" default=""/>
      </parameter>
      <parameter name="shutdown-escalation" advanced="1" generated="0">
        <longdesc lang="en">Exit immediately if shutdown does not complete within this much time. If you need to adjust this value, it probably indicates the presence of a bug.</longdesc>
        <shortdesc lang="en">Exit immediately if shutdown does not complete within this much time. If you need to adjust this value, it probably indicates the presence of a bug.</shortdesc>
        <content type="duration" default=""/>
      </parameter>
      <parameter name="join-integration-timeout" advanced="1" generated="0">
        <longdesc lang="en">If you need to adjust this value, it probably indicates the presence of a bug.</longdesc>
        <shortdesc lang="en">If you need to adjust this value, it probably indicates the presence of a bug.</shortdesc>
        <content type="duration" default=""/>
      </parameter>
      <parameter name="join-finalization-timeout" advanced="1" generated="0">
        <longdesc lang="en">If you need to adjust this value, it probably indicates the presence of a bug.</longdesc>
        <shortdesc lang="en">If you need to adjust this value, it probably indicates the presence of a bug.</shortdesc>
        <content type="duration" default=""/>
      </parameter>
      <parameter name="transition-delay" advanced="1" generated="0">
        <longdesc lang="en">Delay cluster recovery for this much time to allow for additional events to occur. Useful if your configuration is sensitive to the order in which ping updates arrive.</longdesc>
        <shortdesc lang="en">Enabling this option will slow down cluster recovery under all conditions</shortdesc>
        <content type="duration" default=""/>
      </parameter>
      <parameter name="no-quorum-policy" advanced="0" generated="0">
        <longdesc lang="en">What to do when the cluster does not have quorum</longdesc>
        <shortdesc lang="en">What to do when the cluster does not have quorum</shortdesc>
        <content type="select" default="">
          <option value="stop"/>
          <option value="freeze"/>
          <option value="ignore"/>
          <option value="demote"/>
          <option value="fence"/>
          <option value="suicide"/>
        </content>
      </parameter>
      <parameter name="shutdown-lock" advanced="0" generated="0">
        <longdesc lang="en">When true, resources active on a node when it is cleanly shut down are kept "locked" to that node (not allowed to run elsewhere) until they start again on that node after it rejoins (or for at most shutdown-lock-limit, if set). Stonith resources and Pacemaker Remote connections are never locked. Clone and bundle instances and the promoted role of promotable clones are currently never locked, though support could be added in a future release.</longdesc>
        <shortdesc lang="en">Whether to lock resources to a cleanly shut down node</shortdesc>
        <content type="boolean" default=""/>
      </parameter>
      <parameter name="shutdown-lock-limit" advanced="0" generated="0">
        <longdesc lang="en">If shutdown-lock is true and this is set to a nonzero time duration, shutdown locks will expire after this much time has passed since the shutdown was initiated, even if the node has not rejoined.</longdesc>
        <shortdesc lang="en">Do not lock resources to a cleanly shut down node longer than this</shortdesc>
        <content type="duration" default=""/>
      </parameter>
      <parameter name="enable-acl" advanced="0" generated="0">
        <longdesc lang="en">Enable Access Control Lists (ACLs) for the CIB</longdesc>
        <shortdesc lang="en">Enable Access Control Lists (ACLs) for the CIB</shortdesc>
        <content type="boolean" default=""/>
      </parameter>
      <parameter name="symmetric-cluster" advanced="0" generated="0">
        <longdesc lang="en">Whether resources can run on any node by default</longdesc>
        <shortdesc lang="en">Whether resources can run on any node by default</shortdesc>
        <content type="boolean" default=""/>
      </parameter>
      <parameter name="maintenance-mode" advanced="0" generated="0">
        <longdesc lang="en">Whether the cluster should refrain from monitoring, starting, and stopping resources</longdesc>
        <shortdesc lang="en">Whether the cluster should refrain from monitoring, starting, and stopping resources</shortdesc>
        <content type="boolean" default=""/>
      </parameter>
      <parameter name="start-failure-is-fatal" advanced="0" generated="0">
        <longdesc lang="en">When true, the cluster will immediately ban a resource from a node if it fails to start there. When false, the cluster will instead check the resource's fail count against its migration-threshold.</longdesc>
        <shortdesc lang="en">Whether a start failure should prevent a resource from being recovered on the same node</shortdesc>
        <content type="boolean" default=""/>
      </parameter>
      <parameter name="enable-startup-probes" advanced="0" generated="0">
        <longdesc lang="en">Whether the cluster should check for active resources during start-up</longdesc>
        <shortdesc lang="en">Whether the cluster should check for active resources during start-up</shortdesc>
        <content type="boolean" default=""/>
      </parameter>
      <parameter name="fence-remote-without-quorum" advanced="1" generated="0">
        <longdesc lang="en">By default, inquorate nodes can fence Pacemaker Remote nodes that are part of its partition regardless of whether the resource was successfully restarted elsewhere.  If false, an additional check will be added to only fence remote nodes if the cluster thinks they were unable to be restarted.</longdesc>
        <shortdesc lang="en">Whether remote nodes can be fenced without quorum</shortdesc>
        <content type="boolean" default=""/>
      </parameter>
      <parameter name="stonith-enabled" advanced="1" generated="0">
        <longdesc lang="en">If false, unresponsive nodes are immediately assumed to be harmless, and resources that were active on them may be recovered elsewhere. This can result in a "split-brain" situation, potentially leading to data loss and/or service unavailability.</longdesc>
        <shortdesc lang="en">Whether nodes may be fenced as part of recovery</shortdesc>
        <content type="boolean" default=""/>
      </parameter>
      <parameter name="stonith-action" advanced="0" generated="0">
        <longdesc lang="en">Action to send to fence device when a node needs to be fenced ("poweroff" is a deprecated alias for "off")</longdesc>
        <shortdesc lang="en">Action to send to fence device when a node needs to be fenced ("poweroff" is a deprecated alias for "off")</shortdesc>
        <content type="select" default="">
          <option value="reboot"/>
          <option value="off"/>
          <option value="poweroff"/>
        </content>
      </parameter>
      <parameter name="stonith-timeout" advanced="0" generated="0">
        <longdesc lang="en">How long to wait for on, off, and reboot fence actions to complete by default</longdesc>
        <shortdesc lang="en">How long to wait for on, off, and reboot fence actions to complete by default</shortdesc>
        <content type="duration" default=""/>
      </parameter>
      <parameter name="have-watchdog" advanced="0" generated="1">
        <longdesc lang="en">This is set automatically by the cluster according to whether SBD is detected to be in use. User-configured values are ignored. The value `true` is meaningful if diskless SBD is used and `stonith-watchdog-timeout` is nonzero. In that case, if fencing is required, watchdog-based self-fencing will be performed via SBD without requiring a fencing resource explicitly configured.</longdesc>
        <shortdesc lang="en">Whether watchdog integration is enabled</shortdesc>
        <content type="boolean" default=""/>
      </parameter>
      <parameter name="stonith-watchdog-timeout" advanced="0" generated="0">
        <longdesc lang="en">If this is set to a positive value, lost nodes are assumed to achieve self-fencing using watchdog-based SBD within this much time. This does not require a fencing resource to be explicitly configured, though a fence_watchdog resource can be configured, to limit use to specific nodes. If this is set to 0 (the default), the cluster will never assume watchdog-based self-fencing. If this is set to a negative value, the cluster will use twice the local value of the `SBD_WATCHDOG_TIMEOUT` environment variable if that is positive, or otherwise treat this as 0. WARNING: When used, this timeout must be larger than `SBD_WATCHDOG_TIMEOUT` on all nodes that use watchdog-based SBD, and Pacemaker will refuse to start on any of those nodes where this is not true for the local value or SBD is not active. When this is set to a negative value, `SBD_WATCHDOG_TIMEOUT` must be set to the same value on all nodes that use SBD, otherwise data corruption or loss could occur.</longdesc>
        <shortdesc lang="en">How long before nodes can be assumed to be safely down when watchdog-based self-fencing via SBD is in use</shortdesc>
        <content type="timeout" default=""/>
      </parameter>
      <parameter name="stonith-max-attempts" advanced="0" generated="0">
        <longdesc lang="en">How many times fencing can fail before it will no longer be immediately re-attempted on a target</longdesc>
        <shortdesc lang="en">How many times fencing can fail before it will no longer be immediately re-attempted on a target</shortdesc>
        <content type="score" default=""/>
      </parameter>
      <parameter name="concurrent-fencing" advanced="0" generated="0">
        <longdesc lang="en">Allow performing fencing operations in parallel</longdesc>
        <shortdesc lang="en">Allow performing fencing operations in parallel</shortdesc>
        <content type="boolean" default=""/>
      </parameter>
      <parameter name="startup-fencing" advanced="1" generated="0">
        <longdesc lang="en">Setting this to false may lead to a "split-brain" situation, potentially leading to data loss and/or service unavailability.</longdesc>
        <shortdesc lang="en">Whether to fence unseen nodes at start-up</shortdesc>
        <content type="boolean" default=""/>
      </parameter>
      <parameter name="priority-fencing-delay" advanced="0" generated="0">
        <longdesc lang="en">Apply specified delay for the fencings that are targeting the lost nodes with the highest total resource priority in case we don't have the majority of the nodes in our cluster partition, so that the more significant nodes potentially win any fencing match, which is especially meaningful under split-brain of 2-node cluster. A promoted resource instance takes the base priority + 1 on calculation if the base priority is not 0. Any static/random delays that are introduced by `pcmk_delay_base/max` configured for the corresponding fencing resources will be added to this delay. This delay should be significantly greater than, safely twice, the maximum `pcmk_delay_base/max`. By default, priority fencing delay is disabled.</longdesc>
        <shortdesc lang="en">Apply fencing delay targeting the lost nodes with the highest total resource priority</shortdesc>
        <content type="duration" default=""/>
      </parameter>
      <parameter name="node-pending-timeout" advanced="0" generated="0">
        <longdesc lang="en">Fence nodes that do not join the controller process group within this much time after joining the cluster, to allow the cluster to continue managing resources. A value of 0 means never fence pending nodes. Setting the value to 2h means fence nodes after 2 hours.</longdesc>
        <shortdesc lang="en">How long to wait for a node that has joined the cluster to join the controller process group</shortdesc>
        <content type="duration" default=""/>
      </parameter>
      <parameter name="cluster-delay" advanced="0" generated="0">
        <longdesc lang="en">The node elected Designated Controller (DC) will consider an action failed if it does not get a response from the node executing the action within this time (after considering the action's own timeout). The "correct" value will depend on the speed and load of your network and cluster nodes.</longdesc>
        <shortdesc lang="en">Maximum time for node-to-node communication</shortdesc>
        <content type="duration" default=""/>
      </parameter>
      <parameter name="load-threshold" advanced="0" generated="0">
        <longdesc lang="en">The cluster will slow down its recovery process when the amount of system resources used (currently CPU) approaches this limit</longdesc>
        <shortdesc lang="en">Maximum amount of system load that should be used by cluster nodes</shortdesc>
        <content type="percentage" default=""/>
      </parameter>
      <parameter name="node-action-limit" advanced="0" generated="0">
        <longdesc lang="en">Maximum number of jobs that can be scheduled per node (defaults to 2x cores)</longdesc>
        <shortdesc lang="en">Maximum number of jobs that can be scheduled per node (defaults to 2x cores)</shortdesc>
        <content type="integer" default=""/>
      </parameter>
      <parameter name="batch-limit" advanced="0" generated="0">
        <longdesc lang="en">The "correct" value will depend on the speed and load of your network and cluster nodes. If set to 0, the cluster will impose a dynamically calculated limit when any node has a high load.</longdesc>
        <shortdesc lang="en">Maximum number of jobs that the cluster may execute in parallel across all nodes</shortdesc>
        <content type="integer" default=""/>
      </parameter>
      <parameter name="migration-limit" advanced="0" generated="0">
        <longdesc lang="en">The number of live migration actions that the cluster is allowed to execute in parallel on a node (-1 means no limit)</longdesc>
        <shortdesc lang="en">The number of live migration actions that the cluster is allowed to execute in parallel on a node (-1 means no limit)</shortdesc>
        <content type="integer" default=""/>
      </parameter>
      <parameter name="cluster-ipc-limit" advanced="0" generated="0">
        <longdesc lang="en">Raise this if log has "Evicting client" messages for cluster daemon PIDs (a good value is the number of resources in the cluster multiplied by the number of nodes).</longdesc>
        <shortdesc lang="en">Maximum IPC message backlog before disconnecting a cluster daemon</shortdesc>
        <content type="nonnegative_integer" default=""/>
      </parameter>
      <parameter name="stop-all-resources" advanced="0" generated="0">
        <longdesc lang="en">Whether the cluster should stop all active resources</longdesc>
        <shortdesc lang="en">Whether the cluster should stop all active resources</shortdesc>
        <content type="boolean" default=""/>
      </parameter>
      <parameter name="stop-orphan-resources" advanced="0" generated="0">
        <longdesc lang="en">Whether to stop resources that were removed from the configuration</longdesc>
        <shortdesc lang="en">Whether to stop resources that were removed from the configuration</shortdesc>
        <content type="boolean" default=""/>
      </parameter>
      <parameter name="stop-orphan-actions" advanced="0" generated="0">
        <longdesc lang="en">Whether to cancel recurring actions removed from the configuration</longdesc>
        <shortdesc lang="en">Whether to cancel recurring actions removed from the configuration</shortdesc>
        <content type="boolean" default=""/>
      </parameter>
      <parameter name="remove-after-stop" advanced="0" generated="0">
        <deprecated/>
        <longdesc lang="en">Values other than default are poorly tested and potentially dangerous.</longdesc>
        <shortdesc lang="en">Whether to remove stopped resources from the executor</shortdesc>
        <content type="boolean" default=""/>
      </parameter>
      <parameter name="pe-error-series-max" advanced="0" generated="0">
        <longdesc lang="en">Zero to disable, -1 to store unlimited.</longdesc>
        <shortdesc lang="en">The number of scheduler inputs resulting in errors to save</shortdesc>
        <content type="integer" default=""/>
      </parameter>
      <parameter name="pe-warn-series-max" advanced="0" generated="0">
        <longdesc lang="en">Zero to disable, -1 to store unlimited.</longdesc>
        <shortdesc lang="en">The number of scheduler inputs resulting in warnings to save</shortdesc>
        <content type="integer" default=""/>
      </parameter>
      <parameter name="pe-input-series-max" advanced="0" generated="0">
        <longdesc lang="en">Zero to disable, -1 to store unlimited.</longdesc>
        <shortdesc lang="en">The number of scheduler inputs without errors or warnings to save</shortdesc>
        <content type="integer" default=""/>
      </parameter>
      <parameter name="node-health-strategy" advanced="0" generated="0">
        <longdesc lang="en">Requires external entities to create node attributes (named with the prefix "#health") with values "red", "yellow", or "green".</longdesc>
        <shortdesc lang="en">How cluster should react to node health attributes</shortdesc>
        <content type="select" default="">
          <option value="none"/>
          <option value="migrate-on-red"/>
          <option value="only-green"/>
          <option value="progressive"/>
          <option value="custom"/>
        </content>
      </parameter>
      <parameter name="node-health-base" advanced="0" generated="0">
        <longdesc lang="en">Only used when "node-health-strategy" is set to "progressive".</longdesc>
        <shortdesc lang="en">Base health score assigned to a node</shortdesc>
        <content type="score" default=""/>
      </parameter>
      <parameter name="node-health-green" advanced="0" generated="0">
        <longdesc lang="en">Only used when "node-health-strategy" is set to "custom" or "progressive".</longdesc>
        <shortdesc lang="en">The score to use for a node health attribute whose value is "green"</shortdesc>
        <content type="score" default=""/>
      </parameter>
      <parameter name="node-health-yellow" advanced="0" generated="0">
        <longdesc lang="en">Only used when "node-health-strategy" is set to "custom" or "progressive".</longdesc>
        <shortdesc lang="en">The score to use for a node health attribute whose value is "yellow"</shortdesc>
        <content type="score" default=""/>
      </parameter>
      <parameter name="node-health-red" advanced="0" generated="0">
        <longdesc lang="en">Only used when "node-health-strategy" is set to "custom" or "progressive".</longdesc>
        <shortdesc lang="en">The score to use for a node health attribute whose value is "red"</shortdesc>
        <content type="score" default=""/>
      </parameter>
      <parameter name="placement-strategy" advanced="0" generated="0">
        <longdesc lang="en">How the cluster should allocate resources to nodes</longdesc>
        <shortdesc lang="en">How the cluster should allocate resources to nodes</shortdesc>
        <content type="select" default="">
          <option value="default"/>
          <option value="utilization"/>
          <option value="minimal"/>
          <option value="balanced"/>
        </content>
      </parameter>
    </parameters>
  </resource-agent>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: List non-advanced cluster options (XML) (shows all) - OK (0) =#=#=#=
* Passed: crm_attribute  - List non-advanced cluster options (XML) (shows all)
=#=#=#= Begin test: List all available cluster options =#=#=#=
Pacemaker cluster options

Also known as properties, these are options that affect behavior across the entire cluster. They are configured within cluster_property_set elements inside the crm_config subsection of the CIB configuration section.

  * dc-version: Pacemaker version on cluster node elected Designated Controller (DC)
    * Includes a hash which identifies the exact revision the code was built from. Used for diagnostic purposes.
    * Possible values (generated by Pacemaker): version (no default)

  * cluster-infrastructure: The messaging layer on which Pacemaker is currently running
    * Used for informational and diagnostic purposes.
    * Possible values (generated by Pacemaker): string (no default)

  * cluster-name: An arbitrary name for the cluster
    * This optional value is mostly for users' convenience as desired in administration, but may also be used in Pacemaker configuration rules via the #cluster-name node attribute, and by higher-level tools and resource agents.
    * Possible values: string (no default)

  * dc-deadtime: How long to wait for a response from other nodes during start-up
    * The optimal value will depend on the speed and load of your network and the type of switches used.
    * Possible values: duration (default: )

  * cluster-recheck-interval: Polling interval to recheck cluster state and evaluate rules with date specifications
    * Pacemaker is primarily event-driven, and looks ahead to know when to recheck cluster state for failure-timeout settings and most time-based rules. However, it will also recheck the cluster after this amount of inactivity, to evaluate rules with date specifications and serve as a fail-safe for certain types of scheduler bugs. A value of 0 disables polling. A positive value sets an interval in seconds, unless other units are specified (for example, "5min").
    * Possible values: duration (default: )

  * fence-reaction: How a cluster node should react if notified of its own fencing
    * A cluster node may receive notification of a "succeeded" fencing that targeted it if fencing is misconfigured, or if fabric fencing is in use that doesn't cut cluster communication. Use "stop" to attempt to immediately stop Pacemaker and stay stopped, or "panic" to attempt to immediately reboot the local node, falling back to stop on failure.
    * Possible values: "stop" (default), "panic"

  * no-quorum-policy: What to do when the cluster does not have quorum
    * Possible values: "stop" (default), "freeze", "ignore", "demote", "fence", "suicide"

  * shutdown-lock: Whether to lock resources to a cleanly shut down node
    * When true, resources active on a node when it is cleanly shut down are kept "locked" to that node (not allowed to run elsewhere) until they start again on that node after it rejoins (or for at most shutdown-lock-limit, if set). Stonith resources and Pacemaker Remote connections are never locked. Clone and bundle instances and the promoted role of promotable clones are currently never locked, though support could be added in a future release.
    * Possible values: boolean (default: )

  * shutdown-lock-limit: Do not lock resources to a cleanly shut down node longer than this
    * If shutdown-lock is true and this is set to a nonzero time duration, shutdown locks will expire after this much time has passed since the shutdown was initiated, even if the node has not rejoined.
    * Possible values: duration (default: )

  * enable-acl: Enable Access Control Lists (ACLs) for the CIB
    * Possible values: boolean (default: )

  * symmetric-cluster: Whether resources can run on any node by default
    * Possible values: boolean (default: )

  * maintenance-mode: Whether the cluster should refrain from monitoring, starting, and stopping resources
    * Possible values: boolean (default: )

  * start-failure-is-fatal: Whether a start failure should prevent a resource from being recovered on the same node
    * When true, the cluster will immediately ban a resource from a node if it fails to start there. When false, the cluster will instead check the resource's fail count against its migration-threshold.
    * Possible values: boolean (default: )

  * enable-startup-probes: Whether the cluster should check for active resources during start-up
    * Possible values: boolean (default: )

  * stonith-action: Action to send to fence device when a node needs to be fenced ("poweroff" is a deprecated alias for "off")
    * Possible values: "reboot" (default), "off", "poweroff"

  * stonith-timeout: How long to wait for on, off, and reboot fence actions to complete by default
    * Possible values: duration (default: )

  * have-watchdog: Whether watchdog integration is enabled
    * This is set automatically by the cluster according to whether SBD is detected to be in use. User-configured values are ignored. The value `true` is meaningful if diskless SBD is used and `stonith-watchdog-timeout` is nonzero. In that case, if fencing is required, watchdog-based self-fencing will be performed via SBD without requiring a fencing resource explicitly configured.
    * Possible values (generated by Pacemaker): boolean (default: )

  * stonith-watchdog-timeout: How long before nodes can be assumed to be safely down when watchdog-based self-fencing via SBD is in use
    * If this is set to a positive value, lost nodes are assumed to achieve self-fencing using watchdog-based SBD within this much time. This does not require a fencing resource to be explicitly configured, though a fence_watchdog resource can be configured, to limit use to specific nodes. If this is set to 0 (the default), the cluster will never assume watchdog-based self-fencing. If this is set to a negative value, the cluster will use twice the local value of the `SBD_WATCHDOG_TIMEOUT` environment variable if that is positive, or otherwise treat this as 0. WARNING: When used, this timeout must be larger than `SBD_WATCHDOG_TIMEOUT` on all nodes that use watchdog-based SBD, and Pacemaker will refuse to start on any of those nodes where this is not true for the local value or SBD is not active. When this is set to a negative value, `SBD_WATCHDOG_TIMEOUT` must be set to the same value on all nodes that use SBD, otherwise data corruption or loss could occur.
    * Possible values: timeout (default: )

  * stonith-max-attempts: How many times fencing can fail before it will no longer be immediately re-attempted on a target
    * Possible values: score (default: )

  * concurrent-fencing: Allow performing fencing operations in parallel
    * Possible values: boolean (default: )

  * priority-fencing-delay: Apply fencing delay targeting the lost nodes with the highest total resource priority
    * Apply specified delay for the fencings that are targeting the lost nodes with the highest total resource priority in case we don't have the majority of the nodes in our cluster partition, so that the more significant nodes potentially win any fencing match, which is especially meaningful under split-brain of 2-node cluster. A promoted resource instance takes the base priority + 1 on calculation if the base priority is not 0. Any static/random delays that are introduced by `pcmk_delay_base/max` configured for the corresponding fencing resources will be added to this delay. This delay should be significantly greater than, safely twice, the maximum `pcmk_delay_base/max`. By default, priority fencing delay is disabled.
    * Possible values: duration (default: )

  * node-pending-timeout: How long to wait for a node that has joined the cluster to join the controller process group
    * Fence nodes that do not join the controller process group within this much time after joining the cluster, to allow the cluster to continue managing resources. A value of 0 means never fence pending nodes. Setting the value to 2h means fence nodes after 2 hours.
    * Possible values: duration (default: )

  * cluster-delay: Maximum time for node-to-node communication
    * The node elected Designated Controller (DC) will consider an action failed if it does not get a response from the node executing the action within this time (after considering the action's own timeout). The "correct" value will depend on the speed and load of your network and cluster nodes.
    * Possible values: duration (default: )

  * load-threshold: Maximum amount of system load that should be used by cluster nodes
    * The cluster will slow down its recovery process when the amount of system resources used (currently CPU) approaches this limit
    * Possible values: percentage (default: )

  * node-action-limit: Maximum number of jobs that can be scheduled per node (defaults to 2x cores)
    * Possible values: integer (default: )

  * batch-limit: Maximum number of jobs that the cluster may execute in parallel across all nodes
    * The "correct" value will depend on the speed and load of your network and cluster nodes. If set to 0, the cluster will impose a dynamically calculated limit when any node has a high load.
    * Possible values: integer (default: )

  * migration-limit: The number of live migration actions that the cluster is allowed to execute in parallel on a node (-1 means no limit)
    * Possible values: integer (default: )

  * cluster-ipc-limit: Maximum IPC message backlog before disconnecting a cluster daemon
    * Raise this if log has "Evicting client" messages for cluster daemon PIDs (a good value is the number of resources in the cluster multiplied by the number of nodes).
    * Possible values: nonnegative_integer (default: )

  * stop-all-resources: Whether the cluster should stop all active resources
    * Possible values: boolean (default: )

  * stop-orphan-resources: Whether to stop resources that were removed from the configuration
    * Possible values: boolean (default: )

  * stop-orphan-actions: Whether to cancel recurring actions removed from the configuration
    * Possible values: boolean (default: )

  * pe-error-series-max: The number of scheduler inputs resulting in errors to save
    * Zero to disable, -1 to store unlimited.
    * Possible values: integer (default: )

  * pe-warn-series-max: The number of scheduler inputs resulting in warnings to save
    * Zero to disable, -1 to store unlimited.
    * Possible values: integer (default: )

  * pe-input-series-max: The number of scheduler inputs without errors or warnings to save
    * Zero to disable, -1 to store unlimited.
    * Possible values: integer (default: )

  * node-health-strategy: How cluster should react to node health attributes
    * Requires external entities to create node attributes (named with the prefix "#health") with values "red", "yellow", or "green".
    * Possible values: "none" (default), "migrate-on-red", "only-green", "progressive", "custom"

  * node-health-base: Base health score assigned to a node
    * Only used when "node-health-strategy" is set to "progressive".
    * Possible values: score (default: )

  * node-health-green: The score to use for a node health attribute whose value is "green"
    * Only used when "node-health-strategy" is set to "custom" or "progressive".
    * Possible values: score (default: )

  * node-health-yellow: The score to use for a node health attribute whose value is "yellow"
    * Only used when "node-health-strategy" is set to "custom" or "progressive".
    * Possible values: score (default: )

  * node-health-red: The score to use for a node health attribute whose value is "red"
    * Only used when "node-health-strategy" is set to "custom" or "progressive".
    * Possible values: score (default: )

  * placement-strategy: How the cluster should allocate resources to nodes
    * Possible values: "default" (default), "utilization", "minimal", "balanced"

  * ADVANCED OPTIONS:

    * election-timeout: Declare an election failed if it is not decided within this much time. If you need to adjust this value, it probably indicates the presence of a bug.
      * Possible values: duration (default: )

    * shutdown-escalation: Exit immediately if shutdown does not complete within this much time. If you need to adjust this value, it probably indicates the presence of a bug.
      * Possible values: duration (default: )

    * join-integration-timeout: If you need to adjust this value, it probably indicates the presence of a bug.
      * Possible values: duration (default: )

    * join-finalization-timeout: If you need to adjust this value, it probably indicates the presence of a bug.
      * Possible values: duration (default: )

    * transition-delay: Enabling this option will slow down cluster recovery under all conditions
      * Delay cluster recovery for this much time to allow for additional events to occur. Useful if your configuration is sensitive to the order in which ping updates arrive.
      * Possible values: duration (default: )

    * fence-remote-without-quorum: Whether remote nodes can be fenced without quorum
      * By default, inquorate nodes can fence Pacemaker Remote nodes that are part of its partition regardless of whether the resource was successfully restarted elsewhere.  If false, an additional check will be added to only fence remote nodes if the cluster thinks they were unable to be restarted.
      * Possible values: boolean (default: )

    * stonith-enabled: Whether nodes may be fenced as part of recovery
      * If false, unresponsive nodes are immediately assumed to be harmless, and resources that were active on them may be recovered elsewhere. This can result in a "split-brain" situation, potentially leading to data loss and/or service unavailability.
      * Possible values: boolean (default: )

    * startup-fencing: Whether to fence unseen nodes at start-up
      * Setting this to false may lead to a "split-brain" situation, potentially leading to data loss and/or service unavailability.
      * Possible values: boolean (default: )

  * DEPRECATED OPTIONS (will be removed in a future release):

    * remove-after-stop: Whether to remove stopped resources from the executor
      * Values other than default are poorly tested and potentially dangerous.
      * Possible values: boolean (default: )
=#=#=#= End test: List all available cluster options - OK (0) =#=#=#=
* Passed: crm_attribute  - List all available cluster options
=#=#=#= Begin test: List all available cluster options (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_attribute --list-options=cluster --all --output-as=xml">
  <resource-agent name="cluster-options" version="">
    <version>1.1</version>
    <longdesc lang="en">Also known as properties, these are options that affect behavior across the entire cluster. They are configured within cluster_property_set elements inside the crm_config subsection of the CIB configuration section.</longdesc>
    <shortdesc lang="en">Pacemaker cluster options</shortdesc>
    <parameters>
      <parameter name="dc-version" advanced="0" generated="1">
        <longdesc lang="en">Includes a hash which identifies the exact revision the code was built from. Used for diagnostic purposes.</longdesc>
        <shortdesc lang="en">Pacemaker version on cluster node elected Designated Controller (DC)</shortdesc>
        <content type="version"/>
      </parameter>
      <parameter name="cluster-infrastructure" advanced="0" generated="1">
        <longdesc lang="en">Used for informational and diagnostic purposes.</longdesc>
        <shortdesc lang="en">The messaging layer on which Pacemaker is currently running</shortdesc>
        <content type="string"/>
      </parameter>
      <parameter name="cluster-name" advanced="0" generated="0">
        <longdesc lang="en">This optional value is mostly for users' convenience as desired in administration, but may also be used in Pacemaker configuration rules via the #cluster-name node attribute, and by higher-level tools and resource agents.</longdesc>
        <shortdesc lang="en">An arbitrary name for the cluster</shortdesc>
        <content type="string"/>
      </parameter>
      <parameter name="dc-deadtime" advanced="0" generated="0">
        <longdesc lang="en">The optimal value will depend on the speed and load of your network and the type of switches used.</longdesc>
        <shortdesc lang="en">How long to wait for a response from other nodes during start-up</shortdesc>
        <content type="duration" default=""/>
      </parameter>
      <parameter name="cluster-recheck-interval" advanced="0" generated="0">
        <longdesc lang="en">Pacemaker is primarily event-driven, and looks ahead to know when to recheck cluster state for failure-timeout settings and most time-based rules. However, it will also recheck the cluster after this amount of inactivity, to evaluate rules with date specifications and serve as a fail-safe for certain types of scheduler bugs. A value of 0 disables polling. A positive value sets an interval in seconds, unless other units are specified (for example, "5min").</longdesc>
        <shortdesc lang="en">Polling interval to recheck cluster state and evaluate rules with date specifications</shortdesc>
        <content type="duration" default=""/>
      </parameter>
      <parameter name="fence-reaction" advanced="0" generated="0">
        <longdesc lang="en">A cluster node may receive notification of a "succeeded" fencing that targeted it if fencing is misconfigured, or if fabric fencing is in use that doesn't cut cluster communication. Use "stop" to attempt to immediately stop Pacemaker and stay stopped, or "panic" to attempt to immediately reboot the local node, falling back to stop on failure.</longdesc>
        <shortdesc lang="en">How a cluster node should react if notified of its own fencing</shortdesc>
        <content type="select" default="">
          <option value="stop"/>
          <option value="panic"/>
        </content>
      </parameter>
      <parameter name="election-timeout" advanced="1" generated="0">
        <longdesc lang="en">Declare an election failed if it is not decided within this much time. If you need to adjust this value, it probably indicates the presence of a bug.</longdesc>
        <shortdesc lang="en">Declare an election failed if it is not decided within this much time. If you need to adjust this value, it probably indicates the presence of a bug.</shortdesc>
        <content type="duration" default=""/>
      </parameter>
      <parameter name="shutdown-escalation" advanced="1" generated="0">
        <longdesc lang="en">Exit immediately if shutdown does not complete within this much time. If you need to adjust this value, it probably indicates the presence of a bug.</longdesc>
        <shortdesc lang="en">Exit immediately if shutdown does not complete within this much time. If you need to adjust this value, it probably indicates the presence of a bug.</shortdesc>
        <content type="duration" default=""/>
      </parameter>
      <parameter name="join-integration-timeout" advanced="1" generated="0">
        <longdesc lang="en">If you need to adjust this value, it probably indicates the presence of a bug.</longdesc>
        <shortdesc lang="en">If you need to adjust this value, it probably indicates the presence of a bug.</shortdesc>
        <content type="duration" default=""/>
      </parameter>
      <parameter name="join-finalization-timeout" advanced="1" generated="0">
        <longdesc lang="en">If you need to adjust this value, it probably indicates the presence of a bug.</longdesc>
        <shortdesc lang="en">If you need to adjust this value, it probably indicates the presence of a bug.</shortdesc>
        <content type="duration" default=""/>
      </parameter>
      <parameter name="transition-delay" advanced="1" generated="0">
        <longdesc lang="en">Delay cluster recovery for this much time to allow for additional events to occur. Useful if your configuration is sensitive to the order in which ping updates arrive.</longdesc>
        <shortdesc lang="en">Enabling this option will slow down cluster recovery under all conditions</shortdesc>
        <content type="duration" default=""/>
      </parameter>
      <parameter name="no-quorum-policy" advanced="0" generated="0">
        <longdesc lang="en">What to do when the cluster does not have quorum</longdesc>
        <shortdesc lang="en">What to do when the cluster does not have quorum</shortdesc>
        <content type="select" default="">
          <option value="stop"/>
          <option value="freeze"/>
          <option value="ignore"/>
          <option value="demote"/>
          <option value="fence"/>
          <option value="suicide"/>
        </content>
      </parameter>
      <parameter name="shutdown-lock" advanced="0" generated="0">
        <longdesc lang="en">When true, resources active on a node when it is cleanly shut down are kept "locked" to that node (not allowed to run elsewhere) until they start again on that node after it rejoins (or for at most shutdown-lock-limit, if set). Stonith resources and Pacemaker Remote connections are never locked. Clone and bundle instances and the promoted role of promotable clones are currently never locked, though support could be added in a future release.</longdesc>
        <shortdesc lang="en">Whether to lock resources to a cleanly shut down node</shortdesc>
        <content type="boolean" default=""/>
      </parameter>
      <parameter name="shutdown-lock-limit" advanced="0" generated="0">
        <longdesc lang="en">If shutdown-lock is true and this is set to a nonzero time duration, shutdown locks will expire after this much time has passed since the shutdown was initiated, even if the node has not rejoined.</longdesc>
        <shortdesc lang="en">Do not lock resources to a cleanly shut down node longer than this</shortdesc>
        <content type="duration" default=""/>
      </parameter>
      <parameter name="enable-acl" advanced="0" generated="0">
        <longdesc lang="en">Enable Access Control Lists (ACLs) for the CIB</longdesc>
        <shortdesc lang="en">Enable Access Control Lists (ACLs) for the CIB</shortdesc>
        <content type="boolean" default=""/>
      </parameter>
      <parameter name="symmetric-cluster" advanced="0" generated="0">
        <longdesc lang="en">Whether resources can run on any node by default</longdesc>
        <shortdesc lang="en">Whether resources can run on any node by default</shortdesc>
        <content type="boolean" default=""/>
      </parameter>
      <parameter name="maintenance-mode" advanced="0" generated="0">
        <longdesc lang="en">Whether the cluster should refrain from monitoring, starting, and stopping resources</longdesc>
        <shortdesc lang="en">Whether the cluster should refrain from monitoring, starting, and stopping resources</shortdesc>
        <content type="boolean" default=""/>
      </parameter>
      <parameter name="start-failure-is-fatal" advanced="0" generated="0">
        <longdesc lang="en">When true, the cluster will immediately ban a resource from a node if it fails to start there. When false, the cluster will instead check the resource's fail count against its migration-threshold.</longdesc>
        <shortdesc lang="en">Whether a start failure should prevent a resource from being recovered on the same node</shortdesc>
        <content type="boolean" default=""/>
      </parameter>
      <parameter name="enable-startup-probes" advanced="0" generated="0">
        <longdesc lang="en">Whether the cluster should check for active resources during start-up</longdesc>
        <shortdesc lang="en">Whether the cluster should check for active resources during start-up</shortdesc>
        <content type="boolean" default=""/>
      </parameter>
      <parameter name="fence-remote-without-quorum" advanced="1" generated="0">
        <longdesc lang="en">By default, inquorate nodes can fence Pacemaker Remote nodes that are part of its partition regardless of whether the resource was successfully restarted elsewhere.  If false, an additional check will be added to only fence remote nodes if the cluster thinks they were unable to be restarted.</longdesc>
        <shortdesc lang="en">Whether remote nodes can be fenced without quorum</shortdesc>
        <content type="boolean" default=""/>
      </parameter>
      <parameter name="stonith-enabled" advanced="1" generated="0">
        <longdesc lang="en">If false, unresponsive nodes are immediately assumed to be harmless, and resources that were active on them may be recovered elsewhere. This can result in a "split-brain" situation, potentially leading to data loss and/or service unavailability.</longdesc>
        <shortdesc lang="en">Whether nodes may be fenced as part of recovery</shortdesc>
        <content type="boolean" default=""/>
      </parameter>
      <parameter name="stonith-action" advanced="0" generated="0">
        <longdesc lang="en">Action to send to fence device when a node needs to be fenced ("poweroff" is a deprecated alias for "off")</longdesc>
        <shortdesc lang="en">Action to send to fence device when a node needs to be fenced ("poweroff" is a deprecated alias for "off")</shortdesc>
        <content type="select" default="">
          <option value="reboot"/>
          <option value="off"/>
          <option value="poweroff"/>
        </content>
      </parameter>
      <parameter name="stonith-timeout" advanced="0" generated="0">
        <longdesc lang="en">How long to wait for on, off, and reboot fence actions to complete by default</longdesc>
        <shortdesc lang="en">How long to wait for on, off, and reboot fence actions to complete by default</shortdesc>
        <content type="duration" default=""/>
      </parameter>
      <parameter name="have-watchdog" advanced="0" generated="1">
        <longdesc lang="en">This is set automatically by the cluster according to whether SBD is detected to be in use. User-configured values are ignored. The value `true` is meaningful if diskless SBD is used and `stonith-watchdog-timeout` is nonzero. In that case, if fencing is required, watchdog-based self-fencing will be performed via SBD without requiring a fencing resource explicitly configured.</longdesc>
        <shortdesc lang="en">Whether watchdog integration is enabled</shortdesc>
        <content type="boolean" default=""/>
      </parameter>
      <parameter name="stonith-watchdog-timeout" advanced="0" generated="0">
        <longdesc lang="en">If this is set to a positive value, lost nodes are assumed to achieve self-fencing using watchdog-based SBD within this much time. This does not require a fencing resource to be explicitly configured, though a fence_watchdog resource can be configured, to limit use to specific nodes. If this is set to 0 (the default), the cluster will never assume watchdog-based self-fencing. If this is set to a negative value, the cluster will use twice the local value of the `SBD_WATCHDOG_TIMEOUT` environment variable if that is positive, or otherwise treat this as 0. WARNING: When used, this timeout must be larger than `SBD_WATCHDOG_TIMEOUT` on all nodes that use watchdog-based SBD, and Pacemaker will refuse to start on any of those nodes where this is not true for the local value or SBD is not active. When this is set to a negative value, `SBD_WATCHDOG_TIMEOUT` must be set to the same value on all nodes that use SBD, otherwise data corruption or loss could occur.</longdesc>
        <shortdesc lang="en">How long before nodes can be assumed to be safely down when watchdog-based self-fencing via SBD is in use</shortdesc>
        <content type="timeout" default=""/>
      </parameter>
      <parameter name="stonith-max-attempts" advanced="0" generated="0">
        <longdesc lang="en">How many times fencing can fail before it will no longer be immediately re-attempted on a target</longdesc>
        <shortdesc lang="en">How many times fencing can fail before it will no longer be immediately re-attempted on a target</shortdesc>
        <content type="score" default=""/>
      </parameter>
      <parameter name="concurrent-fencing" advanced="0" generated="0">
        <longdesc lang="en">Allow performing fencing operations in parallel</longdesc>
        <shortdesc lang="en">Allow performing fencing operations in parallel</shortdesc>
        <content type="boolean" default=""/>
      </parameter>
      <parameter name="startup-fencing" advanced="1" generated="0">
        <longdesc lang="en">Setting this to false may lead to a "split-brain" situation, potentially leading to data loss and/or service unavailability.</longdesc>
        <shortdesc lang="en">Whether to fence unseen nodes at start-up</shortdesc>
        <content type="boolean" default=""/>
      </parameter>
      <parameter name="priority-fencing-delay" advanced="0" generated="0">
        <longdesc lang="en">Apply specified delay for the fencings that are targeting the lost nodes with the highest total resource priority in case we don't have the majority of the nodes in our cluster partition, so that the more significant nodes potentially win any fencing match, which is especially meaningful under split-brain of 2-node cluster. A promoted resource instance takes the base priority + 1 on calculation if the base priority is not 0. Any static/random delays that are introduced by `pcmk_delay_base/max` configured for the corresponding fencing resources will be added to this delay. This delay should be significantly greater than, safely twice, the maximum `pcmk_delay_base/max`. By default, priority fencing delay is disabled.</longdesc>
        <shortdesc lang="en">Apply fencing delay targeting the lost nodes with the highest total resource priority</shortdesc>
        <content type="duration" default=""/>
      </parameter>
      <parameter name="node-pending-timeout" advanced="0" generated="0">
        <longdesc lang="en">Fence nodes that do not join the controller process group within this much time after joining the cluster, to allow the cluster to continue managing resources. A value of 0 means never fence pending nodes. Setting the value to 2h means fence nodes after 2 hours.</longdesc>
        <shortdesc lang="en">How long to wait for a node that has joined the cluster to join the controller process group</shortdesc>
        <content type="duration" default=""/>
      </parameter>
      <parameter name="cluster-delay" advanced="0" generated="0">
        <longdesc lang="en">The node elected Designated Controller (DC) will consider an action failed if it does not get a response from the node executing the action within this time (after considering the action's own timeout). The "correct" value will depend on the speed and load of your network and cluster nodes.</longdesc>
        <shortdesc lang="en">Maximum time for node-to-node communication</shortdesc>
        <content type="duration" default=""/>
      </parameter>
      <parameter name="load-threshold" advanced="0" generated="0">
        <longdesc lang="en">The cluster will slow down its recovery process when the amount of system resources used (currently CPU) approaches this limit</longdesc>
        <shortdesc lang="en">Maximum amount of system load that should be used by cluster nodes</shortdesc>
        <content type="percentage" default=""/>
      </parameter>
      <parameter name="node-action-limit" advanced="0" generated="0">
        <longdesc lang="en">Maximum number of jobs that can be scheduled per node (defaults to 2x cores)</longdesc>
        <shortdesc lang="en">Maximum number of jobs that can be scheduled per node (defaults to 2x cores)</shortdesc>
        <content type="integer" default=""/>
      </parameter>
      <parameter name="batch-limit" advanced="0" generated="0">
        <longdesc lang="en">The "correct" value will depend on the speed and load of your network and cluster nodes. If set to 0, the cluster will impose a dynamically calculated limit when any node has a high load.</longdesc>
        <shortdesc lang="en">Maximum number of jobs that the cluster may execute in parallel across all nodes</shortdesc>
        <content type="integer" default=""/>
      </parameter>
      <parameter name="migration-limit" advanced="0" generated="0">
        <longdesc lang="en">The number of live migration actions that the cluster is allowed to execute in parallel on a node (-1 means no limit)</longdesc>
        <shortdesc lang="en">The number of live migration actions that the cluster is allowed to execute in parallel on a node (-1 means no limit)</shortdesc>
        <content type="integer" default=""/>
      </parameter>
      <parameter name="cluster-ipc-limit" advanced="0" generated="0">
        <longdesc lang="en">Raise this if log has "Evicting client" messages for cluster daemon PIDs (a good value is the number of resources in the cluster multiplied by the number of nodes).</longdesc>
        <shortdesc lang="en">Maximum IPC message backlog before disconnecting a cluster daemon</shortdesc>
        <content type="nonnegative_integer" default=""/>
      </parameter>
      <parameter name="stop-all-resources" advanced="0" generated="0">
        <longdesc lang="en">Whether the cluster should stop all active resources</longdesc>
        <shortdesc lang="en">Whether the cluster should stop all active resources</shortdesc>
        <content type="boolean" default=""/>
      </parameter>
      <parameter name="stop-orphan-resources" advanced="0" generated="0">
        <longdesc lang="en">Whether to stop resources that were removed from the configuration</longdesc>
        <shortdesc lang="en">Whether to stop resources that were removed from the configuration</shortdesc>
        <content type="boolean" default=""/>
      </parameter>
      <parameter name="stop-orphan-actions" advanced="0" generated="0">
        <longdesc lang="en">Whether to cancel recurring actions removed from the configuration</longdesc>
        <shortdesc lang="en">Whether to cancel recurring actions removed from the configuration</shortdesc>
        <content type="boolean" default=""/>
      </parameter>
      <parameter name="remove-after-stop" advanced="0" generated="0">
        <deprecated/>
        <longdesc lang="en">Values other than default are poorly tested and potentially dangerous.</longdesc>
        <shortdesc lang="en">Whether to remove stopped resources from the executor</shortdesc>
        <content type="boolean" default=""/>
      </parameter>
      <parameter name="pe-error-series-max" advanced="0" generated="0">
        <longdesc lang="en">Zero to disable, -1 to store unlimited.</longdesc>
        <shortdesc lang="en">The number of scheduler inputs resulting in errors to save</shortdesc>
        <content type="integer" default=""/>
      </parameter>
      <parameter name="pe-warn-series-max" advanced="0" generated="0">
        <longdesc lang="en">Zero to disable, -1 to store unlimited.</longdesc>
        <shortdesc lang="en">The number of scheduler inputs resulting in warnings to save</shortdesc>
        <content type="integer" default=""/>
      </parameter>
      <parameter name="pe-input-series-max" advanced="0" generated="0">
        <longdesc lang="en">Zero to disable, -1 to store unlimited.</longdesc>
        <shortdesc lang="en">The number of scheduler inputs without errors or warnings to save</shortdesc>
        <content type="integer" default=""/>
      </parameter>
      <parameter name="node-health-strategy" advanced="0" generated="0">
        <longdesc lang="en">Requires external entities to create node attributes (named with the prefix "#health") with values "red", "yellow", or "green".</longdesc>
        <shortdesc lang="en">How cluster should react to node health attributes</shortdesc>
        <content type="select" default="">
          <option value="none"/>
          <option value="migrate-on-red"/>
          <option value="only-green"/>
          <option value="progressive"/>
          <option value="custom"/>
        </content>
      </parameter>
      <parameter name="node-health-base" advanced="0" generated="0">
        <longdesc lang="en">Only used when "node-health-strategy" is set to "progressive".</longdesc>
        <shortdesc lang="en">Base health score assigned to a node</shortdesc>
        <content type="score" default=""/>
      </parameter>
      <parameter name="node-health-green" advanced="0" generated="0">
        <longdesc lang="en">Only used when "node-health-strategy" is set to "custom" or "progressive".</longdesc>
        <shortdesc lang="en">The score to use for a node health attribute whose value is "green"</shortdesc>
        <content type="score" default=""/>
      </parameter>
      <parameter name="node-health-yellow" advanced="0" generated="0">
        <longdesc lang="en">Only used when "node-health-strategy" is set to "custom" or "progressive".</longdesc>
        <shortdesc lang="en">The score to use for a node health attribute whose value is "yellow"</shortdesc>
        <content type="score" default=""/>
      </parameter>
      <parameter name="node-health-red" advanced="0" generated="0">
        <longdesc lang="en">Only used when "node-health-strategy" is set to "custom" or "progressive".</longdesc>
        <shortdesc lang="en">The score to use for a node health attribute whose value is "red"</shortdesc>
        <content type="score" default=""/>
      </parameter>
      <parameter name="placement-strategy" advanced="0" generated="0">
        <longdesc lang="en">How the cluster should allocate resources to nodes</longdesc>
        <shortdesc lang="en">How the cluster should allocate resources to nodes</shortdesc>
        <content type="select" default="">
          <option value="default"/>
          <option value="utilization"/>
          <option value="minimal"/>
          <option value="balanced"/>
        </content>
      </parameter>
    </parameters>
  </resource-agent>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: List all available cluster options (XML) - OK (0) =#=#=#=
* Passed: crm_attribute  - List all available cluster options (XML)
=#=#=#= Begin test: Query the value of an attribute that does not exist =#=#=#=
crm_attribute: Error performing operation: No such device or address
=#=#=#= End test: Query the value of an attribute that does not exist - No such object (105) =#=#=#=
* Passed: crm_attribute  - Query the value of an attribute that does not exist
=#=#=#= Begin test: Configure something before erasing =#=#=#=
=#=#=#= Current cib after: Configure something before erasing =#=#=#=
<cib epoch="2" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-test_attr" name="test_attr" value="5"/>
      </cluster_property_set>
    </crm_config>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Configure something before erasing - OK (0) =#=#=#=
* Passed: crm_attribute  - Configure something before erasing
=#=#=#= Begin test: Test '++' XML attribute update syntax =#=#=#=
=#=#=#= Current cib after: Test '++' XML attribute update syntax =#=#=#=
<cib epoch="2" num_updates="1" admin_epoch="1">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-test_attr" name="test_attr" value="5"/>
      </cluster_property_set>
    </crm_config>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Test '++' XML attribute update syntax - OK (0) =#=#=#=
* Passed: cibadmin       - Test '++' XML attribute update syntax
=#=#=#= Begin test: Test '+=' XML attribute update syntax =#=#=#=
=#=#=#= Current cib after: Test '+=' XML attribute update syntax =#=#=#=
<cib epoch="2" num_updates="2" admin_epoch="3">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-test_attr" name="test_attr" value="5"/>
      </cluster_property_set>
    </crm_config>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Test '+=' XML attribute update syntax - OK (0) =#=#=#=
* Passed: cibadmin       - Test '+=' XML attribute update syntax
=#=#=#= Begin test: Test '++' nvpair value update syntax =#=#=#=
=#=#=#= Current cib after: Test '++' nvpair value update syntax =#=#=#=
<cib epoch="3" num_updates="0" admin_epoch="3">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-test_attr" name="test_attr" value="6"/>
      </cluster_property_set>
    </crm_config>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Test '++' nvpair value update syntax - OK (0) =#=#=#=
* Passed: crm_attribute  - Test '++' nvpair value update syntax
=#=#=#= Begin test: Test '++' nvpair value update syntax (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_attribute -n test_attr -v value++ --score --output-as=xml">
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= Current cib after: Test '++' nvpair value update syntax (XML) =#=#=#=
<cib epoch="4" num_updates="0" admin_epoch="3">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-test_attr" name="test_attr" value="7"/>
      </cluster_property_set>
    </crm_config>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Test '++' nvpair value update syntax (XML) - OK (0) =#=#=#=
* Passed: crm_attribute  - Test '++' nvpair value update syntax (XML)
=#=#=#= Begin test: Test '+=' nvpair value update syntax =#=#=#=
=#=#=#= Current cib after: Test '+=' nvpair value update syntax =#=#=#=
<cib epoch="5" num_updates="0" admin_epoch="3">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-test_attr" name="test_attr" value="9"/>
      </cluster_property_set>
    </crm_config>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Test '+=' nvpair value update syntax - OK (0) =#=#=#=
* Passed: crm_attribute  - Test '+=' nvpair value update syntax
=#=#=#= Begin test: Test '+=' nvpair value update syntax (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_attribute -n test_attr -v value+=2 --score --output-as=xml">
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= Current cib after: Test '+=' nvpair value update syntax (XML) =#=#=#=
<cib epoch="6" num_updates="0" admin_epoch="3">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-test_attr" name="test_attr" value="11"/>
      </cluster_property_set>
    </crm_config>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Test '+=' nvpair value update syntax (XML) - OK (0) =#=#=#=
* Passed: crm_attribute  - Test '+=' nvpair value update syntax (XML)
=#=#=#= Begin test: Test '++' XML attribute update syntax (--score not set) =#=#=#=
=#=#=#= Current cib after: Test '++' XML attribute update syntax (--score not set) =#=#=#=
<cib epoch="6" num_updates="1" admin_epoch="4">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-test_attr" name="test_attr" value="11"/>
      </cluster_property_set>
    </crm_config>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Test '++' XML attribute update syntax (--score not set) - OK (0) =#=#=#=
* Passed: cibadmin       - Test '++' XML attribute update syntax (--score not set)
=#=#=#= Begin test: Test '+=' XML attribute update syntax (--score not set) =#=#=#=
=#=#=#= Current cib after: Test '+=' XML attribute update syntax (--score not set) =#=#=#=
<cib epoch="6" num_updates="2" admin_epoch="6">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-test_attr" name="test_attr" value="11"/>
      </cluster_property_set>
    </crm_config>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Test '+=' XML attribute update syntax (--score not set) - OK (0) =#=#=#=
* Passed: cibadmin       - Test '+=' XML attribute update syntax (--score not set)
=#=#=#= Begin test: Test '++' nvpair value update syntax (--score not set) =#=#=#=
=#=#=#= Current cib after: Test '++' nvpair value update syntax (--score not set) =#=#=#=
<cib epoch="7" num_updates="0" admin_epoch="6">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-test_attr" name="test_attr" value="12"/>
      </cluster_property_set>
    </crm_config>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Test '++' nvpair value update syntax (--score not set) - OK (0) =#=#=#=
* Passed: crm_attribute  - Test '++' nvpair value update syntax (--score not set)
=#=#=#= Begin test: Test '++' nvpair value update syntax (--score not set) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_attribute -n test_attr -v value++ --output-as=xml">
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= Current cib after: Test '++' nvpair value update syntax (--score not set) (XML) =#=#=#=
<cib epoch="8" num_updates="0" admin_epoch="6">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-test_attr" name="test_attr" value="13"/>
      </cluster_property_set>
    </crm_config>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Test '++' nvpair value update syntax (--score not set) (XML) - OK (0) =#=#=#=
* Passed: crm_attribute  - Test '++' nvpair value update syntax (--score not set) (XML)
=#=#=#= Begin test: Test '+=' nvpair value update syntax (--score not set) =#=#=#=
=#=#=#= Current cib after: Test '+=' nvpair value update syntax (--score not set) =#=#=#=
<cib epoch="9" num_updates="0" admin_epoch="6">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-test_attr" name="test_attr" value="15"/>
      </cluster_property_set>
    </crm_config>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Test '+=' nvpair value update syntax (--score not set) - OK (0) =#=#=#=
* Passed: crm_attribute  - Test '+=' nvpair value update syntax (--score not set)
=#=#=#= Begin test: Test '+=' nvpair value update syntax (--score not set) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_attribute -n test_attr -v value+=2 --output-as=xml">
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= Current cib after: Test '+=' nvpair value update syntax (--score not set) (XML) =#=#=#=
<cib epoch="10" num_updates="0" admin_epoch="6">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-test_attr" name="test_attr" value="17"/>
      </cluster_property_set>
    </crm_config>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Test '+=' nvpair value update syntax (--score not set) (XML) - OK (0) =#=#=#=
* Passed: crm_attribute  - Test '+=' nvpair value update syntax (--score not set) (XML)
=#=#=#= Begin test: Require --force for CIB erasure =#=#=#=
cibadmin: The supplied command is considered dangerous. To prevent accidental destruction of the cluster, the --force flag is required in order to proceed.
=#=#=#= Current cib after: Require --force for CIB erasure =#=#=#=
<cib epoch="10" num_updates="0" admin_epoch="6">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-test_attr" name="test_attr" value="17"/>
      </cluster_property_set>
    </crm_config>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Require --force for CIB erasure - Operation not safe (107) =#=#=#=
* Passed: cibadmin       - Require --force for CIB erasure
=#=#=#= Begin test: Allow CIB erasure with --force =#=#=#=
=#=#=#= End test: Allow CIB erasure with --force - OK (0) =#=#=#=
* Passed: cibadmin       - Allow CIB erasure with --force
=#=#=#= Begin test: Query CIB =#=#=#=
<cib epoch="1" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config/>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= Current cib after: Query CIB =#=#=#=
<cib epoch="1" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config/>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Query CIB - OK (0) =#=#=#=
* Passed: cibadmin       - Query CIB
=#=#=#= Begin test: Set cluster option =#=#=#=
=#=#=#= Current cib after: Set cluster option =#=#=#=
<cib epoch="2" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-cluster-delay" name="cluster-delay" value="60s"/>
      </cluster_property_set>
    </crm_config>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Set cluster option - OK (0) =#=#=#=
* Passed: crm_attribute  - Set cluster option
=#=#=#= Begin test: Query new cluster option =#=#=#=
    <nvpair id="cib-bootstrap-options-cluster-delay" name="cluster-delay" value="60s"/>
=#=#=#= Current cib after: Query new cluster option =#=#=#=
<cib epoch="2" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-cluster-delay" name="cluster-delay" value="60s"/>
      </cluster_property_set>
    </crm_config>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Query new cluster option - OK (0) =#=#=#=
* Passed: cibadmin       - Query new cluster option
=#=#=#= Begin test: Query cluster options =#=#=#=
=#=#=#= Current cib after: Query cluster options =#=#=#=
<cib epoch="2" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-cluster-delay" name="cluster-delay" value="60s"/>
      </cluster_property_set>
    </crm_config>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Query cluster options - OK (0) =#=#=#=
* Passed: cibadmin       - Query cluster options
=#=#=#= Begin test: Set no-quorum policy =#=#=#=
=#=#=#= Current cib after: Set no-quorum policy =#=#=#=
<cib epoch="3" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-cluster-delay" name="cluster-delay" value="60s"/>
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
    </crm_config>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Set no-quorum policy - OK (0) =#=#=#=
* Passed: crm_attribute  - Set no-quorum policy
=#=#=#= Begin test: Delete nvpair =#=#=#=
=#=#=#= Current cib after: Delete nvpair =#=#=#=
<cib epoch="4" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
    </crm_config>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Delete nvpair - OK (0) =#=#=#=
* Passed: cibadmin       - Delete nvpair
=#=#=#= Begin test: Create operation should fail =#=#=#=
Call failed: File exists
<failed>
  <failed_update id="cib-bootstrap-options" object-type="cluster_property_set" operation="cib_create" reason="File exists">
    <cluster_property_set id="cib-bootstrap-options">
      <nvpair id="cib-bootstrap-options-cluster-delay" name="cluster-delay" value="60s"/>
    </cluster_property_set>
  </failed_update>
</failed>
=#=#=#= Current cib after: Create operation should fail =#=#=#=
<cib epoch="4" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
    </crm_config>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Create operation should fail - Requested item already exists (108) =#=#=#=
* Passed: cibadmin       - Create operation should fail
=#=#=#= Begin test: Modify cluster options section =#=#=#=
=#=#=#= Current cib after: Modify cluster options section =#=#=#=
<cib epoch="5" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
        <nvpair id="cib-bootstrap-options-cluster-delay" name="cluster-delay" value="60s"/>
      </cluster_property_set>
    </crm_config>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Modify cluster options section - OK (0) =#=#=#=
* Passed: cibadmin       - Modify cluster options section
=#=#=#= Begin test: Query updated cluster option =#=#=#=
    <nvpair id="cib-bootstrap-options-cluster-delay" name="cluster-delay" value="60s"/>
=#=#=#= Current cib after: Query updated cluster option =#=#=#=
<cib epoch="5" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
        <nvpair id="cib-bootstrap-options-cluster-delay" name="cluster-delay" value="60s"/>
      </cluster_property_set>
    </crm_config>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Query updated cluster option - OK (0) =#=#=#=
* Passed: cibadmin       - Query updated cluster option
=#=#=#= Begin test: Set duplicate cluster option =#=#=#=
=#=#=#= Current cib after: Set duplicate cluster option =#=#=#=
<cib epoch="6" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
        <nvpair id="cib-bootstrap-options-cluster-delay" name="cluster-delay" value="60s"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="40s"/>
      </cluster_property_set>
    </crm_config>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Set duplicate cluster option - OK (0) =#=#=#=
* Passed: crm_attribute  - Set duplicate cluster option
=#=#=#= Begin test: Setting multiply defined cluster option should fail =#=#=#=
crm_attribute: Please choose from one of the matches below and supply the 'id' with --attr-id
Multiple attributes match name=cluster-delay
  Value: 60s 	(id=cib-bootstrap-options-cluster-delay)
  Value: 40s 	(id=duplicate-cluster-delay)
=#=#=#= Current cib after: Setting multiply defined cluster option should fail =#=#=#=
<cib epoch="6" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
        <nvpair id="cib-bootstrap-options-cluster-delay" name="cluster-delay" value="60s"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="40s"/>
      </cluster_property_set>
    </crm_config>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Setting multiply defined cluster option should fail - Multiple items match request (109) =#=#=#=
* Passed: crm_attribute  - Setting multiply defined cluster option should fail
=#=#=#= Begin test: Set cluster option with -s =#=#=#=
=#=#=#= Current cib after: Set cluster option with -s =#=#=#=
<cib epoch="7" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
        <nvpair id="cib-bootstrap-options-cluster-delay" name="cluster-delay" value="60s"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Set cluster option with -s - OK (0) =#=#=#=
* Passed: crm_attribute  - Set cluster option with -s
=#=#=#= Begin test: Delete cluster option with -i =#=#=#=
Deleted crm_config option: id=(null) name=cluster-delay
=#=#=#= Current cib after: Delete cluster option with -i =#=#=#=
<cib epoch="8" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Delete cluster option with -i - OK (0) =#=#=#=
* Passed: crm_attribute  - Delete cluster option with -i
=#=#=#= Begin test: Create node1 and bring it online =#=#=#=
unpack_resources 	error: Resource start-up disabled since no STONITH resources have been defined
unpack_resources 	error: Either configure some or disable STONITH with the stonith-enabled option
unpack_resources 	error: NOTE: Clusters with shared data need STONITH to ensure data integrity
unpack_resources 	error: Resource start-up disabled since no STONITH resources have been defined
unpack_resources 	error: Either configure some or disable STONITH with the stonith-enabled option
unpack_resources 	error: NOTE: Clusters with shared data need STONITH to ensure data integrity
unpack_resources 	error: Resource start-up disabled since no STONITH resources have been defined
unpack_resources 	error: Either configure some or disable STONITH with the stonith-enabled option
unpack_resources 	error: NOTE: Clusters with shared data need STONITH to ensure data integrity
Current cluster status:
  * Full List of Resources:
    * No resources

Performing Requested Modifications:
  * Bringing node node1 online

Transition Summary:

Executing Cluster Transition:

Revised Cluster Status:
  * Node List:
    * Online: [ node1 ]

  * Full List of Resources:
    * No resources
=#=#=#= Current cib after: Create node1 and bring it online =#=#=#=
<cib epoch="9" num_updates="2" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1"/>
    </nodes>
    <resources/>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate"/>
  </status>
</cib>
=#=#=#= End test: Create node1 and bring it online - OK (0) =#=#=#=
* Passed: crm_simulate   - Create node1 and bring it online
=#=#=#= Begin test: Create node attribute =#=#=#=
=#=#=#= Current cib after: Create node attribute =#=#=#=
<cib epoch="10" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources/>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate"/>
  </status>
</cib>
=#=#=#= End test: Create node attribute - OK (0) =#=#=#=
* Passed: crm_attribute  - Create node attribute
=#=#=#= Begin test: Query new node attribute =#=#=#=
      <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
=#=#=#= Current cib after: Query new node attribute =#=#=#=
<cib epoch="10" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources/>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate"/>
  </status>
</cib>
=#=#=#= End test: Query new node attribute - OK (0) =#=#=#=
* Passed: cibadmin       - Query new node attribute
=#=#=#= Begin test: Create second node attribute =#=#=#=
=#=#=#= Current cib after: Create second node attribute =#=#=#=
<cib epoch="11" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
          <nvpair id="nodes-node1-rattr" name="rattr" value="XYZ"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources/>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate"/>
  </status>
</cib>
=#=#=#= End test: Create second node attribute - OK (0) =#=#=#=
* Passed: crm_attribute  - Create second node attribute
=#=#=#= Begin test: Query node attributes by pattern =#=#=#=
scope=nodes name=ram value=1024M
scope=nodes name=rattr value=XYZ
=#=#=#= End test: Query node attributes by pattern - OK (0) =#=#=#=
* Passed: crm_attribute  - Query node attributes by pattern
=#=#=#= Begin test: Update node attributes by pattern =#=#=#=
=#=#=#= Current cib after: Update node attributes by pattern =#=#=#=
<cib epoch="12" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
          <nvpair id="nodes-node1-rattr" name="rattr" value="10"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources/>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate"/>
  </status>
</cib>
=#=#=#= End test: Update node attributes by pattern - OK (0) =#=#=#=
* Passed: crm_attribute  - Update node attributes by pattern
=#=#=#= Begin test: Delete node attributes by pattern =#=#=#=
Deleted nodes attribute: id=nodes-node1-rattr name=rattr
=#=#=#= Current cib after: Delete node attributes by pattern =#=#=#=
<cib epoch="13" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources/>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate"/>
  </status>
</cib>
=#=#=#= End test: Delete node attributes by pattern - OK (0) =#=#=#=
* Passed: crm_attribute  - Delete node attributes by pattern
=#=#=#= Begin test: Set a transient (fail-count) node attribute =#=#=#=
=#=#=#= Current cib after: Set a transient (fail-count) node attribute =#=#=#=
<cib epoch="13" num_updates="1" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources/>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1">
          <nvpair id="status-node1-fail-count-foo" name="fail-count-foo" value="3"/>
        </instance_attributes>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Set a transient (fail-count) node attribute - OK (0) =#=#=#=
* Passed: crm_attribute  - Set a transient (fail-count) node attribute
=#=#=#= Begin test: Query a fail count =#=#=#=
scope=status  name=fail-count-foo value=3
=#=#=#= Current cib after: Query a fail count =#=#=#=
<cib epoch="13" num_updates="1" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources/>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1">
          <nvpair id="status-node1-fail-count-foo" name="fail-count-foo" value="3"/>
        </instance_attributes>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Query a fail count - OK (0) =#=#=#=
* Passed: crm_failcount  - Query a fail count
=#=#=#= Begin test: Show node attributes with crm_simulate =#=#=#=
unpack_resources 	error: Resource start-up disabled since no STONITH resources have been defined
unpack_resources 	error: Either configure some or disable STONITH with the stonith-enabled option
unpack_resources 	error: NOTE: Clusters with shared data need STONITH to ensure data integrity
Current cluster status:
  * Node List:
    * Online: [ node1 ]

  * Full List of Resources:
    * No resources

  * Node Attributes:
    * Node: node1:
      * ram                             	: 1024M     
=#=#=#= End test: Show node attributes with crm_simulate - OK (0) =#=#=#=
* Passed: crm_simulate   - Show node attributes with crm_simulate
=#=#=#= Begin test: Set a second transient node attribute =#=#=#=
=#=#=#= Current cib after: Set a second transient node attribute =#=#=#=
<cib epoch="13" num_updates="2" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources/>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1">
          <nvpair id="status-node1-fail-count-foo" name="fail-count-foo" value="3"/>
          <nvpair id="status-node1-fail-count-bar" name="fail-count-bar" value="5"/>
        </instance_attributes>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Set a second transient node attribute - OK (0) =#=#=#=
* Passed: crm_attribute  - Set a second transient node attribute
=#=#=#= Begin test: Query transient node attributes by pattern =#=#=#=
scope=status name=fail-count-foo value=3
scope=status name=fail-count-bar value=5
=#=#=#= End test: Query transient node attributes by pattern - OK (0) =#=#=#=
* Passed: crm_attribute  - Query transient node attributes by pattern
=#=#=#= Begin test: Update transient node attributes by pattern =#=#=#=
=#=#=#= Current cib after: Update transient node attributes by pattern =#=#=#=
<cib epoch="13" num_updates="4" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources/>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1">
          <nvpair id="status-node1-fail-count-foo" name="fail-count-foo" value="10"/>
          <nvpair id="status-node1-fail-count-bar" name="fail-count-bar" value="10"/>
        </instance_attributes>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Update transient node attributes by pattern - OK (0) =#=#=#=
* Passed: crm_attribute  - Update transient node attributes by pattern
=#=#=#= Begin test: Delete transient node attributes by pattern =#=#=#=
Deleted status attribute: id=status-node1-fail-count-foo name=fail-count-foo
Deleted status attribute: id=status-node1-fail-count-bar name=fail-count-bar
=#=#=#= Current cib after: Delete transient node attributes by pattern =#=#=#=
<cib epoch="13" num_updates="6" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources/>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Delete transient node attributes by pattern - OK (0) =#=#=#=
* Passed: crm_attribute  - Delete transient node attributes by pattern
=#=#=#= Begin test: crm_attribute given invalid delete usage =#=#=#=
crm_attribute: Error: must specify attribute name or pattern to delete
=#=#=#= End test: crm_attribute given invalid delete usage - Incorrect usage (64) =#=#=#=
* Passed: crm_attribute  - crm_attribute given invalid delete usage
=#=#=#= Begin test: Set a utilization node attribute =#=#=#=
=#=#=#= Current cib after: Set a utilization node attribute =#=#=#=
<cib epoch="14" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources/>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Set a utilization node attribute - OK (0) =#=#=#=
* Passed: crm_attribute  - Set a utilization node attribute
=#=#=#= Begin test: Query utilization node attribute =#=#=#=
scope=nodes name=cpu value=1
=#=#=#= End test: Query utilization node attribute - OK (0) =#=#=#=
* Passed: crm_attribute  - Query utilization node attribute
=#=#=#= Begin test: Digest calculation =#=#=#=
Digest: =#=#=#= Current cib after: Digest calculation =#=#=#=
<cib epoch="14" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources/>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Digest calculation - OK (0) =#=#=#=
* Passed: cibadmin       - Digest calculation
=#=#=#= Begin test: Replace operation should fail =#=#=#=
Call failed: Update was older than existing configuration
=#=#=#= Current cib after: Replace operation should fail =#=#=#=
<cib epoch="14" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources/>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Replace operation should fail - Update was older than existing configuration (103) =#=#=#=
* Passed: cibadmin       - Replace operation should fail
=#=#=#= Begin test: Default standby value =#=#=#=
scope=status name=standby value=off
=#=#=#= Current cib after: Default standby value =#=#=#=
<cib epoch="14" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources/>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Default standby value - OK (0) =#=#=#=
* Passed: crm_standby    - Default standby value
=#=#=#= Begin test: Set standby status =#=#=#=
=#=#=#= Current cib after: Set standby status =#=#=#=
<cib epoch="15" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
          <nvpair id="nodes-node1-standby" name="standby" value="true"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources/>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Set standby status - OK (0) =#=#=#=
* Passed: crm_standby    - Set standby status
=#=#=#= Begin test: Query standby value =#=#=#=
scope=nodes name=standby value=true
=#=#=#= Current cib after: Query standby value =#=#=#=
<cib epoch="15" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
          <nvpair id="nodes-node1-standby" name="standby" value="true"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources/>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Query standby value - OK (0) =#=#=#=
* Passed: crm_standby    - Query standby value
=#=#=#= Begin test: Delete standby value =#=#=#=
Deleted nodes attribute: id=nodes-node1-standby name=standby
=#=#=#= Current cib after: Delete standby value =#=#=#=
<cib epoch="16" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources/>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Delete standby value - OK (0) =#=#=#=
* Passed: crm_standby    - Delete standby value
=#=#=#= Begin test: Create a resource =#=#=#=
=#=#=#= Current cib after: Create a resource =#=#=#=
<cib epoch="17" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy"/>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Create a resource - OK (0) =#=#=#=
* Passed: cibadmin       - Create a resource
=#=#=#= Begin test: crm_resource run with extra arguments =#=#=#=
crm_resource: non-option ARGV-elements:
[1 of 2] foo
[2 of 2] bar

=#=#=#= End test: crm_resource run with extra arguments - Incorrect usage (64) =#=#=#=
* Passed: crm_resource   - crm_resource run with extra arguments
=#=#=#= Begin test: List all available resource options (invalid type) =#=#=#=
crm_resource: Error parsing option --list-options
=#=#=#= End test: List all available resource options (invalid type) - Incorrect usage (64) =#=#=#=
* Passed: crm_resource   - List all available resource options (invalid type)
=#=#=#= Begin test: List all available resource options (invalid type) (XML) =#=#=#=
crm_resource: Error parsing option --list-options
=#=#=#= End test: List all available resource options (invalid type) (XML) - Incorrect usage (64) =#=#=#=
* Passed: crm_resource   - List all available resource options (invalid type) (XML)
=#=#=#= Begin test: List non-advanced primitive meta-attributes =#=#=#=
Primitive meta-attributes

Meta-attributes applicable to primitive resources

  * priority: Resource assignment priority
    * If not all resources can be active, the cluster will stop lower-priority resources in order to keep higher-priority ones active.
    * Possible values: score (default: )

  * critical: Default value for influence in colocation constraints
    * Use this value as the default for influence in all colocation constraints involving this resource, as well as in the implicit colocation constraints created if this resource is in a group.
    * Possible values: boolean (default: )

  * target-role: State the cluster should attempt to keep this resource in
    * "Stopped" forces the resource to be stopped. "Started" allows the resource to be started (and in the case of promotable clone resources, promoted if appropriate). "Unpromoted" allows the resource to be started, but only in the unpromoted role if the resource is promotable. "Promoted" is equivalent to "Started".
    * Possible values: "Stopped", "Started" (default), "Unpromoted", "Promoted"

  * is-managed: Whether the cluster is allowed to actively change the resource's state
    * If false, the cluster will not start, stop, promote, or demote the resource on any node. Recurring actions for the resource are unaffected. If true, a true value for the maintenance-mode cluster option, the maintenance node attribute, or the maintenance resource meta-attribute overrides this.
    * Possible values: boolean (default: )

  * maintenance: If true, the cluster will not schedule any actions involving the resource
    * If true, the cluster will not start, stop, promote, or demote the resource on any node, and will pause any recurring monitors (except those specifying role as "Stopped"). If false, a true value for the maintenance-mode cluster option or maintenance node attribute overrides this.
    * Possible values: boolean (default: )

  * resource-stickiness: Score to add to the current node when a resource is already active
    * Score to add to the current node when a resource is already active. This allows running resources to stay where they are, even if they would be placed elsewhere if they were being started from a stopped state. The default is 1 for individual clone instances, and 0 for all other resources.
    * Possible values: score (no default)

  * requires: Conditions under which the resource can be started
    * Conditions under which the resource can be started. "nothing" means the cluster can always start this resource. "quorum" means the cluster can start this resource only if a majority of the configured nodes are active. "fencing" means the cluster can start this resource only if a majority of the configured nodes are active and any failed or unknown nodes have been fenced. "unfencing" means the cluster can start this resource only if a majority of the configured nodes are active and any failed or unknown nodes have been fenced, and only on nodes that have been unfenced. The default is "quorum" for resources with a class of stonith; otherwise, "unfencing" if unfencing is active in the cluster; otherwise, "fencing" if the stonith-enabled cluster option is true; otherwise, "quorum".
    * Possible values: "nothing", "quorum", "fencing", "unfencing"

  * migration-threshold: Number of failures on a node before the resource becomes ineligible to run there.
    * Number of failures that may occur for this resource on a node, before that node is marked ineligible to host this resource. A value of 0 indicates that this feature is disabled (the node will never be marked ineligible). By contrast, the cluster treats "INFINITY" (the default) as a very large but finite number. This option has an effect only if the failed operation specifies its on-fail attribute as "restart" (the default), and additionally for failed start operations, if the start-failure-is-fatal cluster property is set to false.
    * Possible values: score (default: )

  * failure-timeout: Number of seconds before acting as if a failure had not occurred
    * Number of seconds after a failed action for this resource before acting as if the failure had not occurred, and potentially allowing the resource back to the node on which it failed. A value of 0 indicates that this feature is disabled.
    * Possible values: duration (default: )

  * multiple-active: What to do if the cluster finds the resource active on more than one node
    * What to do if the cluster finds the resource active on more than one node. "block" means to mark the resource as unmanaged. "stop_only" means to stop all active instances of this resource and leave them stopped. "stop_start" means to stop all active instances of this resource and start the resource in one location only. "stop_unexpected" means to stop all active instances of this resource except where the resource should be active. (This should be used only when extra instances are not expected to disrupt existing instances, and the resource agent's monitor of an existing instance is capable of detecting any problems that could be caused. Note that any resources ordered after this one will still need to be restarted.)
    * Possible values: "block", "stop_only", "stop_start" (default), "stop_unexpected"

  * allow-migrate: Whether the cluster should try to "live migrate" this resource when it needs to be moved
    * Whether the cluster should try to "live migrate" this resource when it needs to be moved. The default is true for ocf:pacemaker:remote resources, and false otherwise.
    * Possible values: boolean (no default)

  * allow-unhealthy-nodes: Whether the resource should be allowed to run on a node even if the node's health score would otherwise prevent it
    * Possible values: boolean (default: )

  * container-attribute-target: Where to check user-defined node attributes
    * Whether to check user-defined node attributes on the physical host where a container is running or on the local node. This is usually set for a bundle resource and inherited by the bundle's primitive resource. A value of "host" means to check user-defined node attributes on the underlying physical host. Any other value means to check user-defined node attributes on the local node (for a bundled primitive resource, this is the bundle node).
    * Possible values: string (no default)

  * remote-node: Name of the Pacemaker Remote guest node this resource is associated with, if any
    * Name of the Pacemaker Remote guest node this resource is associated with, if any. If specified, this both enables the resource as a guest node and defines the unique name used to identify the guest node. The guest must be configured to run the Pacemaker Remote daemon when it is started. WARNING: This value cannot overlap with any resource or node IDs.
    * Possible values: string (no default)

  * remote-addr: If remote-node is specified, the IP address or hostname used to connect to the guest via Pacemaker Remote
    * If remote-node is specified, the IP address or hostname used to connect to the guest via Pacemaker Remote. The Pacemaker Remote daemon on the guest must be configured to accept connections on this address. The default is the value of the remote-node meta-attribute.
    * Possible values: string (no default)

  * remote-port: If remote-node is specified, port on the guest used for its Pacemaker Remote connection
    * If remote-node is specified, the port on the guest used for its Pacemaker Remote connection. The Pacemaker Remote daemon on the guest must be configured to listen on this port.
    * Possible values: port (default: )

  * remote-connect-timeout: If remote-node is specified, how long before a pending Pacemaker Remote guest connection times out.
    * Possible values: timeout (default: )

  * remote-allow-migrate: If remote-node is specified, this acts as the allow-migrate meta-attribute for the implicit remote connection resource (ocf:pacemaker:remote).
    * Possible values: boolean (default: )
=#=#=#= End test: List non-advanced primitive meta-attributes - OK (0) =#=#=#=
* Passed: crm_resource   - List non-advanced primitive meta-attributes
=#=#=#= Begin test: List non-advanced primitive meta-attributes (XML) (shows all) =#=#=#=
<pacemaker-result api-version="X" request="crm_resource --list-options=primitive --output-as=xml">
  <resource-agent name="primitive-meta" version="">
    <version>1.1</version>
    <longdesc lang="en">Meta-attributes applicable to primitive resources</longdesc>
    <shortdesc lang="en">Primitive meta-attributes</shortdesc>
    <parameters>
      <parameter name="priority" advanced="0" generated="0">
        <longdesc lang="en">If not all resources can be active, the cluster will stop lower-priority resources in order to keep higher-priority ones active.</longdesc>
        <shortdesc lang="en">Resource assignment priority</shortdesc>
        <content type="score" default=""/>
      </parameter>
      <parameter name="critical" advanced="0" generated="0">
        <longdesc lang="en">Use this value as the default for influence in all colocation constraints involving this resource, as well as in the implicit colocation constraints created if this resource is in a group.</longdesc>
        <shortdesc lang="en">Default value for influence in colocation constraints</shortdesc>
        <content type="boolean" default=""/>
      </parameter>
      <parameter name="target-role" advanced="0" generated="0">
        <longdesc lang="en">"Stopped" forces the resource to be stopped. "Started" allows the resource to be started (and in the case of promotable clone resources, promoted if appropriate). "Unpromoted" allows the resource to be started, but only in the unpromoted role if the resource is promotable. "Promoted" is equivalent to "Started".</longdesc>
        <shortdesc lang="en">State the cluster should attempt to keep this resource in</shortdesc>
        <content type="select" default="">
          <option value="Stopped"/>
          <option value="Started"/>
          <option value="Unpromoted"/>
          <option value="Promoted"/>
        </content>
      </parameter>
      <parameter name="is-managed" advanced="0" generated="0">
        <longdesc lang="en">If false, the cluster will not start, stop, promote, or demote the resource on any node. Recurring actions for the resource are unaffected. If true, a true value for the maintenance-mode cluster option, the maintenance node attribute, or the maintenance resource meta-attribute overrides this.</longdesc>
        <shortdesc lang="en">Whether the cluster is allowed to actively change the resource's state</shortdesc>
        <content type="boolean" default=""/>
      </parameter>
      <parameter name="maintenance" advanced="0" generated="0">
        <longdesc lang="en">If true, the cluster will not start, stop, promote, or demote the resource on any node, and will pause any recurring monitors (except those specifying role as "Stopped"). If false, a true value for the maintenance-mode cluster option or maintenance node attribute overrides this.</longdesc>
        <shortdesc lang="en">If true, the cluster will not schedule any actions involving the resource</shortdesc>
        <content type="boolean" default=""/>
      </parameter>
      <parameter name="resource-stickiness" advanced="0" generated="0">
        <longdesc lang="en">Score to add to the current node when a resource is already active. This allows running resources to stay where they are, even if they would be placed elsewhere if they were being started from a stopped state. The default is 1 for individual clone instances, and 0 for all other resources.</longdesc>
        <shortdesc lang="en">Score to add to the current node when a resource is already active</shortdesc>
        <content type="score"/>
      </parameter>
      <parameter name="requires" advanced="0" generated="0">
        <longdesc lang="en">Conditions under which the resource can be started. "nothing" means the cluster can always start this resource. "quorum" means the cluster can start this resource only if a majority of the configured nodes are active. "fencing" means the cluster can start this resource only if a majority of the configured nodes are active and any failed or unknown nodes have been fenced. "unfencing" means the cluster can start this resource only if a majority of the configured nodes are active and any failed or unknown nodes have been fenced, and only on nodes that have been unfenced. The default is "quorum" for resources with a class of stonith; otherwise, "unfencing" if unfencing is active in the cluster; otherwise, "fencing" if the stonith-enabled cluster option is true; otherwise, "quorum".</longdesc>
        <shortdesc lang="en">Conditions under which the resource can be started</shortdesc>
        <content type="select">
          <option value="nothing"/>
          <option value="quorum"/>
          <option value="fencing"/>
          <option value="unfencing"/>
        </content>
      </parameter>
      <parameter name="migration-threshold" advanced="0" generated="0">
        <longdesc lang="en">Number of failures that may occur for this resource on a node, before that node is marked ineligible to host this resource. A value of 0 indicates that this feature is disabled (the node will never be marked ineligible). By contrast, the cluster treats "INFINITY" (the default) as a very large but finite number. This option has an effect only if the failed operation specifies its on-fail attribute as "restart" (the default), and additionally for failed start operations, if the start-failure-is-fatal cluster property is set to false.</longdesc>
        <shortdesc lang="en">Number of failures on a node before the resource becomes ineligible to run there.</shortdesc>
        <content type="score" default=""/>
      </parameter>
      <parameter name="failure-timeout" advanced="0" generated="0">
        <longdesc lang="en">Number of seconds after a failed action for this resource before acting as if the failure had not occurred, and potentially allowing the resource back to the node on which it failed. A value of 0 indicates that this feature is disabled.</longdesc>
        <shortdesc lang="en">Number of seconds before acting as if a failure had not occurred</shortdesc>
        <content type="duration" default=""/>
      </parameter>
      <parameter name="multiple-active" advanced="0" generated="0">
        <longdesc lang="en">What to do if the cluster finds the resource active on more than one node. "block" means to mark the resource as unmanaged. "stop_only" means to stop all active instances of this resource and leave them stopped. "stop_start" means to stop all active instances of this resource and start the resource in one location only. "stop_unexpected" means to stop all active instances of this resource except where the resource should be active. (This should be used only when extra instances are not expected to disrupt existing instances, and the resource agent's monitor of an existing instance is capable of detecting any problems that could be caused. Note that any resources ordered after this one will still need to be restarted.)</longdesc>
        <shortdesc lang="en">What to do if the cluster finds the resource active on more than one node</shortdesc>
        <content type="select" default="">
          <option value="block"/>
          <option value="stop_only"/>
          <option value="stop_start"/>
          <option value="stop_unexpected"/>
        </content>
      </parameter>
      <parameter name="allow-migrate" advanced="0" generated="0">
        <longdesc lang="en">Whether the cluster should try to "live migrate" this resource when it needs to be moved. The default is true for ocf:pacemaker:remote resources, and false otherwise.</longdesc>
        <shortdesc lang="en">Whether the cluster should try to "live migrate" this resource when it needs to be moved</shortdesc>
        <content type="boolean"/>
      </parameter>
      <parameter name="allow-unhealthy-nodes" advanced="0" generated="0">
        <longdesc lang="en">Whether the resource should be allowed to run on a node even if the node's health score would otherwise prevent it</longdesc>
        <shortdesc lang="en">Whether the resource should be allowed to run on a node even if the node's health score would otherwise prevent it</shortdesc>
        <content type="boolean" default=""/>
      </parameter>
      <parameter name="container-attribute-target" advanced="0" generated="0">
        <longdesc lang="en">Whether to check user-defined node attributes on the physical host where a container is running or on the local node. This is usually set for a bundle resource and inherited by the bundle's primitive resource. A value of "host" means to check user-defined node attributes on the underlying physical host. Any other value means to check user-defined node attributes on the local node (for a bundled primitive resource, this is the bundle node).</longdesc>
        <shortdesc lang="en">Where to check user-defined node attributes</shortdesc>
        <content type="string"/>
      </parameter>
      <parameter name="remote-node" advanced="0" generated="0">
        <longdesc lang="en">Name of the Pacemaker Remote guest node this resource is associated with, if any. If specified, this both enables the resource as a guest node and defines the unique name used to identify the guest node. The guest must be configured to run the Pacemaker Remote daemon when it is started. WARNING: This value cannot overlap with any resource or node IDs.</longdesc>
        <shortdesc lang="en">Name of the Pacemaker Remote guest node this resource is associated with, if any</shortdesc>
        <content type="string"/>
      </parameter>
      <parameter name="remote-addr" advanced="0" generated="0">
        <longdesc lang="en">If remote-node is specified, the IP address or hostname used to connect to the guest via Pacemaker Remote. The Pacemaker Remote daemon on the guest must be configured to accept connections on this address. The default is the value of the remote-node meta-attribute.</longdesc>
        <shortdesc lang="en">If remote-node is specified, the IP address or hostname used to connect to the guest via Pacemaker Remote</shortdesc>
        <content type="string"/>
      </parameter>
      <parameter name="remote-port" advanced="0" generated="0">
        <longdesc lang="en">If remote-node is specified, the port on the guest used for its Pacemaker Remote connection. The Pacemaker Remote daemon on the guest must be configured to listen on this port.</longdesc>
        <shortdesc lang="en">If remote-node is specified, port on the guest used for its Pacemaker Remote connection</shortdesc>
        <content type="port" default=""/>
      </parameter>
      <parameter name="remote-connect-timeout" advanced="0" generated="0">
        <longdesc lang="en">If remote-node is specified, how long before a pending Pacemaker Remote guest connection times out.</longdesc>
        <shortdesc lang="en">If remote-node is specified, how long before a pending Pacemaker Remote guest connection times out.</shortdesc>
        <content type="timeout" default=""/>
      </parameter>
      <parameter name="remote-allow-migrate" advanced="0" generated="0">
        <longdesc lang="en">If remote-node is specified, this acts as the allow-migrate meta-attribute for the implicit remote connection resource (ocf:pacemaker:remote).</longdesc>
        <shortdesc lang="en">If remote-node is specified, this acts as the allow-migrate meta-attribute for the implicit remote connection resource (ocf:pacemaker:remote).</shortdesc>
        <content type="boolean" default=""/>
      </parameter>
    </parameters>
  </resource-agent>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: List non-advanced primitive meta-attributes (XML) (shows all) - OK (0) =#=#=#=
* Passed: crm_resource   - List non-advanced primitive meta-attributes (XML) (shows all)
=#=#=#= Begin test: List all available primitive meta-attributes =#=#=#=
Primitive meta-attributes

Meta-attributes applicable to primitive resources

  * priority: Resource assignment priority
    * If not all resources can be active, the cluster will stop lower-priority resources in order to keep higher-priority ones active.
    * Possible values: score (default: )

  * critical: Default value for influence in colocation constraints
    * Use this value as the default for influence in all colocation constraints involving this resource, as well as in the implicit colocation constraints created if this resource is in a group.
    * Possible values: boolean (default: )

  * target-role: State the cluster should attempt to keep this resource in
    * "Stopped" forces the resource to be stopped. "Started" allows the resource to be started (and in the case of promotable clone resources, promoted if appropriate). "Unpromoted" allows the resource to be started, but only in the unpromoted role if the resource is promotable. "Promoted" is equivalent to "Started".
    * Possible values: "Stopped", "Started" (default), "Unpromoted", "Promoted"

  * is-managed: Whether the cluster is allowed to actively change the resource's state
    * If false, the cluster will not start, stop, promote, or demote the resource on any node. Recurring actions for the resource are unaffected. If true, a true value for the maintenance-mode cluster option, the maintenance node attribute, or the maintenance resource meta-attribute overrides this.
    * Possible values: boolean (default: )

  * maintenance: If true, the cluster will not schedule any actions involving the resource
    * If true, the cluster will not start, stop, promote, or demote the resource on any node, and will pause any recurring monitors (except those specifying role as "Stopped"). If false, a true value for the maintenance-mode cluster option or maintenance node attribute overrides this.
    * Possible values: boolean (default: )

  * resource-stickiness: Score to add to the current node when a resource is already active
    * Score to add to the current node when a resource is already active. This allows running resources to stay where they are, even if they would be placed elsewhere if they were being started from a stopped state. The default is 1 for individual clone instances, and 0 for all other resources.
    * Possible values: score (no default)

  * requires: Conditions under which the resource can be started
    * Conditions under which the resource can be started. "nothing" means the cluster can always start this resource. "quorum" means the cluster can start this resource only if a majority of the configured nodes are active. "fencing" means the cluster can start this resource only if a majority of the configured nodes are active and any failed or unknown nodes have been fenced. "unfencing" means the cluster can start this resource only if a majority of the configured nodes are active and any failed or unknown nodes have been fenced, and only on nodes that have been unfenced. The default is "quorum" for resources with a class of stonith; otherwise, "unfencing" if unfencing is active in the cluster; otherwise, "fencing" if the stonith-enabled cluster option is true; otherwise, "quorum".
    * Possible values: "nothing", "quorum", "fencing", "unfencing"

  * migration-threshold: Number of failures on a node before the resource becomes ineligible to run there.
    * Number of failures that may occur for this resource on a node, before that node is marked ineligible to host this resource. A value of 0 indicates that this feature is disabled (the node will never be marked ineligible). By contrast, the cluster treats "INFINITY" (the default) as a very large but finite number. This option has an effect only if the failed operation specifies its on-fail attribute as "restart" (the default), and additionally for failed start operations, if the start-failure-is-fatal cluster property is set to false.
    * Possible values: score (default: )

  * failure-timeout: Number of seconds before acting as if a failure had not occurred
    * Number of seconds after a failed action for this resource before acting as if the failure had not occurred, and potentially allowing the resource back to the node on which it failed. A value of 0 indicates that this feature is disabled.
    * Possible values: duration (default: )

  * multiple-active: What to do if the cluster finds the resource active on more than one node
    * What to do if the cluster finds the resource active on more than one node. "block" means to mark the resource as unmanaged. "stop_only" means to stop all active instances of this resource and leave them stopped. "stop_start" means to stop all active instances of this resource and start the resource in one location only. "stop_unexpected" means to stop all active instances of this resource except where the resource should be active. (This should be used only when extra instances are not expected to disrupt existing instances, and the resource agent's monitor of an existing instance is capable of detecting any problems that could be caused. Note that any resources ordered after this one will still need to be restarted.)
    * Possible values: "block", "stop_only", "stop_start" (default), "stop_unexpected"

  * allow-migrate: Whether the cluster should try to "live migrate" this resource when it needs to be moved
    * Whether the cluster should try to "live migrate" this resource when it needs to be moved. The default is true for ocf:pacemaker:remote resources, and false otherwise.
    * Possible values: boolean (no default)

  * allow-unhealthy-nodes: Whether the resource should be allowed to run on a node even if the node's health score would otherwise prevent it
    * Possible values: boolean (default: )

  * container-attribute-target: Where to check user-defined node attributes
    * Whether to check user-defined node attributes on the physical host where a container is running or on the local node. This is usually set for a bundle resource and inherited by the bundle's primitive resource. A value of "host" means to check user-defined node attributes on the underlying physical host. Any other value means to check user-defined node attributes on the local node (for a bundled primitive resource, this is the bundle node).
    * Possible values: string (no default)

  * remote-node: Name of the Pacemaker Remote guest node this resource is associated with, if any
    * Name of the Pacemaker Remote guest node this resource is associated with, if any. If specified, this both enables the resource as a guest node and defines the unique name used to identify the guest node. The guest must be configured to run the Pacemaker Remote daemon when it is started. WARNING: This value cannot overlap with any resource or node IDs.
    * Possible values: string (no default)

  * remote-addr: If remote-node is specified, the IP address or hostname used to connect to the guest via Pacemaker Remote
    * If remote-node is specified, the IP address or hostname used to connect to the guest via Pacemaker Remote. The Pacemaker Remote daemon on the guest must be configured to accept connections on this address. The default is the value of the remote-node meta-attribute.
    * Possible values: string (no default)

  * remote-port: If remote-node is specified, port on the guest used for its Pacemaker Remote connection
    * If remote-node is specified, the port on the guest used for its Pacemaker Remote connection. The Pacemaker Remote daemon on the guest must be configured to listen on this port.
    * Possible values: port (default: )

  * remote-connect-timeout: If remote-node is specified, how long before a pending Pacemaker Remote guest connection times out.
    * Possible values: timeout (default: )

  * remote-allow-migrate: If remote-node is specified, this acts as the allow-migrate meta-attribute for the implicit remote connection resource (ocf:pacemaker:remote).
    * Possible values: boolean (default: )
=#=#=#= End test: List all available primitive meta-attributes - OK (0) =#=#=#=
* Passed: crm_resource   - List all available primitive meta-attributes
=#=#=#= Begin test: List all available primitive meta-attributes (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_resource --list-options=primitive --all --output-as=xml">
  <resource-agent name="primitive-meta" version="">
    <version>1.1</version>
    <longdesc lang="en">Meta-attributes applicable to primitive resources</longdesc>
    <shortdesc lang="en">Primitive meta-attributes</shortdesc>
    <parameters>
      <parameter name="priority" advanced="0" generated="0">
        <longdesc lang="en">If not all resources can be active, the cluster will stop lower-priority resources in order to keep higher-priority ones active.</longdesc>
        <shortdesc lang="en">Resource assignment priority</shortdesc>
        <content type="score" default=""/>
      </parameter>
      <parameter name="critical" advanced="0" generated="0">
        <longdesc lang="en">Use this value as the default for influence in all colocation constraints involving this resource, as well as in the implicit colocation constraints created if this resource is in a group.</longdesc>
        <shortdesc lang="en">Default value for influence in colocation constraints</shortdesc>
        <content type="boolean" default=""/>
      </parameter>
      <parameter name="target-role" advanced="0" generated="0">
        <longdesc lang="en">"Stopped" forces the resource to be stopped. "Started" allows the resource to be started (and in the case of promotable clone resources, promoted if appropriate). "Unpromoted" allows the resource to be started, but only in the unpromoted role if the resource is promotable. "Promoted" is equivalent to "Started".</longdesc>
        <shortdesc lang="en">State the cluster should attempt to keep this resource in</shortdesc>
        <content type="select" default="">
          <option value="Stopped"/>
          <option value="Started"/>
          <option value="Unpromoted"/>
          <option value="Promoted"/>
        </content>
      </parameter>
      <parameter name="is-managed" advanced="0" generated="0">
        <longdesc lang="en">If false, the cluster will not start, stop, promote, or demote the resource on any node. Recurring actions for the resource are unaffected. If true, a true value for the maintenance-mode cluster option, the maintenance node attribute, or the maintenance resource meta-attribute overrides this.</longdesc>
        <shortdesc lang="en">Whether the cluster is allowed to actively change the resource's state</shortdesc>
        <content type="boolean" default=""/>
      </parameter>
      <parameter name="maintenance" advanced="0" generated="0">
        <longdesc lang="en">If true, the cluster will not start, stop, promote, or demote the resource on any node, and will pause any recurring monitors (except those specifying role as "Stopped"). If false, a true value for the maintenance-mode cluster option or maintenance node attribute overrides this.</longdesc>
        <shortdesc lang="en">If true, the cluster will not schedule any actions involving the resource</shortdesc>
        <content type="boolean" default=""/>
      </parameter>
      <parameter name="resource-stickiness" advanced="0" generated="0">
        <longdesc lang="en">Score to add to the current node when a resource is already active. This allows running resources to stay where they are, even if they would be placed elsewhere if they were being started from a stopped state. The default is 1 for individual clone instances, and 0 for all other resources.</longdesc>
        <shortdesc lang="en">Score to add to the current node when a resource is already active</shortdesc>
        <content type="score"/>
      </parameter>
      <parameter name="requires" advanced="0" generated="0">
        <longdesc lang="en">Conditions under which the resource can be started. "nothing" means the cluster can always start this resource. "quorum" means the cluster can start this resource only if a majority of the configured nodes are active. "fencing" means the cluster can start this resource only if a majority of the configured nodes are active and any failed or unknown nodes have been fenced. "unfencing" means the cluster can start this resource only if a majority of the configured nodes are active and any failed or unknown nodes have been fenced, and only on nodes that have been unfenced. The default is "quorum" for resources with a class of stonith; otherwise, "unfencing" if unfencing is active in the cluster; otherwise, "fencing" if the stonith-enabled cluster option is true; otherwise, "quorum".</longdesc>
        <shortdesc lang="en">Conditions under which the resource can be started</shortdesc>
        <content type="select">
          <option value="nothing"/>
          <option value="quorum"/>
          <option value="fencing"/>
          <option value="unfencing"/>
        </content>
      </parameter>
      <parameter name="migration-threshold" advanced="0" generated="0">
        <longdesc lang="en">Number of failures that may occur for this resource on a node, before that node is marked ineligible to host this resource. A value of 0 indicates that this feature is disabled (the node will never be marked ineligible). By contrast, the cluster treats "INFINITY" (the default) as a very large but finite number. This option has an effect only if the failed operation specifies its on-fail attribute as "restart" (the default), and additionally for failed start operations, if the start-failure-is-fatal cluster property is set to false.</longdesc>
        <shortdesc lang="en">Number of failures on a node before the resource becomes ineligible to run there.</shortdesc>
        <content type="score" default=""/>
      </parameter>
      <parameter name="failure-timeout" advanced="0" generated="0">
        <longdesc lang="en">Number of seconds after a failed action for this resource before acting as if the failure had not occurred, and potentially allowing the resource back to the node on which it failed. A value of 0 indicates that this feature is disabled.</longdesc>
        <shortdesc lang="en">Number of seconds before acting as if a failure had not occurred</shortdesc>
        <content type="duration" default=""/>
      </parameter>
      <parameter name="multiple-active" advanced="0" generated="0">
        <longdesc lang="en">What to do if the cluster finds the resource active on more than one node. "block" means to mark the resource as unmanaged. "stop_only" means to stop all active instances of this resource and leave them stopped. "stop_start" means to stop all active instances of this resource and start the resource in one location only. "stop_unexpected" means to stop all active instances of this resource except where the resource should be active. (This should be used only when extra instances are not expected to disrupt existing instances, and the resource agent's monitor of an existing instance is capable of detecting any problems that could be caused. Note that any resources ordered after this one will still need to be restarted.)</longdesc>
        <shortdesc lang="en">What to do if the cluster finds the resource active on more than one node</shortdesc>
        <content type="select" default="">
          <option value="block"/>
          <option value="stop_only"/>
          <option value="stop_start"/>
          <option value="stop_unexpected"/>
        </content>
      </parameter>
      <parameter name="allow-migrate" advanced="0" generated="0">
        <longdesc lang="en">Whether the cluster should try to "live migrate" this resource when it needs to be moved. The default is true for ocf:pacemaker:remote resources, and false otherwise.</longdesc>
        <shortdesc lang="en">Whether the cluster should try to "live migrate" this resource when it needs to be moved</shortdesc>
        <content type="boolean"/>
      </parameter>
      <parameter name="allow-unhealthy-nodes" advanced="0" generated="0">
        <longdesc lang="en">Whether the resource should be allowed to run on a node even if the node's health score would otherwise prevent it</longdesc>
        <shortdesc lang="en">Whether the resource should be allowed to run on a node even if the node's health score would otherwise prevent it</shortdesc>
        <content type="boolean" default=""/>
      </parameter>
      <parameter name="container-attribute-target" advanced="0" generated="0">
        <longdesc lang="en">Whether to check user-defined node attributes on the physical host where a container is running or on the local node. This is usually set for a bundle resource and inherited by the bundle's primitive resource. A value of "host" means to check user-defined node attributes on the underlying physical host. Any other value means to check user-defined node attributes on the local node (for a bundled primitive resource, this is the bundle node).</longdesc>
        <shortdesc lang="en">Where to check user-defined node attributes</shortdesc>
        <content type="string"/>
      </parameter>
      <parameter name="remote-node" advanced="0" generated="0">
        <longdesc lang="en">Name of the Pacemaker Remote guest node this resource is associated with, if any. If specified, this both enables the resource as a guest node and defines the unique name used to identify the guest node. The guest must be configured to run the Pacemaker Remote daemon when it is started. WARNING: This value cannot overlap with any resource or node IDs.</longdesc>
        <shortdesc lang="en">Name of the Pacemaker Remote guest node this resource is associated with, if any</shortdesc>
        <content type="string"/>
      </parameter>
      <parameter name="remote-addr" advanced="0" generated="0">
        <longdesc lang="en">If remote-node is specified, the IP address or hostname used to connect to the guest via Pacemaker Remote. The Pacemaker Remote daemon on the guest must be configured to accept connections on this address. The default is the value of the remote-node meta-attribute.</longdesc>
        <shortdesc lang="en">If remote-node is specified, the IP address or hostname used to connect to the guest via Pacemaker Remote</shortdesc>
        <content type="string"/>
      </parameter>
      <parameter name="remote-port" advanced="0" generated="0">
        <longdesc lang="en">If remote-node is specified, the port on the guest used for its Pacemaker Remote connection. The Pacemaker Remote daemon on the guest must be configured to listen on this port.</longdesc>
        <shortdesc lang="en">If remote-node is specified, port on the guest used for its Pacemaker Remote connection</shortdesc>
        <content type="port" default=""/>
      </parameter>
      <parameter name="remote-connect-timeout" advanced="0" generated="0">
        <longdesc lang="en">If remote-node is specified, how long before a pending Pacemaker Remote guest connection times out.</longdesc>
        <shortdesc lang="en">If remote-node is specified, how long before a pending Pacemaker Remote guest connection times out.</shortdesc>
        <content type="timeout" default=""/>
      </parameter>
      <parameter name="remote-allow-migrate" advanced="0" generated="0">
        <longdesc lang="en">If remote-node is specified, this acts as the allow-migrate meta-attribute for the implicit remote connection resource (ocf:pacemaker:remote).</longdesc>
        <shortdesc lang="en">If remote-node is specified, this acts as the allow-migrate meta-attribute for the implicit remote connection resource (ocf:pacemaker:remote).</shortdesc>
        <content type="boolean" default=""/>
      </parameter>
    </parameters>
  </resource-agent>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: List all available primitive meta-attributes (XML) - OK (0) =#=#=#=
* Passed: crm_resource   - List all available primitive meta-attributes (XML)
=#=#=#= Begin test: List non-advanced fencing parameters =#=#=#=
Fencing resource common parameters

Special parameters that are available for all fencing resources, regardless of type. They are processed by Pacemaker, rather than by the fence agent or the fencing library.

  * pcmk_host_map: A mapping of node names to port numbers for devices that do not support node names.
    * For example, "node1:1;node2:2,3" would tell the cluster to use port 1 for node1 and ports 2 and 3 for node2.
    * Possible values: string (no default)

  * pcmk_host_list: Nodes targeted by this device
    * Comma-separated list of nodes that can be targeted by this device (for example, "node1,node2,node3"). If pcmk_host_check is "static-list", either this or pcmk_host_map must be set.
    * Possible values: string (no default)

  * pcmk_host_check: How to determine which nodes can be targeted by the device
    * Use "dynamic-list" to query the device via the 'list' command; "static-list" to check the pcmk_host_list attribute; "status" to query the device via the 'status' command; or "none" to assume every device can fence every node. The default value is "static-list" if pcmk_host_map or pcmk_host_list is set; otherwise "dynamic-list" if the device supports the list operation; otherwise "status" if the device supports the status operation; otherwise "none"
    * Possible values: "dynamic-list", "static-list", "status", "none"

  * pcmk_delay_max: Enable a delay of no more than the time specified before executing fencing actions.
    * Enable a delay of no more than the time specified before executing fencing actions. Pacemaker derives the overall delay by taking the value of pcmk_delay_base and adding a random delay value such that the sum is kept below this maximum.
    * Possible values: duration (default: )

  * pcmk_delay_base: Enable a base delay for fencing actions and specify base delay value.
    * This enables a static delay for fencing actions, which can help avoid "death matches" where two nodes try to fence each other at the same time. If pcmk_delay_max is also used, a random delay will be added such that the total delay is kept below that value. This can be set to a single time value to apply to any node targeted by this device (useful if a separate device is configured for each target), or to a node map (for example, "node1:1s;node2:5") to set a different value for each target.
    * Possible values: string (default: )

  * pcmk_action_limit: The maximum number of actions can be performed in parallel on this device
    * Cluster property concurrent-fencing="true" needs to be configured first. Then use this to specify the maximum number of actions can be performed in parallel on this device. A value of -1 means an unlimited number of actions can be performed in parallel.
    * Possible values: integer (default: )
=#=#=#= End test: List non-advanced fencing parameters - OK (0) =#=#=#=
* Passed: crm_resource   - List non-advanced fencing parameters
=#=#=#= Begin test: List non-advanced fencing parameters (XML) (shows all) =#=#=#=
<pacemaker-result api-version="X" request="crm_resource --list-options=fencing --output-as=xml">
  <resource-agent name="fence-attributes" version="">
    <version>1.1</version>
    <longdesc lang="en">Special parameters that are available for all fencing resources, regardless of type. They are processed by Pacemaker, rather than by the fence agent or the fencing library.</longdesc>
    <shortdesc lang="en">Fencing resource common parameters</shortdesc>
    <parameters>
      <parameter name="pcmk_host_argument" advanced="1" generated="0">
        <longdesc lang="en">Some devices do not support the standard 'port' parameter or may provide additional ones. Use this to specify an alternate, device-specific, parameter that should indicate the machine to be fenced. A value of "none" can be used to tell the cluster not to supply any additional parameters.</longdesc>
        <shortdesc lang="en">An alternate parameter to supply instead of 'port'</shortdesc>
        <content type="string" default=""/>
      </parameter>
      <parameter name="pcmk_host_map" advanced="0" generated="0">
        <longdesc lang="en">For example, "node1:1;node2:2,3" would tell the cluster to use port 1 for node1 and ports 2 and 3 for node2.</longdesc>
        <shortdesc lang="en">A mapping of node names to port numbers for devices that do not support node names.</shortdesc>
        <content type="string"/>
      </parameter>
      <parameter name="pcmk_host_list" advanced="0" generated="0">
        <longdesc lang="en">Comma-separated list of nodes that can be targeted by this device (for example, "node1,node2,node3"). If pcmk_host_check is "static-list", either this or pcmk_host_map must be set.</longdesc>
        <shortdesc lang="en">Nodes targeted by this device</shortdesc>
        <content type="string"/>
      </parameter>
      <parameter name="pcmk_host_check" advanced="0" generated="0">
        <longdesc lang="en">Use "dynamic-list" to query the device via the 'list' command; "static-list" to check the pcmk_host_list attribute; "status" to query the device via the 'status' command; or "none" to assume every device can fence every node. The default value is "static-list" if pcmk_host_map or pcmk_host_list is set; otherwise "dynamic-list" if the device supports the list operation; otherwise "status" if the device supports the status operation; otherwise "none"</longdesc>
        <shortdesc lang="en">How to determine which nodes can be targeted by the device</shortdesc>
        <content type="select">
          <option value="dynamic-list"/>
          <option value="static-list"/>
          <option value="status"/>
          <option value="none"/>
        </content>
      </parameter>
      <parameter name="pcmk_delay_max" advanced="0" generated="0">
        <longdesc lang="en">Enable a delay of no more than the time specified before executing fencing actions. Pacemaker derives the overall delay by taking the value of pcmk_delay_base and adding a random delay value such that the sum is kept below this maximum.</longdesc>
        <shortdesc lang="en">Enable a delay of no more than the time specified before executing fencing actions.</shortdesc>
        <content type="duration" default=""/>
      </parameter>
      <parameter name="pcmk_delay_base" advanced="0" generated="0">
        <longdesc lang="en">This enables a static delay for fencing actions, which can help avoid "death matches" where two nodes try to fence each other at the same time. If pcmk_delay_max is also used, a random delay will be added such that the total delay is kept below that value. This can be set to a single time value to apply to any node targeted by this device (useful if a separate device is configured for each target), or to a node map (for example, "node1:1s;node2:5") to set a different value for each target.</longdesc>
        <shortdesc lang="en">Enable a base delay for fencing actions and specify base delay value.</shortdesc>
        <content type="string" default=""/>
      </parameter>
      <parameter name="pcmk_action_limit" advanced="0" generated="0">
        <longdesc lang="en">Cluster property concurrent-fencing="true" needs to be configured first. Then use this to specify the maximum number of actions can be performed in parallel on this device. A value of -1 means an unlimited number of actions can be performed in parallel.</longdesc>
        <shortdesc lang="en">The maximum number of actions can be performed in parallel on this device</shortdesc>
        <content type="integer" default=""/>
      </parameter>
      <parameter name="pcmk_reboot_action" advanced="1" generated="0">
        <longdesc lang="en">Some devices do not support the standard commands or may provide additional ones. Use this to specify an alternate, device-specific, command that implements the 'reboot' action.</longdesc>
        <shortdesc lang="en">An alternate command to run instead of 'reboot'</shortdesc>
        <content type="string" default=""/>
      </parameter>
      <parameter name="pcmk_reboot_timeout" advanced="1" generated="0">
        <longdesc lang="en">Some devices need much more/less time to complete than normal. Use this to specify an alternate, device-specific, timeout for 'reboot' actions.</longdesc>
        <shortdesc lang="en">Specify an alternate timeout to use for 'reboot' actions instead of stonith-timeout</shortdesc>
        <content type="timeout" default=""/>
      </parameter>
      <parameter name="pcmk_reboot_retries" advanced="1" generated="0">
        <longdesc lang="en">Some devices do not support multiple connections. Operations may "fail" if the device is busy with another task. In that case, Pacemaker will automatically retry the operation if there is time remaining. Use this option to alter the number of times Pacemaker tries a 'reboot' action before giving up.</longdesc>
        <shortdesc lang="en">The maximum number of times to try the 'reboot' command within the timeout period</shortdesc>
        <content type="integer" default=""/>
      </parameter>
      <parameter name="pcmk_off_action" advanced="1" generated="0">
        <longdesc lang="en">Some devices do not support the standard commands or may provide additional ones. Use this to specify an alternate, device-specific, command that implements the 'off' action.</longdesc>
        <shortdesc lang="en">An alternate command to run instead of 'off'</shortdesc>
        <content type="string" default=""/>
      </parameter>
      <parameter name="pcmk_off_timeout" advanced="1" generated="0">
        <longdesc lang="en">Some devices need much more/less time to complete than normal. Use this to specify an alternate, device-specific, timeout for 'off' actions.</longdesc>
        <shortdesc lang="en">Specify an alternate timeout to use for 'off' actions instead of stonith-timeout</shortdesc>
        <content type="timeout" default=""/>
      </parameter>
      <parameter name="pcmk_off_retries" advanced="1" generated="0">
        <longdesc lang="en">Some devices do not support multiple connections. Operations may "fail" if the device is busy with another task. In that case, Pacemaker will automatically retry the operation if there is time remaining. Use this option to alter the number of times Pacemaker tries a 'off' action before giving up.</longdesc>
        <shortdesc lang="en">The maximum number of times to try the 'off' command within the timeout period</shortdesc>
        <content type="integer" default=""/>
      </parameter>
      <parameter name="pcmk_on_action" advanced="1" generated="0">
        <longdesc lang="en">Some devices do not support the standard commands or may provide additional ones. Use this to specify an alternate, device-specific, command that implements the 'on' action.</longdesc>
        <shortdesc lang="en">An alternate command to run instead of 'on'</shortdesc>
        <content type="string" default=""/>
      </parameter>
      <parameter name="pcmk_on_timeout" advanced="1" generated="0">
        <longdesc lang="en">Some devices need much more/less time to complete than normal. Use this to specify an alternate, device-specific, timeout for 'on' actions.</longdesc>
        <shortdesc lang="en">Specify an alternate timeout to use for 'on' actions instead of stonith-timeout</shortdesc>
        <content type="timeout" default=""/>
      </parameter>
      <parameter name="pcmk_on_retries" advanced="1" generated="0">
        <longdesc lang="en">Some devices do not support multiple connections. Operations may "fail" if the device is busy with another task. In that case, Pacemaker will automatically retry the operation if there is time remaining. Use this option to alter the number of times Pacemaker tries a 'on' action before giving up.</longdesc>
        <shortdesc lang="en">The maximum number of times to try the 'on' command within the timeout period</shortdesc>
        <content type="integer" default=""/>
      </parameter>
      <parameter name="pcmk_list_action" advanced="1" generated="0">
        <longdesc lang="en">Some devices do not support the standard commands or may provide additional ones. Use this to specify an alternate, device-specific, command that implements the 'list' action.</longdesc>
        <shortdesc lang="en">An alternate command to run instead of 'list'</shortdesc>
        <content type="string" default=""/>
      </parameter>
      <parameter name="pcmk_list_timeout" advanced="1" generated="0">
        <longdesc lang="en">Some devices need much more/less time to complete than normal. Use this to specify an alternate, device-specific, timeout for 'list' actions.</longdesc>
        <shortdesc lang="en">Specify an alternate timeout to use for 'list' actions instead of stonith-timeout</shortdesc>
        <content type="timeout" default=""/>
      </parameter>
      <parameter name="pcmk_list_retries" advanced="1" generated="0">
        <longdesc lang="en">Some devices do not support multiple connections. Operations may "fail" if the device is busy with another task. In that case, Pacemaker will automatically retry the operation if there is time remaining. Use this option to alter the number of times Pacemaker tries a 'list' action before giving up.</longdesc>
        <shortdesc lang="en">The maximum number of times to try the 'list' command within the timeout period</shortdesc>
        <content type="integer" default=""/>
      </parameter>
      <parameter name="pcmk_monitor_action" advanced="1" generated="0">
        <longdesc lang="en">Some devices do not support the standard commands or may provide additional ones. Use this to specify an alternate, device-specific, command that implements the 'monitor' action.</longdesc>
        <shortdesc lang="en">An alternate command to run instead of 'monitor'</shortdesc>
        <content type="string" default=""/>
      </parameter>
      <parameter name="pcmk_monitor_timeout" advanced="1" generated="0">
        <longdesc lang="en">Some devices need much more/less time to complete than normal. Use this to specify an alternate, device-specific, timeout for 'monitor' actions.</longdesc>
        <shortdesc lang="en">Specify an alternate timeout to use for 'monitor' actions instead of stonith-timeout</shortdesc>
        <content type="timeout" default=""/>
      </parameter>
      <parameter name="pcmk_monitor_retries" advanced="1" generated="0">
        <longdesc lang="en">Some devices do not support multiple connections. Operations may "fail" if the device is busy with another task. In that case, Pacemaker will automatically retry the operation if there is time remaining. Use this option to alter the number of times Pacemaker tries a 'monitor' action before giving up.</longdesc>
        <shortdesc lang="en">The maximum number of times to try the 'monitor' command within the timeout period</shortdesc>
        <content type="integer" default=""/>
      </parameter>
      <parameter name="pcmk_status_action" advanced="1" generated="0">
        <longdesc lang="en">Some devices do not support the standard commands or may provide additional ones. Use this to specify an alternate, device-specific, command that implements the 'status' action.</longdesc>
        <shortdesc lang="en">An alternate command to run instead of 'status'</shortdesc>
        <content type="string" default=""/>
      </parameter>
      <parameter name="pcmk_status_timeout" advanced="1" generated="0">
        <longdesc lang="en">Some devices need much more/less time to complete than normal. Use this to specify an alternate, device-specific, timeout for 'status' actions.</longdesc>
        <shortdesc lang="en">Specify an alternate timeout to use for 'status' actions instead of stonith-timeout</shortdesc>
        <content type="timeout" default=""/>
      </parameter>
      <parameter name="pcmk_status_retries" advanced="1" generated="0">
        <longdesc lang="en">Some devices do not support multiple connections. Operations may "fail" if the device is busy with another task. In that case, Pacemaker will automatically retry the operation if there is time remaining. Use this option to alter the number of times Pacemaker tries a 'status' action before giving up.</longdesc>
        <shortdesc lang="en">The maximum number of times to try the 'status' command within the timeout period</shortdesc>
        <content type="integer" default=""/>
      </parameter>
    </parameters>
  </resource-agent>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: List non-advanced fencing parameters (XML) (shows all) - OK (0) =#=#=#=
* Passed: crm_resource   - List non-advanced fencing parameters (XML) (shows all)
=#=#=#= Begin test: List all available fencing parameters =#=#=#=
Fencing resource common parameters

Special parameters that are available for all fencing resources, regardless of type. They are processed by Pacemaker, rather than by the fence agent or the fencing library.

  * pcmk_host_map: A mapping of node names to port numbers for devices that do not support node names.
    * For example, "node1:1;node2:2,3" would tell the cluster to use port 1 for node1 and ports 2 and 3 for node2.
    * Possible values: string (no default)

  * pcmk_host_list: Nodes targeted by this device
    * Comma-separated list of nodes that can be targeted by this device (for example, "node1,node2,node3"). If pcmk_host_check is "static-list", either this or pcmk_host_map must be set.
    * Possible values: string (no default)

  * pcmk_host_check: How to determine which nodes can be targeted by the device
    * Use "dynamic-list" to query the device via the 'list' command; "static-list" to check the pcmk_host_list attribute; "status" to query the device via the 'status' command; or "none" to assume every device can fence every node. The default value is "static-list" if pcmk_host_map or pcmk_host_list is set; otherwise "dynamic-list" if the device supports the list operation; otherwise "status" if the device supports the status operation; otherwise "none"
    * Possible values: "dynamic-list", "static-list", "status", "none"

  * pcmk_delay_max: Enable a delay of no more than the time specified before executing fencing actions.
    * Enable a delay of no more than the time specified before executing fencing actions. Pacemaker derives the overall delay by taking the value of pcmk_delay_base and adding a random delay value such that the sum is kept below this maximum.
    * Possible values: duration (default: )

  * pcmk_delay_base: Enable a base delay for fencing actions and specify base delay value.
    * This enables a static delay for fencing actions, which can help avoid "death matches" where two nodes try to fence each other at the same time. If pcmk_delay_max is also used, a random delay will be added such that the total delay is kept below that value. This can be set to a single time value to apply to any node targeted by this device (useful if a separate device is configured for each target), or to a node map (for example, "node1:1s;node2:5") to set a different value for each target.
    * Possible values: string (default: )

  * pcmk_action_limit: The maximum number of actions can be performed in parallel on this device
    * Cluster property concurrent-fencing="true" needs to be configured first. Then use this to specify the maximum number of actions can be performed in parallel on this device. A value of -1 means an unlimited number of actions can be performed in parallel.
    * Possible values: integer (default: )

  * ADVANCED OPTIONS:

    * pcmk_host_argument: An alternate parameter to supply instead of 'port'
      * Some devices do not support the standard 'port' parameter or may provide additional ones. Use this to specify an alternate, device-specific, parameter that should indicate the machine to be fenced. A value of "none" can be used to tell the cluster not to supply any additional parameters.
      * Possible values: string (default: )

    * pcmk_reboot_action: An alternate command to run instead of 'reboot'
      * Some devices do not support the standard commands or may provide additional ones. Use this to specify an alternate, device-specific, command that implements the 'reboot' action.
      * Possible values: string (default: )

    * pcmk_reboot_timeout: Specify an alternate timeout to use for 'reboot' actions instead of stonith-timeout
      * Some devices need much more/less time to complete than normal. Use this to specify an alternate, device-specific, timeout for 'reboot' actions.
      * Possible values: timeout (default: )

    * pcmk_reboot_retries: The maximum number of times to try the 'reboot' command within the timeout period
      * Some devices do not support multiple connections. Operations may "fail" if the device is busy with another task. In that case, Pacemaker will automatically retry the operation if there is time remaining. Use this option to alter the number of times Pacemaker tries a 'reboot' action before giving up.
      * Possible values: integer (default: )

    * pcmk_off_action: An alternate command to run instead of 'off'
      * Some devices do not support the standard commands or may provide additional ones. Use this to specify an alternate, device-specific, command that implements the 'off' action.
      * Possible values: string (default: )

    * pcmk_off_timeout: Specify an alternate timeout to use for 'off' actions instead of stonith-timeout
      * Some devices need much more/less time to complete than normal. Use this to specify an alternate, device-specific, timeout for 'off' actions.
      * Possible values: timeout (default: )

    * pcmk_off_retries: The maximum number of times to try the 'off' command within the timeout period
      * Some devices do not support multiple connections. Operations may "fail" if the device is busy with another task. In that case, Pacemaker will automatically retry the operation if there is time remaining. Use this option to alter the number of times Pacemaker tries a 'off' action before giving up.
      * Possible values: integer (default: )

    * pcmk_on_action: An alternate command to run instead of 'on'
      * Some devices do not support the standard commands or may provide additional ones. Use this to specify an alternate, device-specific, command that implements the 'on' action.
      * Possible values: string (default: )

    * pcmk_on_timeout: Specify an alternate timeout to use for 'on' actions instead of stonith-timeout
      * Some devices need much more/less time to complete than normal. Use this to specify an alternate, device-specific, timeout for 'on' actions.
      * Possible values: timeout (default: )

    * pcmk_on_retries: The maximum number of times to try the 'on' command within the timeout period
      * Some devices do not support multiple connections. Operations may "fail" if the device is busy with another task. In that case, Pacemaker will automatically retry the operation if there is time remaining. Use this option to alter the number of times Pacemaker tries a 'on' action before giving up.
      * Possible values: integer (default: )

    * pcmk_list_action: An alternate command to run instead of 'list'
      * Some devices do not support the standard commands or may provide additional ones. Use this to specify an alternate, device-specific, command that implements the 'list' action.
      * Possible values: string (default: )

    * pcmk_list_timeout: Specify an alternate timeout to use for 'list' actions instead of stonith-timeout
      * Some devices need much more/less time to complete than normal. Use this to specify an alternate, device-specific, timeout for 'list' actions.
      * Possible values: timeout (default: )

    * pcmk_list_retries: The maximum number of times to try the 'list' command within the timeout period
      * Some devices do not support multiple connections. Operations may "fail" if the device is busy with another task. In that case, Pacemaker will automatically retry the operation if there is time remaining. Use this option to alter the number of times Pacemaker tries a 'list' action before giving up.
      * Possible values: integer (default: )

    * pcmk_monitor_action: An alternate command to run instead of 'monitor'
      * Some devices do not support the standard commands or may provide additional ones. Use this to specify an alternate, device-specific, command that implements the 'monitor' action.
      * Possible values: string (default: )

    * pcmk_monitor_timeout: Specify an alternate timeout to use for 'monitor' actions instead of stonith-timeout
      * Some devices need much more/less time to complete than normal. Use this to specify an alternate, device-specific, timeout for 'monitor' actions.
      * Possible values: timeout (default: )

    * pcmk_monitor_retries: The maximum number of times to try the 'monitor' command within the timeout period
      * Some devices do not support multiple connections. Operations may "fail" if the device is busy with another task. In that case, Pacemaker will automatically retry the operation if there is time remaining. Use this option to alter the number of times Pacemaker tries a 'monitor' action before giving up.
      * Possible values: integer (default: )

    * pcmk_status_action: An alternate command to run instead of 'status'
      * Some devices do not support the standard commands or may provide additional ones. Use this to specify an alternate, device-specific, command that implements the 'status' action.
      * Possible values: string (default: )

    * pcmk_status_timeout: Specify an alternate timeout to use for 'status' actions instead of stonith-timeout
      * Some devices need much more/less time to complete than normal. Use this to specify an alternate, device-specific, timeout for 'status' actions.
      * Possible values: timeout (default: )

    * pcmk_status_retries: The maximum number of times to try the 'status' command within the timeout period
      * Some devices do not support multiple connections. Operations may "fail" if the device is busy with another task. In that case, Pacemaker will automatically retry the operation if there is time remaining. Use this option to alter the number of times Pacemaker tries a 'status' action before giving up.
      * Possible values: integer (default: )
=#=#=#= End test: List all available fencing parameters - OK (0) =#=#=#=
* Passed: crm_resource   - List all available fencing parameters
=#=#=#= Begin test: List all available fencing parameters (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_resource --list-options=fencing --all --output-as=xml">
  <resource-agent name="fence-attributes" version="">
    <version>1.1</version>
    <longdesc lang="en">Special parameters that are available for all fencing resources, regardless of type. They are processed by Pacemaker, rather than by the fence agent or the fencing library.</longdesc>
    <shortdesc lang="en">Fencing resource common parameters</shortdesc>
    <parameters>
      <parameter name="pcmk_host_argument" advanced="1" generated="0">
        <longdesc lang="en">Some devices do not support the standard 'port' parameter or may provide additional ones. Use this to specify an alternate, device-specific, parameter that should indicate the machine to be fenced. A value of "none" can be used to tell the cluster not to supply any additional parameters.</longdesc>
        <shortdesc lang="en">An alternate parameter to supply instead of 'port'</shortdesc>
        <content type="string" default=""/>
      </parameter>
      <parameter name="pcmk_host_map" advanced="0" generated="0">
        <longdesc lang="en">For example, "node1:1;node2:2,3" would tell the cluster to use port 1 for node1 and ports 2 and 3 for node2.</longdesc>
        <shortdesc lang="en">A mapping of node names to port numbers for devices that do not support node names.</shortdesc>
        <content type="string"/>
      </parameter>
      <parameter name="pcmk_host_list" advanced="0" generated="0">
        <longdesc lang="en">Comma-separated list of nodes that can be targeted by this device (for example, "node1,node2,node3"). If pcmk_host_check is "static-list", either this or pcmk_host_map must be set.</longdesc>
        <shortdesc lang="en">Nodes targeted by this device</shortdesc>
        <content type="string"/>
      </parameter>
      <parameter name="pcmk_host_check" advanced="0" generated="0">
        <longdesc lang="en">Use "dynamic-list" to query the device via the 'list' command; "static-list" to check the pcmk_host_list attribute; "status" to query the device via the 'status' command; or "none" to assume every device can fence every node. The default value is "static-list" if pcmk_host_map or pcmk_host_list is set; otherwise "dynamic-list" if the device supports the list operation; otherwise "status" if the device supports the status operation; otherwise "none"</longdesc>
        <shortdesc lang="en">How to determine which nodes can be targeted by the device</shortdesc>
        <content type="select">
          <option value="dynamic-list"/>
          <option value="static-list"/>
          <option value="status"/>
          <option value="none"/>
        </content>
      </parameter>
      <parameter name="pcmk_delay_max" advanced="0" generated="0">
        <longdesc lang="en">Enable a delay of no more than the time specified before executing fencing actions. Pacemaker derives the overall delay by taking the value of pcmk_delay_base and adding a random delay value such that the sum is kept below this maximum.</longdesc>
        <shortdesc lang="en">Enable a delay of no more than the time specified before executing fencing actions.</shortdesc>
        <content type="duration" default=""/>
      </parameter>
      <parameter name="pcmk_delay_base" advanced="0" generated="0">
        <longdesc lang="en">This enables a static delay for fencing actions, which can help avoid "death matches" where two nodes try to fence each other at the same time. If pcmk_delay_max is also used, a random delay will be added such that the total delay is kept below that value. This can be set to a single time value to apply to any node targeted by this device (useful if a separate device is configured for each target), or to a node map (for example, "node1:1s;node2:5") to set a different value for each target.</longdesc>
        <shortdesc lang="en">Enable a base delay for fencing actions and specify base delay value.</shortdesc>
        <content type="string" default=""/>
      </parameter>
      <parameter name="pcmk_action_limit" advanced="0" generated="0">
        <longdesc lang="en">Cluster property concurrent-fencing="true" needs to be configured first. Then use this to specify the maximum number of actions can be performed in parallel on this device. A value of -1 means an unlimited number of actions can be performed in parallel.</longdesc>
        <shortdesc lang="en">The maximum number of actions can be performed in parallel on this device</shortdesc>
        <content type="integer" default=""/>
      </parameter>
      <parameter name="pcmk_reboot_action" advanced="1" generated="0">
        <longdesc lang="en">Some devices do not support the standard commands or may provide additional ones. Use this to specify an alternate, device-specific, command that implements the 'reboot' action.</longdesc>
        <shortdesc lang="en">An alternate command to run instead of 'reboot'</shortdesc>
        <content type="string" default=""/>
      </parameter>
      <parameter name="pcmk_reboot_timeout" advanced="1" generated="0">
        <longdesc lang="en">Some devices need much more/less time to complete than normal. Use this to specify an alternate, device-specific, timeout for 'reboot' actions.</longdesc>
        <shortdesc lang="en">Specify an alternate timeout to use for 'reboot' actions instead of stonith-timeout</shortdesc>
        <content type="timeout" default=""/>
      </parameter>
      <parameter name="pcmk_reboot_retries" advanced="1" generated="0">
        <longdesc lang="en">Some devices do not support multiple connections. Operations may "fail" if the device is busy with another task. In that case, Pacemaker will automatically retry the operation if there is time remaining. Use this option to alter the number of times Pacemaker tries a 'reboot' action before giving up.</longdesc>
        <shortdesc lang="en">The maximum number of times to try the 'reboot' command within the timeout period</shortdesc>
        <content type="integer" default=""/>
      </parameter>
      <parameter name="pcmk_off_action" advanced="1" generated="0">
        <longdesc lang="en">Some devices do not support the standard commands or may provide additional ones. Use this to specify an alternate, device-specific, command that implements the 'off' action.</longdesc>
        <shortdesc lang="en">An alternate command to run instead of 'off'</shortdesc>
        <content type="string" default=""/>
      </parameter>
      <parameter name="pcmk_off_timeout" advanced="1" generated="0">
        <longdesc lang="en">Some devices need much more/less time to complete than normal. Use this to specify an alternate, device-specific, timeout for 'off' actions.</longdesc>
        <shortdesc lang="en">Specify an alternate timeout to use for 'off' actions instead of stonith-timeout</shortdesc>
        <content type="timeout" default=""/>
      </parameter>
      <parameter name="pcmk_off_retries" advanced="1" generated="0">
        <longdesc lang="en">Some devices do not support multiple connections. Operations may "fail" if the device is busy with another task. In that case, Pacemaker will automatically retry the operation if there is time remaining. Use this option to alter the number of times Pacemaker tries a 'off' action before giving up.</longdesc>
        <shortdesc lang="en">The maximum number of times to try the 'off' command within the timeout period</shortdesc>
        <content type="integer" default=""/>
      </parameter>
      <parameter name="pcmk_on_action" advanced="1" generated="0">
        <longdesc lang="en">Some devices do not support the standard commands or may provide additional ones. Use this to specify an alternate, device-specific, command that implements the 'on' action.</longdesc>
        <shortdesc lang="en">An alternate command to run instead of 'on'</shortdesc>
        <content type="string" default=""/>
      </parameter>
      <parameter name="pcmk_on_timeout" advanced="1" generated="0">
        <longdesc lang="en">Some devices need much more/less time to complete than normal. Use this to specify an alternate, device-specific, timeout for 'on' actions.</longdesc>
        <shortdesc lang="en">Specify an alternate timeout to use for 'on' actions instead of stonith-timeout</shortdesc>
        <content type="timeout" default=""/>
      </parameter>
      <parameter name="pcmk_on_retries" advanced="1" generated="0">
        <longdesc lang="en">Some devices do not support multiple connections. Operations may "fail" if the device is busy with another task. In that case, Pacemaker will automatically retry the operation if there is time remaining. Use this option to alter the number of times Pacemaker tries a 'on' action before giving up.</longdesc>
        <shortdesc lang="en">The maximum number of times to try the 'on' command within the timeout period</shortdesc>
        <content type="integer" default=""/>
      </parameter>
      <parameter name="pcmk_list_action" advanced="1" generated="0">
        <longdesc lang="en">Some devices do not support the standard commands or may provide additional ones. Use this to specify an alternate, device-specific, command that implements the 'list' action.</longdesc>
        <shortdesc lang="en">An alternate command to run instead of 'list'</shortdesc>
        <content type="string" default=""/>
      </parameter>
      <parameter name="pcmk_list_timeout" advanced="1" generated="0">
        <longdesc lang="en">Some devices need much more/less time to complete than normal. Use this to specify an alternate, device-specific, timeout for 'list' actions.</longdesc>
        <shortdesc lang="en">Specify an alternate timeout to use for 'list' actions instead of stonith-timeout</shortdesc>
        <content type="timeout" default=""/>
      </parameter>
      <parameter name="pcmk_list_retries" advanced="1" generated="0">
        <longdesc lang="en">Some devices do not support multiple connections. Operations may "fail" if the device is busy with another task. In that case, Pacemaker will automatically retry the operation if there is time remaining. Use this option to alter the number of times Pacemaker tries a 'list' action before giving up.</longdesc>
        <shortdesc lang="en">The maximum number of times to try the 'list' command within the timeout period</shortdesc>
        <content type="integer" default=""/>
      </parameter>
      <parameter name="pcmk_monitor_action" advanced="1" generated="0">
        <longdesc lang="en">Some devices do not support the standard commands or may provide additional ones. Use this to specify an alternate, device-specific, command that implements the 'monitor' action.</longdesc>
        <shortdesc lang="en">An alternate command to run instead of 'monitor'</shortdesc>
        <content type="string" default=""/>
      </parameter>
      <parameter name="pcmk_monitor_timeout" advanced="1" generated="0">
        <longdesc lang="en">Some devices need much more/less time to complete than normal. Use this to specify an alternate, device-specific, timeout for 'monitor' actions.</longdesc>
        <shortdesc lang="en">Specify an alternate timeout to use for 'monitor' actions instead of stonith-timeout</shortdesc>
        <content type="timeout" default=""/>
      </parameter>
      <parameter name="pcmk_monitor_retries" advanced="1" generated="0">
        <longdesc lang="en">Some devices do not support multiple connections. Operations may "fail" if the device is busy with another task. In that case, Pacemaker will automatically retry the operation if there is time remaining. Use this option to alter the number of times Pacemaker tries a 'monitor' action before giving up.</longdesc>
        <shortdesc lang="en">The maximum number of times to try the 'monitor' command within the timeout period</shortdesc>
        <content type="integer" default=""/>
      </parameter>
      <parameter name="pcmk_status_action" advanced="1" generated="0">
        <longdesc lang="en">Some devices do not support the standard commands or may provide additional ones. Use this to specify an alternate, device-specific, command that implements the 'status' action.</longdesc>
        <shortdesc lang="en">An alternate command to run instead of 'status'</shortdesc>
        <content type="string" default=""/>
      </parameter>
      <parameter name="pcmk_status_timeout" advanced="1" generated="0">
        <longdesc lang="en">Some devices need much more/less time to complete than normal. Use this to specify an alternate, device-specific, timeout for 'status' actions.</longdesc>
        <shortdesc lang="en">Specify an alternate timeout to use for 'status' actions instead of stonith-timeout</shortdesc>
        <content type="timeout" default=""/>
      </parameter>
      <parameter name="pcmk_status_retries" advanced="1" generated="0">
        <longdesc lang="en">Some devices do not support multiple connections. Operations may "fail" if the device is busy with another task. In that case, Pacemaker will automatically retry the operation if there is time remaining. Use this option to alter the number of times Pacemaker tries a 'status' action before giving up.</longdesc>
        <shortdesc lang="en">The maximum number of times to try the 'status' command within the timeout period</shortdesc>
        <content type="integer" default=""/>
      </parameter>
    </parameters>
  </resource-agent>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: List all available fencing parameters (XML) - OK (0) =#=#=#=
* Passed: crm_resource   - List all available fencing parameters (XML)
=#=#=#= Begin test: crm_resource given both -r and resource config =#=#=#=
crm_resource: --resource cannot be used with --class, --agent, and --provider
=#=#=#= End test: crm_resource given both -r and resource config - Incorrect usage (64) =#=#=#=
* Passed: crm_resource   - crm_resource given both -r and resource config
=#=#=#= Begin test: crm_resource given resource config with invalid action =#=#=#=
crm_resource: --class, --agent, and --provider can only be used with --validate and --force-*
=#=#=#= End test: crm_resource given resource config with invalid action - Incorrect usage (64) =#=#=#=
* Passed: crm_resource   - crm_resource given resource config with invalid action
=#=#=#= Begin test: Create a resource meta attribute =#=#=#=
unpack_resources 	error: Resource start-up disabled since no STONITH resources have been defined
unpack_resources 	error: Either configure some or disable STONITH with the stonith-enabled option
unpack_resources 	error: NOTE: Clusters with shared data need STONITH to ensure data integrity
Set 'dummy' option: id=dummy-meta_attributes-is-managed set=dummy-meta_attributes name=is-managed value=false
=#=#=#= Current cib after: Create a resource meta attribute =#=#=#=
<cib epoch="18" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes">
          <nvpair id="dummy-meta_attributes-is-managed" name="is-managed" value="false"/>
        </meta_attributes>
      </primitive>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Create a resource meta attribute - OK (0) =#=#=#=
* Passed: crm_resource   - Create a resource meta attribute
=#=#=#= Begin test: Query a resource meta attribute =#=#=#=
unpack_resources 	error: Resource start-up disabled since no STONITH resources have been defined
unpack_resources 	error: Either configure some or disable STONITH with the stonith-enabled option
unpack_resources 	error: NOTE: Clusters with shared data need STONITH to ensure data integrity
false
=#=#=#= Current cib after: Query a resource meta attribute =#=#=#=
<cib epoch="18" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes">
          <nvpair id="dummy-meta_attributes-is-managed" name="is-managed" value="false"/>
        </meta_attributes>
      </primitive>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Query a resource meta attribute - OK (0) =#=#=#=
* Passed: crm_resource   - Query a resource meta attribute
=#=#=#= Begin test: Remove a resource meta attribute =#=#=#=
unpack_resources 	error: Resource start-up disabled since no STONITH resources have been defined
unpack_resources 	error: Either configure some or disable STONITH with the stonith-enabled option
unpack_resources 	error: NOTE: Clusters with shared data need STONITH to ensure data integrity
Deleted 'dummy' option: id=dummy-meta_attributes-is-managed name=is-managed
=#=#=#= Current cib after: Remove a resource meta attribute =#=#=#=
<cib epoch="19" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
      </primitive>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Remove a resource meta attribute - OK (0) =#=#=#=
* Passed: crm_resource   - Remove a resource meta attribute
=#=#=#= Begin test: Create another resource meta attribute =#=#=#=
unpack_resources 	error: Resource start-up disabled since no STONITH resources have been defined
unpack_resources 	error: Either configure some or disable STONITH with the stonith-enabled option
unpack_resources 	error: NOTE: Clusters with shared data need STONITH to ensure data integrity
<pacemaker-result api-version="X" request="crm_resource -r dummy --meta -p target-role -v Stopped --output-as=xml">
  <resource-settings>
    <primitive id="dummy">
      <meta_attributes id="dummy-meta_attributes">
        <nvpair id="dummy-meta_attributes-target-role" value="Stopped" name="target-role"/>
      </meta_attributes>
    </primitive>
  </resource-settings>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Create another resource meta attribute - OK (0) =#=#=#=
* Passed: crm_resource   - Create another resource meta attribute
=#=#=#= Begin test: Show why a resource is not running =#=#=#=
unpack_resources 	error: Resource start-up disabled since no STONITH resources have been defined
unpack_resources 	error: Either configure some or disable STONITH with the stonith-enabled option
unpack_resources 	error: NOTE: Clusters with shared data need STONITH to ensure data integrity
<pacemaker-result api-version="X" request="crm_resource -Y -r dummy --output-as=xml">
  <reason running="false">
    <check id="dummy" remain_stopped="true"/>
  </reason>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Show why a resource is not running - OK (0) =#=#=#=
* Passed: crm_resource   - Show why a resource is not running
=#=#=#= Begin test: Remove another resource meta attribute =#=#=#=
unpack_resources 	error: Resource start-up disabled since no STONITH resources have been defined
unpack_resources 	error: Either configure some or disable STONITH with the stonith-enabled option
unpack_resources 	error: NOTE: Clusters with shared data need STONITH to ensure data integrity
<pacemaker-result api-version="X" request="crm_resource -r dummy --meta -d target-role --output-as=xml">
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Remove another resource meta attribute - OK (0) =#=#=#=
* Passed: crm_resource   - Remove another resource meta attribute
=#=#=#= Begin test: Get a non-existent attribute from a resource element with output-as=xml =#=#=#=
unpack_resources 	error: Resource start-up disabled since no STONITH resources have been defined
unpack_resources 	error: Either configure some or disable STONITH with the stonith-enabled option
unpack_resources 	error: NOTE: Clusters with shared data need STONITH to ensure data integrity
<pacemaker-result api-version="X" request="crm_resource -r dummy --get-parameter nonexistent --element --output-as=xml">
  <status code="0" message="OK">
    <errors>
      <error>Attribute 'nonexistent' not found for 'dummy'</error>
    </errors>
  </status>
</pacemaker-result>
=#=#=#= End test: Get a non-existent attribute from a resource element with output-as=xml - OK (0) =#=#=#=
* Passed: crm_resource   - Get a non-existent attribute from a resource element with output-as=xml
=#=#=#= Begin test: Get a non-existent attribute from a resource element without output-as=xml =#=#=#=
unpack_resources 	error: Resource start-up disabled since no STONITH resources have been defined
unpack_resources 	error: Either configure some or disable STONITH with the stonith-enabled option
unpack_resources 	error: NOTE: Clusters with shared data need STONITH to ensure data integrity
Attribute 'nonexistent' not found for 'dummy'
=#=#=#= Current cib after: Get a non-existent attribute from a resource element without output-as=xml =#=#=#=
<cib epoch="21" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
      </primitive>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Get a non-existent attribute from a resource element without output-as=xml - OK (0) =#=#=#=
* Passed: crm_resource   - Get a non-existent attribute from a resource element without output-as=xml
=#=#=#= Begin test: Get an existent attribute from a resource element with output-as=xml =#=#=#=
unpack_resources 	error: Resource start-up disabled since no STONITH resources have been defined
unpack_resources 	error: Either configure some or disable STONITH with the stonith-enabled option
unpack_resources 	error: NOTE: Clusters with shared data need STONITH to ensure data integrity
<pacemaker-result api-version="X" request="crm_resource -r dummy --get-parameter class --element --output-as=xml">
  <list name="attributes" count="1">
    <item name="class">ocf</item>
  </list>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Get an existent attribute from a resource element with output-as=xml - OK (0) =#=#=#=
* Passed: crm_resource   - Get an existent attribute from a resource element with output-as=xml
=#=#=#= Begin test: Get an existent attribute from a resource element without output-as=xml =#=#=#=
unpack_resources 	error: Resource start-up disabled since no STONITH resources have been defined
unpack_resources 	error: Either configure some or disable STONITH with the stonith-enabled option
unpack_resources 	error: NOTE: Clusters with shared data need STONITH to ensure data integrity
ocf
=#=#=#= Current cib after: Get an existent attribute from a resource element without output-as=xml =#=#=#=
<cib epoch="21" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
      </primitive>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Get an existent attribute from a resource element without output-as=xml - OK (0) =#=#=#=
* Passed: crm_resource   - Get an existent attribute from a resource element without output-as=xml
=#=#=#= Begin test: Set a non-existent attribute for a resource element with output-as=xml =#=#=#=
unpack_resources 	error: Resource start-up disabled since no STONITH resources have been defined
unpack_resources 	error: Either configure some or disable STONITH with the stonith-enabled option
unpack_resources 	error: NOTE: Clusters with shared data need STONITH to ensure data integrity
<pacemaker-result api-version="X" request="crm_resource -r dummy --set-parameter=description -v test_description --element --output-as=xml">
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= Current cib after: Set a non-existent attribute for a resource element with output-as=xml =#=#=#=
<cib epoch="22" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy" description="test_description">
        <meta_attributes id="dummy-meta_attributes"/>
      </primitive>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Set a non-existent attribute for a resource element with output-as=xml - OK (0) =#=#=#=
* Passed: crm_resource   - Set a non-existent attribute for a resource element with output-as=xml
=#=#=#= Begin test: Set an existent attribute for a resource element with output-as=xml =#=#=#=
unpack_resources 	error: Resource start-up disabled since no STONITH resources have been defined
unpack_resources 	error: Either configure some or disable STONITH with the stonith-enabled option
unpack_resources 	error: NOTE: Clusters with shared data need STONITH to ensure data integrity
<pacemaker-result api-version="X" request="crm_resource -r dummy --set-parameter=description -v test_description --element --output-as=xml">
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= Current cib after: Set an existent attribute for a resource element with output-as=xml =#=#=#=
<cib epoch="23" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy" description="test_description">
        <meta_attributes id="dummy-meta_attributes"/>
      </primitive>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Set an existent attribute for a resource element with output-as=xml - OK (0) =#=#=#=
* Passed: crm_resource   - Set an existent attribute for a resource element with output-as=xml
=#=#=#= Begin test: Delete an existent attribute for a resource element with output-as=xml =#=#=#=
unpack_resources 	error: Resource start-up disabled since no STONITH resources have been defined
unpack_resources 	error: Either configure some or disable STONITH with the stonith-enabled option
unpack_resources 	error: NOTE: Clusters with shared data need STONITH to ensure data integrity
<pacemaker-result api-version="X" request="crm_resource -r dummy -d description --element --output-as=xml">
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= Current cib after: Delete an existent attribute for a resource element with output-as=xml =#=#=#=
<cib epoch="24" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
      </primitive>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Delete an existent attribute for a resource element with output-as=xml - OK (0) =#=#=#=
* Passed: crm_resource   - Delete an existent attribute for a resource element with output-as=xml
=#=#=#= Begin test: Delete a non-existent attribute for a resource element with output-as=xml =#=#=#=
unpack_resources 	error: Resource start-up disabled since no STONITH resources have been defined
unpack_resources 	error: Either configure some or disable STONITH with the stonith-enabled option
unpack_resources 	error: NOTE: Clusters with shared data need STONITH to ensure data integrity
<pacemaker-result api-version="X" request="crm_resource -r dummy -d description --element --output-as=xml">
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= Current cib after: Delete a non-existent attribute for a resource element with output-as=xml =#=#=#=
<cib epoch="25" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
      </primitive>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Delete a non-existent attribute for a resource element with output-as=xml - OK (0) =#=#=#=
* Passed: crm_resource   - Delete a non-existent attribute for a resource element with output-as=xml
=#=#=#= Begin test: Set a non-existent attribute for a resource element without output-as=xml =#=#=#=
unpack_resources 	error: Resource start-up disabled since no STONITH resources have been defined
unpack_resources 	error: Either configure some or disable STONITH with the stonith-enabled option
unpack_resources 	error: NOTE: Clusters with shared data need STONITH to ensure data integrity
Set attribute: name=description value=test_description
=#=#=#= Current cib after: Set a non-existent attribute for a resource element without output-as=xml =#=#=#=
<cib epoch="26" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy" description="test_description">
        <meta_attributes id="dummy-meta_attributes"/>
      </primitive>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Set a non-existent attribute for a resource element without output-as=xml - OK (0) =#=#=#=
* Passed: crm_resource   - Set a non-existent attribute for a resource element without output-as=xml
=#=#=#= Begin test: Set an existent attribute for a resource element without output-as=xml =#=#=#=
unpack_resources 	error: Resource start-up disabled since no STONITH resources have been defined
unpack_resources 	error: Either configure some or disable STONITH with the stonith-enabled option
unpack_resources 	error: NOTE: Clusters with shared data need STONITH to ensure data integrity
Set attribute: name=description value=test_description
=#=#=#= Current cib after: Set an existent attribute for a resource element without output-as=xml =#=#=#=
<cib epoch="27" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy" description="test_description">
        <meta_attributes id="dummy-meta_attributes"/>
      </primitive>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Set an existent attribute for a resource element without output-as=xml - OK (0) =#=#=#=
* Passed: crm_resource   - Set an existent attribute for a resource element without output-as=xml
=#=#=#= Begin test: Delete an existent attribute for a resource element without output-as=xml =#=#=#=
unpack_resources 	error: Resource start-up disabled since no STONITH resources have been defined
unpack_resources 	error: Either configure some or disable STONITH with the stonith-enabled option
unpack_resources 	error: NOTE: Clusters with shared data need STONITH to ensure data integrity
Deleted attribute: description
=#=#=#= Current cib after: Delete an existent attribute for a resource element without output-as=xml =#=#=#=
<cib epoch="28" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
      </primitive>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Delete an existent attribute for a resource element without output-as=xml - OK (0) =#=#=#=
* Passed: crm_resource   - Delete an existent attribute for a resource element without output-as=xml
=#=#=#= Begin test: Delete a non-existent attribute for a resource element without output-as=xml =#=#=#=
unpack_resources 	error: Resource start-up disabled since no STONITH resources have been defined
unpack_resources 	error: Either configure some or disable STONITH with the stonith-enabled option
unpack_resources 	error: NOTE: Clusters with shared data need STONITH to ensure data integrity
Deleted attribute: description
=#=#=#= Current cib after: Delete a non-existent attribute for a resource element without output-as=xml =#=#=#=
<cib epoch="29" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
      </primitive>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Delete a non-existent attribute for a resource element without output-as=xml - OK (0) =#=#=#=
* Passed: crm_resource   - Delete a non-existent attribute for a resource element without output-as=xml
=#=#=#= Begin test: Create a resource attribute =#=#=#=
unpack_resources 	error: Resource start-up disabled since no STONITH resources have been defined
unpack_resources 	error: Either configure some or disable STONITH with the stonith-enabled option
unpack_resources 	error: NOTE: Clusters with shared data need STONITH to ensure data integrity
Set 'dummy' option: id=dummy-instance_attributes-delay set=dummy-instance_attributes name=delay value=10s
=#=#=#= Current cib after: Create a resource attribute =#=#=#=
<cib epoch="30" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Create a resource attribute - OK (0) =#=#=#=
* Passed: crm_resource   - Create a resource attribute
=#=#=#= Begin test: List the configured resources =#=#=#=
unpack_resources 	error: Resource start-up disabled since no STONITH resources have been defined
unpack_resources 	error: Either configure some or disable STONITH with the stonith-enabled option
unpack_resources 	error: NOTE: Clusters with shared data need STONITH to ensure data integrity
Full List of Resources:
  * dummy	(ocf:pacemaker:Dummy):	 Stopped
=#=#=#= Current cib after: List the configured resources =#=#=#=
<cib epoch="30" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: List the configured resources - OK (0) =#=#=#=
* Passed: crm_resource   - List the configured resources
=#=#=#= Begin test: List the configured resources in XML =#=#=#=
unpack_resources 	error: Resource start-up disabled since no STONITH resources have been defined
unpack_resources 	error: Either configure some or disable STONITH with the stonith-enabled option
unpack_resources 	error: NOTE: Clusters with shared data need STONITH to ensure data integrity
<pacemaker-result api-version="X" request="crm_resource -L --output-as=xml">
  <resources>
    <resource id="dummy" resource_agent="ocf:pacemaker:Dummy" role="Stopped" active="false" orphaned="false" blocked="false" maintenance="false" managed="true" failed="false" failure_ignored="false" nodes_running_on="0"/>
  </resources>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: List the configured resources in XML - OK (0) =#=#=#=
* Passed: crm_resource   - List the configured resources in XML
=#=#=#= Begin test: Implicitly list the configured resources =#=#=#=
unpack_resources 	error: Resource start-up disabled since no STONITH resources have been defined
unpack_resources 	error: Either configure some or disable STONITH with the stonith-enabled option
unpack_resources 	error: NOTE: Clusters with shared data need STONITH to ensure data integrity
Full List of Resources:
  * dummy	(ocf:pacemaker:Dummy):	 Stopped
=#=#=#= End test: Implicitly list the configured resources - OK (0) =#=#=#=
* Passed: crm_resource   - Implicitly list the configured resources
=#=#=#= Begin test: List IDs of instantiated resources =#=#=#=
unpack_resources 	error: Resource start-up disabled since no STONITH resources have been defined
unpack_resources 	error: Either configure some or disable STONITH with the stonith-enabled option
unpack_resources 	error: NOTE: Clusters with shared data need STONITH to ensure data integrity
dummy
=#=#=#= End test: List IDs of instantiated resources - OK (0) =#=#=#=
* Passed: crm_resource   - List IDs of instantiated resources
=#=#=#= Begin test: Show XML configuration of resource =#=#=#=
unpack_resources 	error: Resource start-up disabled since no STONITH resources have been defined
unpack_resources 	error: Either configure some or disable STONITH with the stonith-enabled option
unpack_resources 	error: NOTE: Clusters with shared data need STONITH to ensure data integrity
dummy	(ocf:pacemaker:Dummy):	 Stopped
Resource XML:
<primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
  <meta_attributes id="dummy-meta_attributes"/>
  <instance_attributes id="dummy-instance_attributes">
    <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
  </instance_attributes>
</primitive>
=#=#=#= End test: Show XML configuration of resource - OK (0) =#=#=#=
* Passed: crm_resource   - Show XML configuration of resource
=#=#=#= Begin test: Show XML configuration of resource, output as XML =#=#=#=
unpack_resources 	error: Resource start-up disabled since no STONITH resources have been defined
unpack_resources 	error: Either configure some or disable STONITH with the stonith-enabled option
unpack_resources 	error: NOTE: Clusters with shared data need STONITH to ensure data integrity
<pacemaker-result api-version="X" request="crm_resource -q -r dummy --output-as=xml">
  <resource_config>
    <resource id="dummy" resource_agent="ocf:pacemaker:Dummy" role="Stopped" active="false" orphaned="false" blocked="false" maintenance="false" managed="true" failed="false" failure_ignored="false" nodes_running_on="0"/>
    <xml><![CDATA[<primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
  <meta_attributes id="dummy-meta_attributes"/>
  <instance_attributes id="dummy-instance_attributes">
    <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
  </instance_attributes>
</primitive>
]]></xml>
  </resource_config>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Show XML configuration of resource, output as XML - OK (0) =#=#=#=
* Passed: crm_resource   - Show XML configuration of resource, output as XML
=#=#=#= Begin test: Require a destination when migrating a resource that is stopped =#=#=#=
unpack_resources 	error: Resource start-up disabled since no STONITH resources have been defined
unpack_resources 	error: Either configure some or disable STONITH with the stonith-enabled option
unpack_resources 	error: NOTE: Clusters with shared data need STONITH to ensure data integrity
crm_resource: Resource 'dummy' not moved: active in 0 locations.
To prevent 'dummy' from running on a specific location, specify a node.
=#=#=#= Current cib after: Require a destination when migrating a resource that is stopped =#=#=#=
<cib epoch="30" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Require a destination when migrating a resource that is stopped - Incorrect usage (64) =#=#=#=
* Passed: crm_resource   - Require a destination when migrating a resource that is stopped
=#=#=#= Begin test: Don't support migration to non-existent locations =#=#=#=
unpack_resources 	error: Resource start-up disabled since no STONITH resources have been defined
unpack_resources 	error: Either configure some or disable STONITH with the stonith-enabled option
unpack_resources 	error: NOTE: Clusters with shared data need STONITH to ensure data integrity
crm_resource: Node 'i.do.not.exist' not found
Error performing operation: No such object
=#=#=#= Current cib after: Don't support migration to non-existent locations =#=#=#=
<cib epoch="30" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Don't support migration to non-existent locations - No such object (105) =#=#=#=
* Passed: crm_resource   - Don't support migration to non-existent locations
=#=#=#= Begin test: Create a fencing resource =#=#=#=
=#=#=#= Current cib after: Create a fencing resource =#=#=#=
<cib epoch="31" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Create a fencing resource - OK (0) =#=#=#=
* Passed: cibadmin       - Create a fencing resource
=#=#=#= Begin test: Bring resources online =#=#=#=
Current cluster status:
  * Node List:
    * Online: [ node1 ]

  * Full List of Resources:
    * dummy	(ocf:pacemaker:Dummy):	 Stopped
    * Fence	(stonith:fence_true):	 Stopped

Transition Summary:
  * Start      dummy   ( node1 )
  * Start      Fence   ( node1 )

Executing Cluster Transition:
  * Resource action: dummy           monitor on node1
  * Resource action: Fence           monitor on node1
  * Resource action: dummy           start on node1
  * Resource action: Fence           start on node1

Revised Cluster Status:
  * Node List:
    * Online: [ node1 ]

  * Full List of Resources:
    * dummy	(ocf:pacemaker:Dummy):	 Started node1
    * Fence	(stonith:fence_true):	 Started node1
=#=#=#= Current cib after: Bring resources online =#=#=#=
<cib epoch="31" num_updates="4" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Bring resources online - OK (0) =#=#=#=
* Passed: crm_simulate   - Bring resources online
=#=#=#= Begin test: Try to move a resource to its existing location =#=#=#=
crm_resource: Error performing operation: Requested item already exists
=#=#=#= Current cib after: Try to move a resource to its existing location =#=#=#=
<cib epoch="31" num_updates="4" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Try to move a resource to its existing location - Requested item already exists (108) =#=#=#=
* Passed: crm_resource   - Try to move a resource to its existing location
=#=#=#= Begin test: Try to move a resource that doesn't exist =#=#=#=
crm_resource: Resource 'xyz' not found
Error performing operation: No such object
=#=#=#= End test: Try to move a resource that doesn't exist - No such object (105) =#=#=#=
* Passed: crm_resource   - Try to move a resource that doesn't exist
=#=#=#= Begin test: Move a resource from its existing location =#=#=#=
WARNING: Creating rsc_location constraint 'cli-ban-dummy-on-node1' with a score of -INFINITY for resource dummy on node1.
	This will prevent dummy from running on node1 until the constraint is removed using the clear option or by editing the CIB with an appropriate tool.
	This will be the case even if node1 is the last node in the cluster
=#=#=#= Current cib after: Move a resource from its existing location =#=#=#=
<cib epoch="32" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints>
      <rsc_location id="cli-ban-dummy-on-node1" rsc="dummy" role="Started" node="node1" score="-INFINITY"/>
    </constraints>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Move a resource from its existing location - OK (0) =#=#=#=
* Passed: crm_resource   - Move a resource from its existing location
=#=#=#= Begin test: Clear out constraints generated by --move =#=#=#=
Removing constraint: cli-ban-dummy-on-node1
=#=#=#= Current cib after: Clear out constraints generated by --move =#=#=#=
<cib epoch="33" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Clear out constraints generated by --move - OK (0) =#=#=#=
* Passed: crm_resource   - Clear out constraints generated by --move
=#=#=#= Begin test: Default ticket granted state =#=#=#=
false
=#=#=#= Current cib after: Default ticket granted state =#=#=#=
<cib epoch="33" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Default ticket granted state - OK (0) =#=#=#=
* Passed: crm_ticket     - Default ticket granted state
=#=#=#= Begin test: Set ticket granted state =#=#=#=
=#=#=#= Current cib after: Set ticket granted state =#=#=#=
<cib epoch="33" num_updates="1" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <tickets>
      <ticket_state id="ticketA" granted="false"/>
    </tickets>
  </status>
</cib>
=#=#=#= End test: Set ticket granted state - OK (0) =#=#=#=
* Passed: crm_ticket     - Set ticket granted state
=#=#=#= Begin test: List ticket IDs =#=#=#=
ticketA
=#=#=#= End test: List ticket IDs - OK (0) =#=#=#=
* Passed: crm_ticket     - List ticket IDs
=#=#=#= Begin test: List ticket IDs, outputting in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_ticket -w --output-as=xml">
  <tickets>
    <ticket id="ticketA" status="revoked" standby="false" granted="false"/>
  </tickets>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: List ticket IDs, outputting in XML - OK (0) =#=#=#=
* Passed: crm_ticket     - List ticket IDs, outputting in XML
=#=#=#= Begin test: Query ticket state =#=#=#=
State XML:

<ticket_state id="ticketA" granted="false"/>
=#=#=#= End test: Query ticket state - OK (0) =#=#=#=
* Passed: crm_ticket     - Query ticket state
=#=#=#= Begin test: Query ticket state, outputting as xml =#=#=#=
<pacemaker-result api-version="X" request="crm_ticket -t ticketA -q --output-as=xml">
  <tickets>
    <ticket id="ticketA" granted="false"/>
  </tickets>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Query ticket state, outputting as xml - OK (0) =#=#=#=
* Passed: crm_ticket     - Query ticket state, outputting as xml
=#=#=#= Begin test: Query ticket granted state =#=#=#=
false
=#=#=#= Current cib after: Query ticket granted state =#=#=#=
<cib epoch="33" num_updates="1" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <tickets>
      <ticket_state id="ticketA" granted="false"/>
    </tickets>
  </status>
</cib>
=#=#=#= End test: Query ticket granted state - OK (0) =#=#=#=
* Passed: crm_ticket     - Query ticket granted state
=#=#=#= Begin test: Query ticket granted state, outputting as xml =#=#=#=
<pacemaker-result api-version="X" request="crm_ticket -t ticketA -G granted --output-as=xml">
  <tickets>
    <ticket id="ticketA">
      <attribute name="granted" value="false"/>
    </ticket>
  </tickets>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Query ticket granted state, outputting as xml - OK (0) =#=#=#=
* Passed: crm_ticket     - Query ticket granted state, outputting as xml
=#=#=#= Begin test: Delete ticket granted state =#=#=#=
=#=#=#= Current cib after: Delete ticket granted state =#=#=#=
<cib epoch="33" num_updates="2" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <tickets>
      <ticket_state id="ticketA"/>
    </tickets>
  </status>
</cib>
=#=#=#= End test: Delete ticket granted state - OK (0) =#=#=#=
* Passed: crm_ticket     - Delete ticket granted state
=#=#=#= Begin test: Make a ticket standby =#=#=#=
=#=#=#= Current cib after: Make a ticket standby =#=#=#=
<cib epoch="33" num_updates="3" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <tickets>
      <ticket_state id="ticketA" standby="true"/>
    </tickets>
  </status>
</cib>
=#=#=#= End test: Make a ticket standby - OK (0) =#=#=#=
* Passed: crm_ticket     - Make a ticket standby
=#=#=#= Begin test: Query ticket standby state =#=#=#=
true
=#=#=#= Current cib after: Query ticket standby state =#=#=#=
<cib epoch="33" num_updates="3" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <tickets>
      <ticket_state id="ticketA" standby="true"/>
    </tickets>
  </status>
</cib>
=#=#=#= End test: Query ticket standby state - OK (0) =#=#=#=
* Passed: crm_ticket     - Query ticket standby state
=#=#=#= Begin test: Activate a ticket =#=#=#=
=#=#=#= Current cib after: Activate a ticket =#=#=#=
<cib epoch="33" num_updates="4" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <tickets>
      <ticket_state id="ticketA" standby="false"/>
    </tickets>
  </status>
</cib>
=#=#=#= End test: Activate a ticket - OK (0) =#=#=#=
* Passed: crm_ticket     - Activate a ticket
=#=#=#= Begin test: List ticket details =#=#=#=
ticketA	revoked	(standby=false)
=#=#=#= End test: List ticket details - OK (0) =#=#=#=
* Passed: crm_ticket     - List ticket details
=#=#=#= Begin test: List ticket details, outputting as XML =#=#=#=
<pacemaker-result api-version="X" request="crm_ticket -L -t ticketA --output-as=xml">
  <tickets>
    <ticket id="ticketA" status="revoked" standby="false"/>
  </tickets>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: List ticket details, outputting as XML - OK (0) =#=#=#=
* Passed: crm_ticket     - List ticket details, outputting as XML
=#=#=#= Begin test: Add a second ticket =#=#=#=
false
=#=#=#= Current cib after: Add a second ticket =#=#=#=
<cib epoch="33" num_updates="4" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <tickets>
      <ticket_state id="ticketA" standby="false"/>
    </tickets>
  </status>
</cib>
=#=#=#= End test: Add a second ticket - OK (0) =#=#=#=
* Passed: crm_ticket     - Add a second ticket
=#=#=#= Begin test: Set second ticket granted state =#=#=#=
=#=#=#= Current cib after: Set second ticket granted state =#=#=#=
<cib epoch="33" num_updates="5" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <tickets>
      <ticket_state id="ticketA" standby="false"/>
      <ticket_state id="ticketB" granted="false"/>
    </tickets>
  </status>
</cib>
=#=#=#= End test: Set second ticket granted state - OK (0) =#=#=#=
* Passed: crm_ticket     - Set second ticket granted state
=#=#=#= Begin test: List tickets =#=#=#=
ticketA	revoked
ticketB	revoked
=#=#=#= End test: List tickets - OK (0) =#=#=#=
* Passed: crm_ticket     - List tickets
=#=#=#= Begin test: List tickets, outputting as XML =#=#=#=
<pacemaker-result api-version="X" request="crm_ticket -l --output-as=xml">
  <tickets>
    <ticket id="ticketA" status="revoked" standby="false"/>
    <ticket id="ticketB" status="revoked" standby="false" granted="false"/>
  </tickets>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: List tickets, outputting as XML - OK (0) =#=#=#=
* Passed: crm_ticket     - List tickets, outputting as XML
=#=#=#= Begin test: Delete second ticket =#=#=#=
=#=#=#= Current cib after: Delete second ticket =#=#=#=
<cib epoch="33" num_updates="6" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <tickets>
      <ticket_state id="ticketA" standby="false"/>
    </tickets>
  </status>
</cib>
=#=#=#= End test: Delete second ticket - OK (0) =#=#=#=
* Passed: cibadmin       - Delete second ticket
=#=#=#= Begin test: Delete ticket standby state =#=#=#=
=#=#=#= Current cib after: Delete ticket standby state =#=#=#=
<cib epoch="33" num_updates="7" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <tickets>
      <ticket_state id="ticketA"/>
    </tickets>
  </status>
</cib>
=#=#=#= End test: Delete ticket standby state - OK (0) =#=#=#=
* Passed: crm_ticket     - Delete ticket standby state
=#=#=#= Begin test: Delete ticket standby state =#=#=#=
=#=#=#= Current cib after: Delete ticket standby state =#=#=#=
<cib epoch="34" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints>
      <rsc_ticket id="dummy-dep-ticketA" rsc="dummy" rsc-role="Started" ticket="ticketA" loss-policy="freeze"/>
    </constraints>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <tickets>
      <ticket_state id="ticketA"/>
    </tickets>
  </status>
</cib>
=#=#=#= End test: Delete ticket standby state - OK (0) =#=#=#=
* Passed: cibadmin       - Delete ticket standby state
=#=#=#= Begin test: Query ticket constraints =#=#=#=
Constraints XML:

<rsc_ticket id="dummy-dep-ticketA" rsc="dummy" rsc-role="Started" ticket="ticketA" loss-policy="freeze"/>
=#=#=#= End test: Query ticket constraints - OK (0) =#=#=#=
* Passed: crm_ticket     - Query ticket constraints
=#=#=#= Begin test: Query ticket constraints, outputting as xml =#=#=#=
<pacemaker-result api-version="X" request="crm_ticket -t ticketA -c --output-as=xml">
  <tickets>
    <ticket id="ticketA">
      <constraints>
        <rsc_ticket id="dummy-dep-ticketA" rsc="dummy" rsc-role="Started" ticket="ticketA" loss-policy="freeze"/>
      </constraints>
    </ticket>
  </tickets>
  <resources>
    <resource id="dummy"/>
  </resources>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Query ticket constraints, outputting as xml - OK (0) =#=#=#=
* Passed: crm_ticket     - Query ticket constraints, outputting as xml
=#=#=#= Begin test: Delete ticket constraint =#=#=#=
=#=#=#= Current cib after: Delete ticket constraint =#=#=#=
<cib epoch="35" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <tickets>
      <ticket_state id="ticketA"/>
    </tickets>
  </status>
</cib>
=#=#=#= End test: Delete ticket constraint - OK (0) =#=#=#=
* Passed: cibadmin       - Delete ticket constraint
=#=#=#= Begin test: Ban a resource on unknown node =#=#=#=
crm_resource: Node 'host1' not found
Error performing operation: No such object
=#=#=#= Current cib after: Ban a resource on unknown node =#=#=#=
<cib epoch="35" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <tickets>
      <ticket_state id="ticketA"/>
    </tickets>
  </status>
</cib>
=#=#=#= End test: Ban a resource on unknown node - No such object (105) =#=#=#=
* Passed: crm_resource   - Ban a resource on unknown node
=#=#=#= Begin test: Create two more nodes and bring them online =#=#=#=
Current cluster status:
  * Node List:
    * Online: [ node1 ]

  * Full List of Resources:
    * dummy	(ocf:pacemaker:Dummy):	 Started node1
    * Fence	(stonith:fence_true):	 Started node1

Performing Requested Modifications:
  * Bringing node node2 online
  * Bringing node node3 online

Transition Summary:
  * Move       Fence   ( node1 -> node2 )

Executing Cluster Transition:
  * Resource action: dummy           monitor on node3
  * Resource action: dummy           monitor on node2
  * Resource action: Fence           stop on node1
  * Resource action: Fence           monitor on node3
  * Resource action: Fence           monitor on node2
  * Resource action: Fence           start on node2

Revised Cluster Status:
  * Node List:
    * Online: [ node1 node2 node3 ]

  * Full List of Resources:
    * dummy	(ocf:pacemaker:Dummy):	 Started node1
    * Fence	(stonith:fence_true):	 Started node2
=#=#=#= Current cib after: Create two more nodes and bring them online =#=#=#=
<cib epoch="37" num_updates="8" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints/>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_stop_0" operation="stop" crm-debug-origin="crm_simulate" transition-key="3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="3" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <tickets>
      <ticket_state id="ticketA"/>
    </tickets>
    <node_state id="node2" uname="node2" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <lrm id="node2">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <node_state id="node3" uname="node3" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <lrm id="node3">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Create two more nodes and bring them online - OK (0) =#=#=#=
* Passed: crm_simulate   - Create two more nodes and bring them online
=#=#=#= Begin test: Ban dummy from node1 =#=#=#=
WARNING: Creating rsc_location constraint 'cli-ban-dummy-on-node1' with a score of -INFINITY for resource dummy on node1.
	This will prevent dummy from running on node1 until the constraint is removed using the clear option or by editing the CIB with an appropriate tool.
	This will be the case even if node1 is the last node in the cluster
=#=#=#= Current cib after: Ban dummy from node1 =#=#=#=
<cib epoch="38" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints>
      <rsc_location id="cli-ban-dummy-on-node1" rsc="dummy" role="Started" node="node1" score="-INFINITY"/>
    </constraints>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_stop_0" operation="stop" crm-debug-origin="crm_simulate" transition-key="3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="3" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <tickets>
      <ticket_state id="ticketA"/>
    </tickets>
    <node_state id="node2" uname="node2" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <lrm id="node2">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <node_state id="node3" uname="node3" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <lrm id="node3">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Ban dummy from node1 - OK (0) =#=#=#=
* Passed: crm_resource   - Ban dummy from node1
=#=#=#= Begin test: Show where a resource is running =#=#=#=
resource dummy is running on: node1
=#=#=#= End test: Show where a resource is running - OK (0) =#=#=#=
* Passed: crm_resource   - Show where a resource is running
=#=#=#= Begin test: Show constraints on a resource =#=#=#=
Locations:
  * Node node1 (score=-INFINITY, id=cli-ban-dummy-on-node1, rsc=dummy)
=#=#=#= End test: Show constraints on a resource - OK (0) =#=#=#=
* Passed: crm_resource   - Show constraints on a resource
=#=#=#= Begin test: Ban dummy from node2 =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -r dummy -B -N node2 --output-as=xml">
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= Current cib after: Ban dummy from node2 =#=#=#=
<cib epoch="39" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints>
      <rsc_location id="cli-ban-dummy-on-node1" rsc="dummy" role="Started" node="node1" score="-INFINITY"/>
      <rsc_location id="cli-ban-dummy-on-node2" rsc="dummy" role="Started" node="node2" score="-INFINITY"/>
    </constraints>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_stop_0" operation="stop" crm-debug-origin="crm_simulate" transition-key="3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="3" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <tickets>
      <ticket_state id="ticketA"/>
    </tickets>
    <node_state id="node2" uname="node2" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <lrm id="node2">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <node_state id="node3" uname="node3" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <lrm id="node3">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Ban dummy from node2 - OK (0) =#=#=#=
* Passed: crm_resource   - Ban dummy from node2
=#=#=#= Begin test: Relocate resources due to ban =#=#=#=
Current cluster status:
  * Node List:
    * Online: [ node1 node2 node3 ]

  * Full List of Resources:
    * dummy	(ocf:pacemaker:Dummy):	 Started node1
    * Fence	(stonith:fence_true):	 Started node2

Transition Summary:
  * Move       dummy   ( node1 -> node3 )

Executing Cluster Transition:
  * Resource action: dummy           stop on node1
  * Resource action: dummy           start on node3

Revised Cluster Status:
  * Node List:
    * Online: [ node1 node2 node3 ]

  * Full List of Resources:
    * dummy	(ocf:pacemaker:Dummy):	 Started node3
    * Fence	(stonith:fence_true):	 Started node2
=#=#=#= Current cib after: Relocate resources due to ban =#=#=#=
<cib epoch="39" num_updates="2" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints>
      <rsc_location id="cli-ban-dummy-on-node1" rsc="dummy" role="Started" node="node1" score="-INFINITY"/>
      <rsc_location id="cli-ban-dummy-on-node2" rsc="dummy" role="Started" node="node2" score="-INFINITY"/>
    </constraints>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_stop_0" operation="stop" crm-debug-origin="crm_simulate" transition-key="3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="3" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_stop_0" operation="stop" crm-debug-origin="crm_simulate" transition-key="3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="3" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <tickets>
      <ticket_state id="ticketA"/>
    </tickets>
    <node_state id="node2" uname="node2" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <lrm id="node2">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <node_state id="node3" uname="node3" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <lrm id="node3">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Relocate resources due to ban - OK (0) =#=#=#=
* Passed: crm_simulate   - Relocate resources due to ban
=#=#=#= Begin test: Move dummy to node1 =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -r dummy -M -N node1 --output-as=xml">
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= Current cib after: Move dummy to node1 =#=#=#=
<cib epoch="41" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints>
      <rsc_location id="cli-ban-dummy-on-node2" rsc="dummy" role="Started" node="node2" score="-INFINITY"/>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
    </constraints>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_stop_0" operation="stop" crm-debug-origin="crm_simulate" transition-key="3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="3" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_stop_0" operation="stop" crm-debug-origin="crm_simulate" transition-key="3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="3" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <tickets>
      <ticket_state id="ticketA"/>
    </tickets>
    <node_state id="node2" uname="node2" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <lrm id="node2">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <node_state id="node3" uname="node3" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <lrm id="node3">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Move dummy to node1 - OK (0) =#=#=#=
* Passed: crm_resource   - Move dummy to node1
=#=#=#= Begin test: Clear implicit constraints for dummy on node2 =#=#=#=
Removing constraint: cli-ban-dummy-on-node2
=#=#=#= Current cib after: Clear implicit constraints for dummy on node2 =#=#=#=
<cib epoch="42" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
    </constraints>
  </configuration>
  <status>
    <node_state id="node1" uname="node1" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <transient_attributes id="node1">
        <instance_attributes id="status-node1"/>
      </transient_attributes>
      <lrm id="node1">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_stop_0" operation="stop" crm-debug-origin="crm_simulate" transition-key="3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="3" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_stop_0" operation="stop" crm-debug-origin="crm_simulate" transition-key="3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="3" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <tickets>
      <ticket_state id="ticketA"/>
    </tickets>
    <node_state id="node2" uname="node2" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <lrm id="node2">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <node_state id="node3" uname="node3" in_ccm="true" crmd="online" join="member" expected="member" crm-debug-origin="crm_simulate">
      <lrm id="node3">
        <lrm_resources>
          <lrm_resource id="dummy" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="0830891652dabe627ca72b8e879199b1"/>
          </lrm_resource>
          <lrm_resource id="Fence" class="stonith" type="fence_true">
            <lrm_rsc_op id="Fence_last_0" operation_key="Fence_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Clear implicit constraints for dummy on node2 - OK (0) =#=#=#=
* Passed: crm_resource   - Clear implicit constraints for dummy on node2
=#=#=#= Begin test: Drop the status section =#=#=#=
=#=#=#= End test: Drop the status section - OK (0) =#=#=#=
* Passed: cibadmin       - Drop the status section
=#=#=#= Begin test: Create a clone =#=#=#=
=#=#=#= End test: Create a clone - OK (0) =#=#=#=
* Passed: cibadmin       - Create a clone
=#=#=#= Begin test: Create a resource meta attribute =#=#=#=
Performing update of 'is-managed' on 'test-clone', the parent of 'test-primitive'
Set 'test-clone' option: id=test-clone-meta_attributes-is-managed set=test-clone-meta_attributes name=is-managed value=false
=#=#=#= Current cib after: Create a resource meta attribute =#=#=#=
<cib epoch="44" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy"/>
        <meta_attributes id="test-clone-meta_attributes">
          <nvpair id="test-clone-meta_attributes-is-managed" name="is-managed" value="false"/>
        </meta_attributes>
      </clone>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
    </constraints>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Create a resource meta attribute - OK (0) =#=#=#=
* Passed: crm_resource   - Create a resource meta attribute
=#=#=#= Begin test: Create a resource meta attribute in the primitive =#=#=#=
Set 'test-primitive' option: id=test-primitive-meta_attributes-is-managed set=test-primitive-meta_attributes name=is-managed value=false
=#=#=#= Current cib after: Create a resource meta attribute in the primitive =#=#=#=
<cib epoch="45" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes">
            <nvpair id="test-primitive-meta_attributes-is-managed" name="is-managed" value="false"/>
          </meta_attributes>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes">
          <nvpair id="test-clone-meta_attributes-is-managed" name="is-managed" value="false"/>
        </meta_attributes>
      </clone>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
    </constraints>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Create a resource meta attribute in the primitive - OK (0) =#=#=#=
* Passed: crm_resource   - Create a resource meta attribute in the primitive
=#=#=#= Begin test: Update resource meta attribute with duplicates =#=#=#=
Multiple attributes match name=is-managed
  Value: false 	(id=test-primitive-meta_attributes-is-managed)
  Value: false 	(id=test-clone-meta_attributes-is-managed)

A value for 'is-managed' already exists in child 'test-primitive', performing update on that instead of 'test-clone'
Set 'test-primitive' option: id=test-primitive-meta_attributes-is-managed name=is-managed value=true
=#=#=#= Current cib after: Update resource meta attribute with duplicates =#=#=#=
<cib epoch="46" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes">
            <nvpair id="test-primitive-meta_attributes-is-managed" name="is-managed" value="true"/>
          </meta_attributes>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes">
          <nvpair id="test-clone-meta_attributes-is-managed" name="is-managed" value="false"/>
        </meta_attributes>
      </clone>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
    </constraints>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Update resource meta attribute with duplicates - OK (0) =#=#=#=
* Passed: crm_resource   - Update resource meta attribute with duplicates
=#=#=#= Begin test: Update resource meta attribute with duplicates (force clone) =#=#=#=
Set 'test-clone' option: id=test-clone-meta_attributes-is-managed name=is-managed value=true
=#=#=#= Current cib after: Update resource meta attribute with duplicates (force clone) =#=#=#=
<cib epoch="47" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes">
            <nvpair id="test-primitive-meta_attributes-is-managed" name="is-managed" value="true"/>
          </meta_attributes>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes">
          <nvpair id="test-clone-meta_attributes-is-managed" name="is-managed" value="true"/>
        </meta_attributes>
      </clone>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
    </constraints>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Update resource meta attribute with duplicates (force clone) - OK (0) =#=#=#=
* Passed: crm_resource   - Update resource meta attribute with duplicates (force clone)
=#=#=#= Begin test: Update child resource meta attribute with duplicates =#=#=#=
Multiple attributes match name=is-managed
  Value: true 	(id=test-primitive-meta_attributes-is-managed)
  Value: true 	(id=test-clone-meta_attributes-is-managed)

Set 'test-primitive' option: id=test-primitive-meta_attributes-is-managed name=is-managed value=false
=#=#=#= Current cib after: Update child resource meta attribute with duplicates =#=#=#=
<cib epoch="48" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes">
            <nvpair id="test-primitive-meta_attributes-is-managed" name="is-managed" value="false"/>
          </meta_attributes>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes">
          <nvpair id="test-clone-meta_attributes-is-managed" name="is-managed" value="true"/>
        </meta_attributes>
      </clone>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
    </constraints>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Update child resource meta attribute with duplicates - OK (0) =#=#=#=
* Passed: crm_resource   - Update child resource meta attribute with duplicates
=#=#=#= Begin test: Delete resource meta attribute with duplicates =#=#=#=
Multiple attributes match name=is-managed
  Value: false 	(id=test-primitive-meta_attributes-is-managed)
  Value: true 	(id=test-clone-meta_attributes-is-managed)

A value for 'is-managed' already exists in child 'test-primitive', performing delete on that instead of 'test-clone'
Deleted 'test-primitive' option: id=test-primitive-meta_attributes-is-managed name=is-managed
=#=#=#= Current cib after: Delete resource meta attribute with duplicates =#=#=#=
<cib epoch="49" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes"/>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes">
          <nvpair id="test-clone-meta_attributes-is-managed" name="is-managed" value="true"/>
        </meta_attributes>
      </clone>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
    </constraints>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Delete resource meta attribute with duplicates - OK (0) =#=#=#=
* Passed: crm_resource   - Delete resource meta attribute with duplicates
=#=#=#= Begin test: Delete resource meta attribute in parent =#=#=#=
Performing delete of 'is-managed' on 'test-clone', the parent of 'test-primitive'
Deleted 'test-clone' option: id=test-clone-meta_attributes-is-managed name=is-managed
=#=#=#= Current cib after: Delete resource meta attribute in parent =#=#=#=
<cib epoch="50" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes"/>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes"/>
      </clone>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
    </constraints>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Delete resource meta attribute in parent - OK (0) =#=#=#=
* Passed: crm_resource   - Delete resource meta attribute in parent
=#=#=#= Begin test: Create a resource meta attribute in the primitive =#=#=#=
Set 'test-primitive' option: id=test-primitive-meta_attributes-is-managed set=test-primitive-meta_attributes name=is-managed value=false
=#=#=#= Current cib after: Create a resource meta attribute in the primitive =#=#=#=
<cib epoch="51" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes">
            <nvpair id="test-primitive-meta_attributes-is-managed" name="is-managed" value="false"/>
          </meta_attributes>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes"/>
      </clone>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
    </constraints>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Create a resource meta attribute in the primitive - OK (0) =#=#=#=
* Passed: crm_resource   - Create a resource meta attribute in the primitive
=#=#=#= Begin test: Update existing resource meta attribute =#=#=#=
A value for 'is-managed' already exists in child 'test-primitive', performing update on that instead of 'test-clone'
Set 'test-primitive' option: id=test-primitive-meta_attributes-is-managed name=is-managed value=true
=#=#=#= Current cib after: Update existing resource meta attribute =#=#=#=
<cib epoch="52" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes">
            <nvpair id="test-primitive-meta_attributes-is-managed" name="is-managed" value="true"/>
          </meta_attributes>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes"/>
      </clone>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
    </constraints>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Update existing resource meta attribute - OK (0) =#=#=#=
* Passed: crm_resource   - Update existing resource meta attribute
=#=#=#= Begin test: Create a resource meta attribute in the parent =#=#=#=
Set 'test-clone' option: id=test-clone-meta_attributes-is-managed set=test-clone-meta_attributes name=is-managed value=true
=#=#=#= Current cib after: Create a resource meta attribute in the parent =#=#=#=
<cib epoch="53" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes">
            <nvpair id="test-primitive-meta_attributes-is-managed" name="is-managed" value="true"/>
          </meta_attributes>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes">
          <nvpair id="test-clone-meta_attributes-is-managed" name="is-managed" value="true"/>
        </meta_attributes>
      </clone>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
    </constraints>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Create a resource meta attribute in the parent - OK (0) =#=#=#=
* Passed: crm_resource   - Create a resource meta attribute in the parent
=#=#=#= Begin test: Copy resources =#=#=#=
=#=#=#= End test: Copy resources - OK (0) =#=#=#=
* Passed: cibadmin       - Copy resources
=#=#=#= Begin test: Delete resource parent meta attribute (force) =#=#=#=
Deleted 'test-clone' option: id=test-clone-meta_attributes-is-managed name=is-managed
=#=#=#= Current cib after: Delete resource parent meta attribute (force) =#=#=#=
<cib epoch="54" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes">
            <nvpair id="test-primitive-meta_attributes-is-managed" name="is-managed" value="true"/>
          </meta_attributes>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes"/>
      </clone>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
    </constraints>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Delete resource parent meta attribute (force) - OK (0) =#=#=#=
* Passed: crm_resource   - Delete resource parent meta attribute (force)
=#=#=#= Begin test: Restore duplicates =#=#=#=
=#=#=#= Current cib after: Restore duplicates =#=#=#=
<cib epoch="55" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes">
            <nvpair id="test-primitive-meta_attributes-is-managed" name="is-managed" value="true"/>
          </meta_attributes>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes">
          <nvpair id="test-clone-meta_attributes-is-managed" name="is-managed" value="true"/>
        </meta_attributes>
      </clone>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
    </constraints>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Restore duplicates - OK (0) =#=#=#=
* Passed: cibadmin       - Restore duplicates
=#=#=#= Begin test: Delete resource child meta attribute =#=#=#=
Multiple attributes match name=is-managed
  Value: true 	(id=test-primitive-meta_attributes-is-managed)
  Value: true 	(id=test-clone-meta_attributes-is-managed)

Deleted 'test-primitive' option: id=test-primitive-meta_attributes-is-managed name=is-managed
=#=#=#= Current cib after: Delete resource child meta attribute =#=#=#=
<cib epoch="56" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes"/>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes">
          <nvpair id="test-clone-meta_attributes-is-managed" name="is-managed" value="true"/>
        </meta_attributes>
      </clone>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
    </constraints>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Delete resource child meta attribute - OK (0) =#=#=#=
* Passed: crm_resource   - Delete resource child meta attribute
=#=#=#= Begin test: Create the dummy-group resource group =#=#=#=
=#=#=#= Current cib after: Create the dummy-group resource group =#=#=#=
<cib epoch="57" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes"/>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes">
          <nvpair id="test-clone-meta_attributes-is-managed" name="is-managed" value="true"/>
        </meta_attributes>
      </clone>
      <group id="dummy-group">
        <primitive id="dummy1" class="ocf" provider="pacemaker" type="Dummy"/>
        <primitive id="dummy2" class="ocf" provider="pacemaker" type="Dummy"/>
      </group>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
    </constraints>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Create the dummy-group resource group - OK (0) =#=#=#=
* Passed: cibadmin       - Create the dummy-group resource group
=#=#=#= Begin test: Create a resource meta attribute in dummy1 =#=#=#=
Set 'dummy1' option: id=dummy1-meta_attributes-is-managed set=dummy1-meta_attributes name=is-managed value=true
=#=#=#= Current cib after: Create a resource meta attribute in dummy1 =#=#=#=
<cib epoch="58" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes"/>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes">
          <nvpair id="test-clone-meta_attributes-is-managed" name="is-managed" value="true"/>
        </meta_attributes>
      </clone>
      <group id="dummy-group">
        <primitive id="dummy1" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="dummy1-meta_attributes">
            <nvpair id="dummy1-meta_attributes-is-managed" name="is-managed" value="true"/>
          </meta_attributes>
        </primitive>
        <primitive id="dummy2" class="ocf" provider="pacemaker" type="Dummy"/>
      </group>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
    </constraints>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Create a resource meta attribute in dummy1 - OK (0) =#=#=#=
* Passed: crm_resource   - Create a resource meta attribute in dummy1
=#=#=#= Begin test: Create a resource meta attribute in dummy-group =#=#=#=
Set 'dummy1' option: id=dummy1-meta_attributes-is-managed name=is-managed value=false
Set 'dummy-group' option: id=dummy-group-meta_attributes-is-managed set=dummy-group-meta_attributes name=is-managed value=false
=#=#=#= Current cib after: Create a resource meta attribute in dummy-group =#=#=#=
<cib epoch="60" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes"/>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes">
          <nvpair id="test-clone-meta_attributes-is-managed" name="is-managed" value="true"/>
        </meta_attributes>
      </clone>
      <group id="dummy-group">
        <primitive id="dummy1" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="dummy1-meta_attributes">
            <nvpair id="dummy1-meta_attributes-is-managed" name="is-managed" value="false"/>
          </meta_attributes>
        </primitive>
        <primitive id="dummy2" class="ocf" provider="pacemaker" type="Dummy"/>
        <meta_attributes id="dummy-group-meta_attributes">
          <nvpair id="dummy-group-meta_attributes-is-managed" name="is-managed" value="false"/>
        </meta_attributes>
      </group>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
    </constraints>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Create a resource meta attribute in dummy-group - OK (0) =#=#=#=
* Passed: crm_resource   - Create a resource meta attribute in dummy-group
=#=#=#= Begin test: Delete the dummy-group resource group =#=#=#=
=#=#=#= Current cib after: Delete the dummy-group resource group =#=#=#=
<cib epoch="61" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes"/>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes">
          <nvpair id="test-clone-meta_attributes-is-managed" name="is-managed" value="true"/>
        </meta_attributes>
      </clone>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
    </constraints>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Delete the dummy-group resource group - OK (0) =#=#=#=
* Passed: cibadmin       - Delete the dummy-group resource group
=#=#=#= Begin test: Specify a lifetime when moving a resource =#=#=#=
Migration will take effect until:
=#=#=#= Current cib after: Specify a lifetime when moving a resource =#=#=#=
<cib epoch="63" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes"/>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes">
          <nvpair id="test-clone-meta_attributes-is-managed" name="is-managed" value="true"/>
        </meta_attributes>
      </clone>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started">
        <rule id="cli-prefer-rule-dummy" score="INFINITY" boolean-op="and">
          <expression id="cli-prefer-expr-dummy" attribute="#uname" operation="eq" value="node2" type="string"/>
          <date_expression id="cli-prefer-lifetime-end-dummy" operation="lt" end=""/>
        </rule>
      </rsc_location>
    </constraints>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Specify a lifetime when moving a resource - OK (0) =#=#=#=
* Passed: crm_resource   - Specify a lifetime when moving a resource
=#=#=#= Begin test: Try to move a resource previously moved with a lifetime =#=#=#=
=#=#=#= Current cib after: Try to move a resource previously moved with a lifetime =#=#=#=
<cib epoch="65" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes"/>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes">
          <nvpair id="test-clone-meta_attributes-is-managed" name="is-managed" value="true"/>
        </meta_attributes>
      </clone>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
    </constraints>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Try to move a resource previously moved with a lifetime - OK (0) =#=#=#=
* Passed: crm_resource   - Try to move a resource previously moved with a lifetime
=#=#=#= Begin test: Ban dummy from node1 for a short time =#=#=#=
Migration will take effect until:
WARNING: Creating rsc_location constraint 'cli-ban-dummy-on-node1' with a score of -INFINITY for resource dummy on node1.
	This will prevent dummy from running on node1 until the constraint is removed using the clear option or by editing the CIB with an appropriate tool.
	This will be the case even if node1 is the last node in the cluster
=#=#=#= Current cib after: Ban dummy from node1 for a short time =#=#=#=
<cib epoch="66" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes"/>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes">
          <nvpair id="test-clone-meta_attributes-is-managed" name="is-managed" value="true"/>
        </meta_attributes>
      </clone>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
      <rsc_location id="cli-ban-dummy-on-node1" rsc="dummy" role="Started">
        <rule id="cli-ban-dummy-on-node1-rule" score="-INFINITY" boolean-op="and">
          <expression id="cli-ban-dummy-on-node1-expr" attribute="#uname" operation="eq" value="node1" type="string"/>
          <date_expression id="cli-ban-dummy-on-node1-lifetime" operation="lt" end=""/>
        </rule>
      </rsc_location>
    </constraints>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Ban dummy from node1 for a short time - OK (0) =#=#=#=
* Passed: crm_resource   - Ban dummy from node1 for a short time
=#=#=#= Begin test: Remove expired constraints =#=#=#=
Removing constraint: cli-ban-dummy-on-node1
=#=#=#= Current cib after: Remove expired constraints =#=#=#=
<cib epoch="67" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes"/>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes">
          <nvpair id="test-clone-meta_attributes-is-managed" name="is-managed" value="true"/>
        </meta_attributes>
      </clone>
    </resources>
    <constraints>
      <rsc_location id="cli-prefer-dummy" rsc="dummy" role="Started" node="node1" score="INFINITY"/>
    </constraints>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Remove expired constraints - OK (0) =#=#=#=
* Passed: crm_resource   - Remove expired constraints
=#=#=#= Begin test: Clear all implicit constraints for dummy =#=#=#=
Removing constraint: cli-prefer-dummy
=#=#=#= Current cib after: Clear all implicit constraints for dummy =#=#=#=
<cib epoch="68" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes"/>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes">
          <nvpair id="test-clone-meta_attributes-is-managed" name="is-managed" value="true"/>
        </meta_attributes>
      </clone>
    </resources>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Clear all implicit constraints for dummy - OK (0) =#=#=#=
* Passed: crm_resource   - Clear all implicit constraints for dummy
=#=#=#= Begin test: Set a node health strategy =#=#=#=
=#=#=#= Current cib after: Set a node health strategy =#=#=#=
<cib epoch="69" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
        <nvpair id="cib-bootstrap-options-node-health-strategy" name="node-health-strategy" value="migrate-on-red"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3"/>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes"/>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes">
          <nvpair id="test-clone-meta_attributes-is-managed" name="is-managed" value="true"/>
        </meta_attributes>
      </clone>
    </resources>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Set a node health strategy - OK (0) =#=#=#=
* Passed: crm_attribute  - Set a node health strategy
=#=#=#= Begin test: Set a node health attribute =#=#=#=
=#=#=#= Current cib after: Set a node health attribute =#=#=#=
<cib epoch="70" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
        <nvpair id="cib-bootstrap-options-node-health-strategy" name="node-health-strategy" value="migrate-on-red"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3">
        <instance_attributes id="nodes-node3">
          <nvpair id="nodes-node3-.health-cts-cli" name="#health-cts-cli" value="red"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources>
      <primitive id="dummy" class="ocf" provider="pacemaker" type="Dummy">
        <meta_attributes id="dummy-meta_attributes"/>
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-delay" name="delay" value="10s"/>
        </instance_attributes>
      </primitive>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes"/>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes">
          <nvpair id="test-clone-meta_attributes-is-managed" name="is-managed" value="true"/>
        </meta_attributes>
      </clone>
    </resources>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Set a node health attribute - OK (0) =#=#=#=
* Passed: crm_attribute  - Set a node health attribute
=#=#=#= Begin test: Show why a resource is not running on an unhealthy node =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -N node3 -Y -r dummy --output-as=xml">
  <reason>
    <check id="dummy" unhealthy="true"/>
  </reason>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Show why a resource is not running on an unhealthy node - OK (0) =#=#=#=
* Passed: crm_resource   - Show why a resource is not running on an unhealthy node
=#=#=#= Begin test: Delete a resource =#=#=#=
=#=#=#= Current cib after: Delete a resource =#=#=#=
<cib epoch="71" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-no-quorum-policy" name="no-quorum-policy" value="ignore"/>
        <nvpair id="cib-bootstrap-options-node-health-strategy" name="node-health-strategy" value="migrate-on-red"/>
      </cluster_property_set>
      <cluster_property_set id="duplicate">
        <nvpair id="duplicate-cluster-delay" name="cluster-delay" value="30s"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="node1" uname="node1">
        <instance_attributes id="nodes-node1">
          <nvpair id="nodes-node1-ram" name="ram" value="1024M"/>
        </instance_attributes>
        <utilization id="nodes-node1-utilization">
          <nvpair id="nodes-node1-utilization-cpu" name="cpu" value="1"/>
        </utilization>
      </node>
      <node id="node2" uname="node2"/>
      <node id="node3" uname="node3">
        <instance_attributes id="nodes-node3">
          <nvpair id="nodes-node3-.health-cts-cli" name="#health-cts-cli" value="red"/>
        </instance_attributes>
      </node>
    </nodes>
    <resources>
      <primitive id="Fence" class="stonith" type="fence_true"/>
      <clone id="test-clone">
        <primitive id="test-primitive" class="ocf" provider="pacemaker" type="Dummy">
          <meta_attributes id="test-primitive-meta_attributes"/>
        </primitive>
        <meta_attributes id="test-clone-meta_attributes">
          <nvpair id="test-clone-meta_attributes-is-managed" name="is-managed" value="true"/>
        </meta_attributes>
      </clone>
    </resources>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Delete a resource - OK (0) =#=#=#=
* Passed: crm_resource   - Delete a resource
=#=#=#= Begin test: Create an XML patchset =#=#=#=
<diff format="2">
  <version>
    <source admin_epoch="0" epoch="1" num_updates="0"/>
    <target admin_epoch="0" epoch="1" num_updates="0"/>
  </version>
  <change operation="delete" path="/cib/configuration/comment" position="0"/>
  <change operation="delete" path="/cib/configuration/comment" position="1"/>
  <change operation="delete" path="/cib/configuration/resources/comment" position="0"/>
  <change operation="delete" path="/cib/configuration/resources/primitive[@id='Fencing']/operations/op[@id='Fencing-start-0']"/>
  <change operation="modify" path="/cib/configuration/crm_config/cluster_property_set[@id='cib-bootstrap-options']/nvpair[@id='cib-bootstrap-options-cluster-name']">
    <change-list>
      <change-attr name="value" operation="set" value="mycluster"/>
      <change-attr name="name" operation="set" value="cluster-name"/>
    </change-list>
    <change-result>
      <nvpair id="cib-bootstrap-options-cluster-name" value="mycluster" name="cluster-name"/>
    </change-result>
  </change>
  <change operation="create" path="/cib/configuration/nodes" position="4">
    <node id="4" uname="node4"/>
  </change>
  <change operation="create" path="/cib/configuration" position="3">
    <!-- hello world -->
  </change>
  <change operation="create" path="/cib/configuration/resources" position="0">
    <!-- test: modify this comment to say something different -->
  </change>
  <change operation="modify" path="/cib/configuration/resources/primitive[@id='Fencing']/instance_attributes[@id='Fencing-params']/nvpair[@id='Fencing-pcmk_host_list']">
    <change-list>
      <change-attr name="value" operation="set" value="node1 node2 node3 node4"/>
    </change-list>
    <change-result>
      <nvpair id="Fencing-pcmk_host_list" name="pcmk_host_list" value="node1 node2 node3 node4"/>
    </change-result>
  </change>
  <change operation="modify" path="/cib/configuration/resources/primitive[@id='Fencing']/operations/op[@id='Fencing-monitor-120s']">
    <change-list>
      <change-attr name="timeout" operation="set" value="120s"/>
      <change-attr name="name" operation="set" value="monitor"/>
    </change-list>
    <change-result>
      <op id="Fencing-monitor-120s" interval="120s" timeout="120s" name="monitor"/>
    </change-result>
  </change>
  <change operation="move" path="/cib/configuration/resources/primitive[@id='dummy']/instance_attributes[@id='dummy-params']/nvpair[@id='dummy-op_sleep']" position="1"/>
  <change operation="move" path="/cib/configuration/resources/primitive[@id='dummy']/instance_attributes[@id='dummy-params']/nvpair[@id='dummy-fake']" position="2"/>
  <change operation="modify" path="/cib/configuration/resources/primitive[@id='dummy']/operations/op[@id='dummy-monitor-5s']">
    <change-list>
      <change-attr name="name" operation="set" value="monitor"/>
      <change-attr name="timeout" operation="unset"/>
    </change-list>
    <change-result>
      <op id="dummy-monitor-5s" interval="5s" name="monitor"/>
    </change-result>
  </change>
  <change operation="create" path="/cib/configuration" position="6">
    <!-- test: move this comment to end of configuration -->
  </change>
</diff>
=#=#=#= End test: Create an XML patchset - Error occurred (1) =#=#=#=
* Passed: crm_diff       - Create an XML patchset
=#=#=#= Begin test: Check locations and constraints for prim1 =#=#=#=
=#=#=#= End test: Check locations and constraints for prim1 - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim1
=#=#=#= Begin test: Recursively check locations and constraints for prim1 =#=#=#=
=#=#=#= End test: Recursively check locations and constraints for prim1 - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim1
=#=#=#= Begin test: Check locations and constraints for prim1 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -a -r prim1 --output-as=xml">
  <constraints/>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Check locations and constraints for prim1 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim1 in XML
=#=#=#= Begin test: Recursively check locations and constraints for prim1 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -A -r prim1 --output-as=xml">
  <constraints/>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Recursively check locations and constraints for prim1 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim1 in XML
=#=#=#= Begin test: Check locations and constraints for prim2 =#=#=#=
Locations:
  * Node cluster01 (score=INFINITY, id=prim2-on-cluster1, rsc=prim2)
Resources prim2 is colocated with:
  * prim3 (score=INFINITY, id=colocation-prim2-prim3-INFINITY)
=#=#=#= End test: Check locations and constraints for prim2 - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim2
=#=#=#= Begin test: Recursively check locations and constraints for prim2 =#=#=#=
Locations:
  * Node cluster01 (score=INFINITY, id=prim2-on-cluster1, rsc=prim2)
Resources prim2 is colocated with:
  * prim3 (score=INFINITY, id=colocation-prim2-prim3-INFINITY)
    * Resources prim3 is colocated with:
      * prim4 (score=INFINITY, id=colocation-prim3-prim4-INFINITY)
        * Locations:
          * Node cluster02 (score=INFINITY, id=prim4-on-cluster2, rsc=prim4)
        * Resources prim4 is colocated with:
          * prim5 (score=INFINITY, id=colocation-prim4-prim5-INFINITY)
=#=#=#= End test: Recursively check locations and constraints for prim2 - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim2
=#=#=#= Begin test: Check locations and constraints for prim2 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -a -r prim2 --output-as=xml">
  <constraints>
    <rsc_location node="cluster01" rsc="prim2" id="prim2-on-cluster1" score="INFINITY"/>
    <rsc_colocation id="colocation-prim2-prim3-INFINITY" rsc="prim2" with-rsc="prim3" score="INFINITY" node-attribute="#uname"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Check locations and constraints for prim2 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim2 in XML
=#=#=#= Begin test: Recursively check locations and constraints for prim2 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -A -r prim2 --output-as=xml">
  <constraints>
    <rsc_location node="cluster01" rsc="prim2" id="prim2-on-cluster1" score="INFINITY"/>
    <rsc_colocation id="colocation-prim2-prim3-INFINITY" rsc="prim2" with-rsc="prim3" score="INFINITY" node-attribute="#uname"/>
    <rsc_colocation id="colocation-prim3-prim4-INFINITY" rsc="prim3" with-rsc="prim4" score="INFINITY" node-attribute="#uname"/>
    <rsc_location node="cluster02" rsc="prim4" id="prim4-on-cluster2" score="INFINITY"/>
    <rsc_colocation id="colocation-prim4-prim5-INFINITY" rsc="prim4" with-rsc="prim5" score="INFINITY" node-attribute="#uname"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Recursively check locations and constraints for prim2 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim2 in XML
=#=#=#= Begin test: Check locations and constraints for prim3 =#=#=#=
Resources colocated with prim3:
  * prim2 (score=INFINITY, id=colocation-prim2-prim3-INFINITY)
    * Locations:
      * Node cluster01 (score=INFINITY, id=prim2-on-cluster1, rsc=prim2)
Resources prim3 is colocated with:
  * prim4 (score=INFINITY, id=colocation-prim3-prim4-INFINITY)
    * Locations:
      * Node cluster02 (score=INFINITY, id=prim4-on-cluster2, rsc=prim4)
=#=#=#= End test: Check locations and constraints for prim3 - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim3
=#=#=#= Begin test: Recursively check locations and constraints for prim3 =#=#=#=
Resources colocated with prim3:
  * prim2 (score=INFINITY, id=colocation-prim2-prim3-INFINITY)
    * Locations:
      * Node cluster01 (score=INFINITY, id=prim2-on-cluster1, rsc=prim2)
Resources prim3 is colocated with:
  * prim4 (score=INFINITY, id=colocation-prim3-prim4-INFINITY)
    * Locations:
      * Node cluster02 (score=INFINITY, id=prim4-on-cluster2, rsc=prim4)
    * Resources prim4 is colocated with:
      * prim5 (score=INFINITY, id=colocation-prim4-prim5-INFINITY)
=#=#=#= End test: Recursively check locations and constraints for prim3 - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim3
=#=#=#= Begin test: Check locations and constraints for prim3 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -a -r prim3 --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim2-prim3-INFINITY" rsc="prim2" with-rsc="prim3" score="INFINITY" node-attribute="#uname"/>
    <rsc_location node="cluster01" rsc="prim2" id="prim2-on-cluster1" score="INFINITY"/>
    <rsc_colocation id="colocation-prim3-prim4-INFINITY" rsc="prim3" with-rsc="prim4" score="INFINITY" node-attribute="#uname"/>
    <rsc_location node="cluster02" rsc="prim4" id="prim4-on-cluster2" score="INFINITY"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Check locations and constraints for prim3 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim3 in XML
=#=#=#= Begin test: Recursively check locations and constraints for prim3 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -A -r prim3 --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim2-prim3-INFINITY" rsc="prim2" with-rsc="prim3" score="INFINITY" node-attribute="#uname"/>
    <rsc_location node="cluster01" rsc="prim2" id="prim2-on-cluster1" score="INFINITY"/>
    <rsc_colocation id="colocation-prim3-prim4-INFINITY" rsc="prim3" with-rsc="prim4" score="INFINITY" node-attribute="#uname"/>
    <rsc_location node="cluster02" rsc="prim4" id="prim4-on-cluster2" score="INFINITY"/>
    <rsc_colocation id="colocation-prim4-prim5-INFINITY" rsc="prim4" with-rsc="prim5" score="INFINITY" node-attribute="#uname"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Recursively check locations and constraints for prim3 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim3 in XML
=#=#=#= Begin test: Check locations and constraints for prim4 =#=#=#=
Locations:
  * Node cluster02 (score=INFINITY, id=prim4-on-cluster2, rsc=prim4)
Resources colocated with prim4:
  * prim10 (score=INFINITY, id=colocation-prim10-prim4-INFINITY)
  * prim3 (score=INFINITY, id=colocation-prim3-prim4-INFINITY)
Resources prim4 is colocated with:
  * prim5 (score=INFINITY, id=colocation-prim4-prim5-INFINITY)
=#=#=#= End test: Check locations and constraints for prim4 - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim4
=#=#=#= Begin test: Recursively check locations and constraints for prim4 =#=#=#=
Locations:
  * Node cluster02 (score=INFINITY, id=prim4-on-cluster2, rsc=prim4)
Resources colocated with prim4:
  * prim10 (score=INFINITY, id=colocation-prim10-prim4-INFINITY)
  * prim3 (score=INFINITY, id=colocation-prim3-prim4-INFINITY)
    * Resources colocated with prim3:
      * prim2 (score=INFINITY, id=colocation-prim2-prim3-INFINITY)
        * Locations:
          * Node cluster01 (score=INFINITY, id=prim2-on-cluster1, rsc=prim2)
Resources prim4 is colocated with:
  * prim5 (score=INFINITY, id=colocation-prim4-prim5-INFINITY)
=#=#=#= End test: Recursively check locations and constraints for prim4 - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim4
=#=#=#= Begin test: Check locations and constraints for prim4 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -a -r prim4 --output-as=xml">
  <constraints>
    <rsc_location node="cluster02" rsc="prim4" id="prim4-on-cluster2" score="INFINITY"/>
    <rsc_colocation id="colocation-prim10-prim4-INFINITY" rsc="prim10" with-rsc="prim4" score="INFINITY" node-attribute="#uname"/>
    <rsc_colocation id="colocation-prim3-prim4-INFINITY" rsc="prim3" with-rsc="prim4" score="INFINITY" node-attribute="#uname"/>
    <rsc_colocation id="colocation-prim4-prim5-INFINITY" rsc="prim4" with-rsc="prim5" score="INFINITY" node-attribute="#uname"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Check locations and constraints for prim4 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim4 in XML
=#=#=#= Begin test: Recursively check locations and constraints for prim4 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -A -r prim4 --output-as=xml">
  <constraints>
    <rsc_location node="cluster02" rsc="prim4" id="prim4-on-cluster2" score="INFINITY"/>
    <rsc_colocation id="colocation-prim10-prim4-INFINITY" rsc="prim10" with-rsc="prim4" score="INFINITY" node-attribute="#uname"/>
    <rsc_colocation id="colocation-prim3-prim4-INFINITY" rsc="prim3" with-rsc="prim4" score="INFINITY" node-attribute="#uname"/>
    <rsc_colocation id="colocation-prim2-prim3-INFINITY" rsc="prim2" with-rsc="prim3" score="INFINITY" node-attribute="#uname"/>
    <rsc_location node="cluster01" rsc="prim2" id="prim2-on-cluster1" score="INFINITY"/>
    <rsc_colocation id="colocation-prim4-prim5-INFINITY" rsc="prim4" with-rsc="prim5" score="INFINITY" node-attribute="#uname"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Recursively check locations and constraints for prim4 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim4 in XML
=#=#=#= Begin test: Check locations and constraints for prim5 =#=#=#=
Resources colocated with prim5:
  * prim4 (score=INFINITY, id=colocation-prim4-prim5-INFINITY)
    * Locations:
      * Node cluster02 (score=INFINITY, id=prim4-on-cluster2, rsc=prim4)
=#=#=#= End test: Check locations and constraints for prim5 - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim5
=#=#=#= Begin test: Recursively check locations and constraints for prim5 =#=#=#=
Resources colocated with prim5:
  * prim4 (score=INFINITY, id=colocation-prim4-prim5-INFINITY)
    * Locations:
      * Node cluster02 (score=INFINITY, id=prim4-on-cluster2, rsc=prim4)
    * Resources colocated with prim4:
      * prim10 (score=INFINITY, id=colocation-prim10-prim4-INFINITY)
      * prim3 (score=INFINITY, id=colocation-prim3-prim4-INFINITY)
        * Resources colocated with prim3:
          * prim2 (score=INFINITY, id=colocation-prim2-prim3-INFINITY)
            * Locations:
              * Node cluster01 (score=INFINITY, id=prim2-on-cluster1, rsc=prim2)
=#=#=#= End test: Recursively check locations and constraints for prim5 - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim5
=#=#=#= Begin test: Check locations and constraints for prim5 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -a -r prim5 --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim4-prim5-INFINITY" rsc="prim4" with-rsc="prim5" score="INFINITY" node-attribute="#uname"/>
    <rsc_location node="cluster02" rsc="prim4" id="prim4-on-cluster2" score="INFINITY"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Check locations and constraints for prim5 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim5 in XML
=#=#=#= Begin test: Recursively check locations and constraints for prim5 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -A -r prim5 --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim4-prim5-INFINITY" rsc="prim4" with-rsc="prim5" score="INFINITY" node-attribute="#uname"/>
    <rsc_location node="cluster02" rsc="prim4" id="prim4-on-cluster2" score="INFINITY"/>
    <rsc_colocation id="colocation-prim10-prim4-INFINITY" rsc="prim10" with-rsc="prim4" score="INFINITY" node-attribute="#uname"/>
    <rsc_colocation id="colocation-prim3-prim4-INFINITY" rsc="prim3" with-rsc="prim4" score="INFINITY" node-attribute="#uname"/>
    <rsc_colocation id="colocation-prim2-prim3-INFINITY" rsc="prim2" with-rsc="prim3" score="INFINITY" node-attribute="#uname"/>
    <rsc_location node="cluster01" rsc="prim2" id="prim2-on-cluster1" score="INFINITY"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Recursively check locations and constraints for prim5 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim5 in XML
=#=#=#= Begin test: Check locations and constraints for prim6 =#=#=#=
Locations:
  * Node cluster02 (score=-INFINITY, id=prim6-not-on-cluster2, rsc=prim6)
=#=#=#= End test: Check locations and constraints for prim6 - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim6
=#=#=#= Begin test: Recursively check locations and constraints for prim6 =#=#=#=
Locations:
  * Node cluster02 (score=-INFINITY, id=prim6-not-on-cluster2, rsc=prim6)
=#=#=#= End test: Recursively check locations and constraints for prim6 - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim6
=#=#=#= Begin test: Check locations and constraints for prim6 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -a -r prim6 --output-as=xml">
  <constraints>
    <rsc_location node="cluster02" rsc="prim6" id="prim6-not-on-cluster2" score="-INFINITY"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Check locations and constraints for prim6 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim6 in XML
=#=#=#= Begin test: Recursively check locations and constraints for prim6 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -A -r prim6 --output-as=xml">
  <constraints>
    <rsc_location node="cluster02" rsc="prim6" id="prim6-not-on-cluster2" score="-INFINITY"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Recursively check locations and constraints for prim6 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim6 in XML
=#=#=#= Begin test: Check locations and constraints for prim7 =#=#=#=
Resources prim7 is colocated with:
  * group (score=INFINITY, id=colocation-prim7-group-INFINITY)
=#=#=#= End test: Check locations and constraints for prim7 - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim7
=#=#=#= Begin test: Recursively check locations and constraints for prim7 =#=#=#=
Resources prim7 is colocated with:
  * group (score=INFINITY, id=colocation-prim7-group-INFINITY)
=#=#=#= End test: Recursively check locations and constraints for prim7 - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim7
=#=#=#= Begin test: Check locations and constraints for prim7 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -a -r prim7 --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim7-group-INFINITY" rsc="prim7" with-rsc="group" score="INFINITY" node-attribute="#uname"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Check locations and constraints for prim7 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim7 in XML
=#=#=#= Begin test: Recursively check locations and constraints for prim7 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -A -r prim7 --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim7-group-INFINITY" rsc="prim7" with-rsc="group" score="INFINITY" node-attribute="#uname"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Recursively check locations and constraints for prim7 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim7 in XML
=#=#=#= Begin test: Check locations and constraints for prim8 =#=#=#=
Resources prim8 is colocated with:
  * gr2 (score=INFINITY, id=colocation-prim8-gr2-INFINITY)
=#=#=#= End test: Check locations and constraints for prim8 - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim8
=#=#=#= Begin test: Recursively check locations and constraints for prim8 =#=#=#=
Resources prim8 is colocated with:
  * gr2 (score=INFINITY, id=colocation-prim8-gr2-INFINITY)
=#=#=#= End test: Recursively check locations and constraints for prim8 - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim8
=#=#=#= Begin test: Check locations and constraints for prim8 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -a -r prim8 --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim8-gr2-INFINITY" rsc="prim8" with-rsc="gr2" score="INFINITY" node-attribute="#uname"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Check locations and constraints for prim8 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim8 in XML
=#=#=#= Begin test: Recursively check locations and constraints for prim8 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -A -r prim8 --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim8-gr2-INFINITY" rsc="prim8" with-rsc="gr2" score="INFINITY" node-attribute="#uname"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Recursively check locations and constraints for prim8 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim8 in XML
=#=#=#= Begin test: Check locations and constraints for prim9 =#=#=#=
Resources prim9 is colocated with:
  * clone (score=INFINITY, id=colocation-prim9-clone-INFINITY)
=#=#=#= End test: Check locations and constraints for prim9 - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim9
=#=#=#= Begin test: Recursively check locations and constraints for prim9 =#=#=#=
Resources prim9 is colocated with:
  * clone (score=INFINITY, id=colocation-prim9-clone-INFINITY)
=#=#=#= End test: Recursively check locations and constraints for prim9 - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim9
=#=#=#= Begin test: Check locations and constraints for prim9 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -a -r prim9 --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim9-clone-INFINITY" rsc="prim9" with-rsc="clone" score="INFINITY" node-attribute="#uname"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Check locations and constraints for prim9 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim9 in XML
=#=#=#= Begin test: Recursively check locations and constraints for prim9 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -A -r prim9 --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim9-clone-INFINITY" rsc="prim9" with-rsc="clone" score="INFINITY" node-attribute="#uname"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Recursively check locations and constraints for prim9 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim9 in XML
=#=#=#= Begin test: Check locations and constraints for prim10 =#=#=#=
Resources prim10 is colocated with:
  * prim4 (score=INFINITY, id=colocation-prim10-prim4-INFINITY)
    * Locations:
      * Node cluster02 (score=INFINITY, id=prim4-on-cluster2, rsc=prim4)
=#=#=#= End test: Check locations and constraints for prim10 - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim10
=#=#=#= Begin test: Recursively check locations and constraints for prim10 =#=#=#=
Resources prim10 is colocated with:
  * prim4 (score=INFINITY, id=colocation-prim10-prim4-INFINITY)
    * Locations:
      * Node cluster02 (score=INFINITY, id=prim4-on-cluster2, rsc=prim4)
    * Resources prim4 is colocated with:
      * prim5 (score=INFINITY, id=colocation-prim4-prim5-INFINITY)
=#=#=#= End test: Recursively check locations and constraints for prim10 - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim10
=#=#=#= Begin test: Check locations and constraints for prim10 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -a -r prim10 --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim10-prim4-INFINITY" rsc="prim10" with-rsc="prim4" score="INFINITY" node-attribute="#uname"/>
    <rsc_location node="cluster02" rsc="prim4" id="prim4-on-cluster2" score="INFINITY"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Check locations and constraints for prim10 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim10 in XML
=#=#=#= Begin test: Recursively check locations and constraints for prim10 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -A -r prim10 --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim10-prim4-INFINITY" rsc="prim10" with-rsc="prim4" score="INFINITY" node-attribute="#uname"/>
    <rsc_location node="cluster02" rsc="prim4" id="prim4-on-cluster2" score="INFINITY"/>
    <rsc_colocation id="colocation-prim4-prim5-INFINITY" rsc="prim4" with-rsc="prim5" score="INFINITY" node-attribute="#uname"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Recursively check locations and constraints for prim10 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim10 in XML
=#=#=#= Begin test: Check locations and constraints for prim11 =#=#=#=
Resources colocated with prim11:
  * prim13 (score=INFINITY, id=colocation-prim13-prim11-INFINITY)
Resources prim11 is colocated with:
  * prim12 (score=INFINITY, id=colocation-prim11-prim12-INFINITY)
=#=#=#= End test: Check locations and constraints for prim11 - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim11
=#=#=#= Begin test: Recursively check locations and constraints for prim11 =#=#=#=
Resources colocated with prim11:
  * prim13 (score=INFINITY, id=colocation-prim13-prim11-INFINITY)
    * Resources colocated with prim13:
      * prim12 (score=INFINITY, id=colocation-prim12-prim13-INFINITY)
        * Resources colocated with prim12:
          * prim11 (id=colocation-prim11-prim12-INFINITY - loop)
Resources prim11 is colocated with:
  * prim12 (score=INFINITY, id=colocation-prim11-prim12-INFINITY)
    * Resources prim12 is colocated with:
      * prim13 (score=INFINITY, id=colocation-prim12-prim13-INFINITY)
        * Resources prim13 is colocated with:
          * prim11 (id=colocation-prim13-prim11-INFINITY - loop)
=#=#=#= End test: Recursively check locations and constraints for prim11 - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim11
=#=#=#= Begin test: Check locations and constraints for prim11 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -a -r prim11 --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim13-prim11-INFINITY" rsc="prim13" with-rsc="prim11" score="INFINITY" node-attribute="#uname"/>
    <rsc_colocation id="colocation-prim11-prim12-INFINITY" rsc="prim11" with-rsc="prim12" score="INFINITY" node-attribute="#uname"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Check locations and constraints for prim11 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim11 in XML
=#=#=#= Begin test: Recursively check locations and constraints for prim11 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -A -r prim11 --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim13-prim11-INFINITY" rsc="prim13" with-rsc="prim11" score="INFINITY" node-attribute="#uname"/>
    <rsc_colocation id="colocation-prim12-prim13-INFINITY" rsc="prim12" with-rsc="prim13" score="INFINITY" node-attribute="#uname"/>
    <rsc_colocation id="colocation-prim11-prim12-INFINITY" rsc="prim11" with-rsc="prim12" score="INFINITY" node-attribute="#uname"/>
    <rsc_colocation id="colocation-prim11-prim12-INFINITY" rsc="prim11" with-rsc="prim12" score="INFINITY" node-attribute="#uname"/>
    <rsc_colocation id="colocation-prim12-prim13-INFINITY" rsc="prim12" with-rsc="prim13" score="INFINITY" node-attribute="#uname"/>
    <rsc_colocation id="colocation-prim13-prim11-INFINITY" rsc="prim13" with-rsc="prim11" score="INFINITY" node-attribute="#uname"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Recursively check locations and constraints for prim11 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim11 in XML
=#=#=#= Begin test: Check locations and constraints for prim12 =#=#=#=
Resources colocated with prim12:
  * prim11 (score=INFINITY, id=colocation-prim11-prim12-INFINITY)
Resources prim12 is colocated with:
  * prim13 (score=INFINITY, id=colocation-prim12-prim13-INFINITY)
=#=#=#= End test: Check locations and constraints for prim12 - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim12
=#=#=#= Begin test: Recursively check locations and constraints for prim12 =#=#=#=
Resources colocated with prim12:
  * prim11 (score=INFINITY, id=colocation-prim11-prim12-INFINITY)
    * Resources colocated with prim11:
      * prim13 (score=INFINITY, id=colocation-prim13-prim11-INFINITY)
        * Resources colocated with prim13:
          * prim12 (id=colocation-prim12-prim13-INFINITY - loop)
Resources prim12 is colocated with:
  * prim13 (score=INFINITY, id=colocation-prim12-prim13-INFINITY)
    * Resources prim13 is colocated with:
      * prim11 (score=INFINITY, id=colocation-prim13-prim11-INFINITY)
        * Resources prim11 is colocated with:
          * prim12 (id=colocation-prim11-prim12-INFINITY - loop)
=#=#=#= End test: Recursively check locations and constraints for prim12 - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim12
=#=#=#= Begin test: Check locations and constraints for prim12 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -a -r prim12 --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim11-prim12-INFINITY" rsc="prim11" with-rsc="prim12" score="INFINITY" node-attribute="#uname"/>
    <rsc_colocation id="colocation-prim12-prim13-INFINITY" rsc="prim12" with-rsc="prim13" score="INFINITY" node-attribute="#uname"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Check locations and constraints for prim12 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim12 in XML
=#=#=#= Begin test: Recursively check locations and constraints for prim12 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -A -r prim12 --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim11-prim12-INFINITY" rsc="prim11" with-rsc="prim12" score="INFINITY" node-attribute="#uname"/>
    <rsc_colocation id="colocation-prim13-prim11-INFINITY" rsc="prim13" with-rsc="prim11" score="INFINITY" node-attribute="#uname"/>
    <rsc_colocation id="colocation-prim12-prim13-INFINITY" rsc="prim12" with-rsc="prim13" score="INFINITY" node-attribute="#uname"/>
    <rsc_colocation id="colocation-prim12-prim13-INFINITY" rsc="prim12" with-rsc="prim13" score="INFINITY" node-attribute="#uname"/>
    <rsc_colocation id="colocation-prim13-prim11-INFINITY" rsc="prim13" with-rsc="prim11" score="INFINITY" node-attribute="#uname"/>
    <rsc_colocation id="colocation-prim11-prim12-INFINITY" rsc="prim11" with-rsc="prim12" score="INFINITY" node-attribute="#uname"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Recursively check locations and constraints for prim12 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim12 in XML
=#=#=#= Begin test: Check locations and constraints for prim13 =#=#=#=
Resources colocated with prim13:
  * prim12 (score=INFINITY, id=colocation-prim12-prim13-INFINITY)
Resources prim13 is colocated with:
  * prim11 (score=INFINITY, id=colocation-prim13-prim11-INFINITY)
=#=#=#= End test: Check locations and constraints for prim13 - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim13
=#=#=#= Begin test: Recursively check locations and constraints for prim13 =#=#=#=
Resources colocated with prim13:
  * prim12 (score=INFINITY, id=colocation-prim12-prim13-INFINITY)
    * Resources colocated with prim12:
      * prim11 (score=INFINITY, id=colocation-prim11-prim12-INFINITY)
        * Resources colocated with prim11:
          * prim13 (id=colocation-prim13-prim11-INFINITY - loop)
Resources prim13 is colocated with:
  * prim11 (score=INFINITY, id=colocation-prim13-prim11-INFINITY)
    * Resources prim11 is colocated with:
      * prim12 (score=INFINITY, id=colocation-prim11-prim12-INFINITY)
        * Resources prim12 is colocated with:
          * prim13 (id=colocation-prim12-prim13-INFINITY - loop)
=#=#=#= End test: Recursively check locations and constraints for prim13 - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim13
=#=#=#= Begin test: Check locations and constraints for prim13 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -a -r prim13 --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim12-prim13-INFINITY" rsc="prim12" with-rsc="prim13" score="INFINITY" node-attribute="#uname"/>
    <rsc_colocation id="colocation-prim13-prim11-INFINITY" rsc="prim13" with-rsc="prim11" score="INFINITY" node-attribute="#uname"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Check locations and constraints for prim13 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for prim13 in XML
=#=#=#= Begin test: Recursively check locations and constraints for prim13 in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -A -r prim13 --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim12-prim13-INFINITY" rsc="prim12" with-rsc="prim13" score="INFINITY" node-attribute="#uname"/>
    <rsc_colocation id="colocation-prim11-prim12-INFINITY" rsc="prim11" with-rsc="prim12" score="INFINITY" node-attribute="#uname"/>
    <rsc_colocation id="colocation-prim13-prim11-INFINITY" rsc="prim13" with-rsc="prim11" score="INFINITY" node-attribute="#uname"/>
    <rsc_colocation id="colocation-prim13-prim11-INFINITY" rsc="prim13" with-rsc="prim11" score="INFINITY" node-attribute="#uname"/>
    <rsc_colocation id="colocation-prim11-prim12-INFINITY" rsc="prim11" with-rsc="prim12" score="INFINITY" node-attribute="#uname"/>
    <rsc_colocation id="colocation-prim12-prim13-INFINITY" rsc="prim12" with-rsc="prim13" score="INFINITY" node-attribute="#uname"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Recursively check locations and constraints for prim13 in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for prim13 in XML
=#=#=#= Begin test: Check locations and constraints for group =#=#=#=
Resources colocated with group:
  * prim7 (score=INFINITY, id=colocation-prim7-group-INFINITY)
=#=#=#= End test: Check locations and constraints for group - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for group
=#=#=#= Begin test: Recursively check locations and constraints for group =#=#=#=
Resources colocated with group:
  * prim7 (score=INFINITY, id=colocation-prim7-group-INFINITY)
=#=#=#= End test: Recursively check locations and constraints for group - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for group
=#=#=#= Begin test: Check locations and constraints for group in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -a -r group --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim7-group-INFINITY" rsc="prim7" with-rsc="group" score="INFINITY" node-attribute="#uname"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Check locations and constraints for group in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for group in XML
=#=#=#= Begin test: Recursively check locations and constraints for group in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -A -r group --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim7-group-INFINITY" rsc="prim7" with-rsc="group" score="INFINITY" node-attribute="#uname"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Recursively check locations and constraints for group in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for group in XML
=#=#=#= Begin test: Check locations and constraints for clone =#=#=#=
Resources colocated with clone:
  * prim9 (score=INFINITY, id=colocation-prim9-clone-INFINITY)
=#=#=#= End test: Check locations and constraints for clone - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for clone
=#=#=#= Begin test: Recursively check locations and constraints for clone =#=#=#=
Resources colocated with clone:
  * prim9 (score=INFINITY, id=colocation-prim9-clone-INFINITY)
=#=#=#= End test: Recursively check locations and constraints for clone - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for clone
=#=#=#= Begin test: Check locations and constraints for clone in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -a -r clone --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim9-clone-INFINITY" rsc="prim9" with-rsc="clone" score="INFINITY" node-attribute="#uname"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Check locations and constraints for clone in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for clone in XML
=#=#=#= Begin test: Recursively check locations and constraints for clone in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -A -r clone --output-as=xml">
  <constraints>
    <rsc_colocation id="colocation-prim9-clone-INFINITY" rsc="prim9" with-rsc="clone" score="INFINITY" node-attribute="#uname"/>
  </constraints>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Recursively check locations and constraints for clone in XML - OK (0) =#=#=#=
* Passed: crm_resource   - Recursively check locations and constraints for clone in XML
=#=#=#= Begin test: Check locations and constraints for group member (referring to group) =#=#=#=
Resources colocated with group:
  * prim7 (score=INFINITY, id=colocation-prim7-group-INFINITY)
=#=#=#= End test: Check locations and constraints for group member (referring to group) - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for group member (referring to group)
=#=#=#= Begin test: Check locations and constraints for group member (without referring to group) =#=#=#=
Resources colocated with gr2:
  * prim8 (score=INFINITY, id=colocation-prim8-gr2-INFINITY)
=#=#=#= End test: Check locations and constraints for group member (without referring to group) - OK (0) =#=#=#=
* Passed: crm_resource   - Check locations and constraints for group member (without referring to group)
A new shadow instance was created. To begin using it, enter the following into your shell:
	export CIB_shadow=cts-cli
=#=#=#= Begin test: Set a meta-attribute for primitive and resources colocated with it =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -r prim5 --meta --set-parameter=target-role -v Stopped --recursive --output-as=xml">
  <resource-settings>
    <primitive id="prim5">
      <meta_attributes id="prim5-meta_attributes">
        <nvpair id="prim5-meta_attributes-target-role" value="Stopped" name="target-role"/>
      </meta_attributes>
    </primitive>
    <primitive id="prim4">
      <meta_attributes id="prim4-meta_attributes">
        <nvpair id="prim4-meta_attributes-target-role" value="Stopped" name="target-role"/>
      </meta_attributes>
    </primitive>
    <primitive id="prim10">
      <meta_attributes id="prim10-meta_attributes">
        <nvpair id="prim10-meta_attributes-target-role" value="Stopped" name="target-role"/>
      </meta_attributes>
    </primitive>
    <primitive id="prim3">
      <meta_attributes id="prim3-meta_attributes">
        <nvpair id="prim3-meta_attributes-target-role" value="Stopped" name="target-role"/>
      </meta_attributes>
    </primitive>
    <primitive id="prim2">
      <meta_attributes id="prim2-meta_attributes">
        <nvpair id="prim2-meta_attributes-target-role" value="Stopped" name="target-role"/>
      </meta_attributes>
    </primitive>
  </resource-settings>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Set a meta-attribute for primitive and resources colocated with it - OK (0) =#=#=#=
* Passed: crm_resource   - Set a meta-attribute for primitive and resources colocated with it
=#=#=#= Begin test: Set a meta-attribute for group and resource colocated with it =#=#=#=
Set 'group' option: id=group-meta_attributes-target-role set=group-meta_attributes name=target-role value=Stopped
Set 'prim7' option: id=prim7-meta_attributes-target-role set=prim7-meta_attributes name=target-role value=Stopped
=#=#=#= End test: Set a meta-attribute for group and resource colocated with it - OK (0) =#=#=#=
* Passed: crm_resource   - Set a meta-attribute for group and resource colocated with it
=#=#=#= Begin test: Set a meta-attribute for clone and resource colocated with it =#=#=#=
<pacemaker-result api-version="X" request="crm_resource -r clone --meta --set-parameter=target-role -v Stopped --recursive --output-as=xml">
  <resource-settings>
    <clone id="clone">
      <meta_attributes id="clone-meta_attributes">
        <nvpair id="clone-meta_attributes-target-role" value="Stopped" name="target-role"/>
      </meta_attributes>
    </clone>
    <primitive id="prim9">
      <meta_attributes id="prim9-meta_attributes">
        <nvpair id="prim9-meta_attributes-target-role" value="Stopped" name="target-role"/>
      </meta_attributes>
    </primitive>
  </resource-settings>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Set a meta-attribute for clone and resource colocated with it - OK (0) =#=#=#=
* Passed: crm_resource   - Set a meta-attribute for clone and resource colocated with it
=#=#=#= Begin test: Show resource digests =#=#=#=
<pacemaker-result api-version="X" request="crm_resource --digests -r rsc1 -N node1 --output-as=xml">
  <digests resource="rsc1" node="node1" task="start" interval="0ms">
    <digest type="all" hash="3acdbe4c12734ebeb1251a59545af936">
      <parameters passwd="secret" fake="0"/>
    </digest>
    <digest type="nonprivate" hash="279c477dbc38c621904a00ab9e599b2f">
      <parameters fake="0"/>
    </digest>
    <digest type="nonreloadable" hash="5de1fd72a2e7762ed41543231034f6d7">
      <parameters passwd="secret"/>
    </digest>
  </digests>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Show resource digests - OK (0) =#=#=#=
* Passed: crm_resource   - Show resource digests
=#=#=#= Begin test: Show resource digests with overrides =#=#=#=
<pacemaker-result api-version="X" request="crm_resource --digests -r rsc1 -N node1 --output-as=xml CRM_meta_interval=10000 CRM_meta_timeout=20000">
  <digests resource="rsc1" node="node1" task="start" interval="10000ms">
    <digest type="all" hash="720718e8d715d5d3be1403cbbcb953bc">
      <parameters passwd="secret" fake="0" CRM_meta_timeout="20000"/>
    </digest>
    <digest type="nonprivate" hash="279c477dbc38c621904a00ab9e599b2f">
      <parameters fake="0"/>
    </digest>
    <digest type="nonreloadable" hash="5de1fd72a2e7762ed41543231034f6d7">
      <parameters passwd="secret"/>
    </digest>
  </digests>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Show resource digests with overrides - OK (0) =#=#=#=
* Passed: crm_resource   - Show resource digests with overrides
=#=#=#= Begin test: Show resource operations =#=#=#=
rsc1	(ocf:pacemaker:Dummy):	 Started: rsc1_monitor_0 (node=node4, call=136, rc=7, exec=28ms): complete
Fencing	(stonith:fence_xvm):	 Started: Fencing_monitor_0 (node=node4, call=5, rc=7, exec=2ms): complete
rsc1	(ocf:pacemaker:Dummy):	 Started: rsc1_monitor_0 (node=node2, call=101, rc=7, exec=45ms): complete
Fencing	(stonith:fence_xvm):	 Started: Fencing_monitor_0 (node=node2, call=5, rc=7, exec=4ms): complete
Fencing	(stonith:fence_xvm):	 Started: Fencing_monitor_0 (node=node3, call=5, rc=7, exec=24ms): complete
rsc1	(ocf:pacemaker:Dummy):	 Started: rsc1_monitor_0 (node=node5, call=99, rc=193, exec=27ms): pending
Fencing	(stonith:fence_xvm):	 Started: Fencing_monitor_0 (node=node5, call=5, rc=7, exec=14ms): complete
rsc1	(ocf:pacemaker:Dummy):	 Started: rsc1_start_0 (node=node1, call=104, rc=0, exec=22ms): complete
rsc1	(ocf:pacemaker:Dummy):	 Started: rsc1_monitor_10000 (node=node1, call=106, rc=0, exec=20ms): complete
Fencing	(stonith:fence_xvm):	 Started: Fencing_start_0 (node=node1, call=10, rc=0, exec=59ms): complete
Fencing	(stonith:fence_xvm):	 Started: Fencing_monitor_120000 (node=node1, call=12, rc=0, exec=70ms): complete
=#=#=#= End test: Show resource operations - OK (0) =#=#=#=
* Passed: crm_resource   - Show resource operations
=#=#=#= Begin test: Show resource operations (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_resource --list-operations --output-as=xml">
  <operations>
    <operation op="rsc1_monitor_0" node="node4" call="136" rc="7" status="complete" rsc="rsc1" agent="ocf:pacemaker:Dummy" exec-time="28"/>
    <operation op="Fencing_monitor_0" node="node4" call="5" rc="7" status="complete" rsc="Fencing" agent="stonith::fence_xvm" exec-time="2"/>
    <operation op="rsc1_monitor_0" node="node2" call="101" rc="7" status="complete" rsc="rsc1" agent="ocf:pacemaker:Dummy" exec-time="45"/>
    <operation op="Fencing_monitor_0" node="node2" call="5" rc="7" status="complete" rsc="Fencing" agent="stonith::fence_xvm" exec-time="4"/>
    <operation op="Fencing_monitor_0" node="node3" call="5" rc="7" status="complete" rsc="Fencing" agent="stonith::fence_xvm" exec-time="24"/>
    <operation op="rsc1_monitor_0" node="node5" call="99" rc="193" status="pending" rsc="rsc1" agent="ocf:pacemaker:Dummy" exec-time="27"/>
    <operation op="Fencing_monitor_0" node="node5" call="5" rc="7" status="complete" rsc="Fencing" agent="stonith::fence_xvm" exec-time="14"/>
    <operation op="rsc1_start_0" node="node1" call="104" rc="0" status="complete" rsc="rsc1" agent="ocf:pacemaker:Dummy" exec-time="22"/>
    <operation op="rsc1_monitor_10000" node="node1" call="106" rc="0" status="complete" rsc="rsc1" agent="ocf:pacemaker:Dummy" exec-time="20"/>
    <operation op="Fencing_start_0" node="node1" call="10" rc="0" status="complete" rsc="Fencing" agent="stonith::fence_xvm" exec-time="59"/>
    <operation op="Fencing_monitor_120000" node="node1" call="12" rc="0" status="complete" rsc="Fencing" agent="stonith::fence_xvm" exec-time="70"/>
  </operations>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Show resource operations (XML) - OK (0) =#=#=#=
* Passed: crm_resource   - Show resource operations (XML)
=#=#=#= Begin test: List all nodes =#=#=#=
cluster node: overcloud-controller-0 (1)
cluster node: overcloud-controller-1 (2)
cluster node: overcloud-controller-2 (3)
cluster node: overcloud-galera-0 (4)
cluster node: overcloud-galera-1 (5)
cluster node: overcloud-galera-2 (6)
guest node: lxc1 (lxc1)
guest node: lxc2 (lxc2)
remote node: overcloud-rabbit-0 (overcloud-rabbit-0)
remote node: overcloud-rabbit-1 (overcloud-rabbit-1)
remote node: overcloud-rabbit-2 (overcloud-rabbit-2)
=#=#=#= End test: List all nodes - OK (0) =#=#=#=
* Passed: crmadmin       - List all nodes
=#=#=#= Begin test: Minimally list all nodes =#=#=#=
overcloud-controller-0
overcloud-controller-1
overcloud-controller-2
overcloud-galera-0
overcloud-galera-1
overcloud-galera-2
lxc1
lxc2
overcloud-rabbit-0
overcloud-rabbit-1
overcloud-rabbit-2
=#=#=#= End test: Minimally list all nodes - OK (0) =#=#=#=
* Passed: crmadmin       - Minimally list all nodes
=#=#=#= Begin test: List all nodes as bash exports =#=#=#=
export overcloud-controller-0=1
export overcloud-controller-1=2
export overcloud-controller-2=3
export overcloud-galera-0=4
export overcloud-galera-1=5
export overcloud-galera-2=6
export lxc1=lxc1
export lxc2=lxc2
export overcloud-rabbit-0=overcloud-rabbit-0
export overcloud-rabbit-1=overcloud-rabbit-1
export overcloud-rabbit-2=overcloud-rabbit-2
=#=#=#= End test: List all nodes as bash exports - OK (0) =#=#=#=
* Passed: crmadmin       - List all nodes as bash exports
=#=#=#= Begin test: List cluster nodes =#=#=#=
6
=#=#=#= End test: List cluster nodes - OK (0) =#=#=#=
* Passed: crmadmin       - List cluster nodes
=#=#=#= Begin test: List guest nodes =#=#=#=
2
=#=#=#= End test: List guest nodes - OK (0) =#=#=#=
* Passed: crmadmin       - List guest nodes
=#=#=#= Begin test: List remote nodes =#=#=#=
3
=#=#=#= End test: List remote nodes - OK (0) =#=#=#=
* Passed: crmadmin       - List remote nodes
=#=#=#= Begin test: List cluster,remote nodes =#=#=#=
9
=#=#=#= End test: List cluster,remote nodes - OK (0) =#=#=#=
* Passed: crmadmin       - List cluster,remote nodes
=#=#=#= Begin test: List guest,remote nodes =#=#=#=
5
=#=#=#= End test: List guest,remote nodes - OK (0) =#=#=#=
* Passed: crmadmin       - List guest,remote nodes
=#=#=#= Begin test: Show allocation scores with crm_simulate =#=#=#=
<pacemaker-result api-version="X" request="crm_mon.xml --show-scores --output-as=xml">
  <cluster_status>
    <nodes>
      <node name="cluster01" id="1" online="true" standby="false" standby_onfail="false" maintenance="false" pending="false" unclean="false" health="green" feature_set="&lt;3.15.1" shutdown="false" expected_up="true" is_dc="false" resources_running="7" type="member"/>
      <node name="cluster02" id="2" online="true" standby="false" standby_onfail="false" maintenance="false" pending="false" unclean="false" health="green" feature_set="&lt;3.15.1" shutdown="false" expected_up="true" is_dc="true" resources_running="9" type="member"/>
      <node name="httpd-bundle-0" id="httpd-bundle-0" online="true" standby="false" standby_onfail="false" maintenance="false" pending="false" unclean="false" health="green" shutdown="false" expected_up="false" is_dc="false" resources_running="1" type="remote" id_as_resource="httpd-bundle-docker-0"/>
      <node name="httpd-bundle-1" id="httpd-bundle-1" online="true" standby="false" standby_onfail="false" maintenance="false" pending="false" unclean="false" health="green" shutdown="false" expected_up="false" is_dc="false" resources_running="1" type="remote" id_as_resource="httpd-bundle-docker-1"/>
      <node name="httpd-bundle-2" id="httpd-bundle-2" online="false" standby="false" standby_onfail="false" maintenance="false" pending="false" unclean="false" health="green" shutdown="false" expected_up="false" is_dc="false" resources_running="0" type="remote" id_as_resource="httpd-bundle-docker-2"/>
    </nodes>
    <resources>
      <clone id="ping-clone" multi_state="false" unique="false" maintenance="false" managed="true" disabled="false" failed="false" failure_ignored="false">
        <resource id="ping" resource_agent="ocf:pacemaker:ping" role="Started" active="true" orphaned="false" blocked="false" maintenance="false" managed="true" failed="false" failure_ignored="false" nodes_running_on="1">
          <node name="cluster02" id="2" cached="true"/>
        </resource>
        <resource id="ping" resource_agent="ocf:pacemaker:ping" role="Started" active="true" orphaned="false" blocked="false" maintenance="false" managed="true" failed="false" failure_ignored="false" nodes_running_on="1">
          <node name="cluster01" id="1" cached="true"/>
        </resource>
      </clone>
      <resource id="Fencing" resource_agent="stonith:fence_xvm" role="Started" active="true" orphaned="false" blocked="false" maintenance="false" managed="true" failed="false" failure_ignored="false" nodes_running_on="1">
        <node name="cluster01" id="1" cached="true"/>
      </resource>
      <resource id="dummy" resource_agent="ocf:pacemaker:Dummy" role="Started" active="true" orphaned="false" blocked="false" maintenance="false" managed="true" failed="false" failure_ignored="false" nodes_running_on="1">
        <node name="cluster02" id="2" cached="true"/>
      </resource>
      <clone id="inactive-clone" multi_state="false" unique="false" maintenance="false" managed="true" disabled="true" failed="false" failure_ignored="false" target_role="stopped">
        <resource id="inactive-dhcpd" resource_agent="lsb:dhcpd" role="Stopped" target_role="stopped" active="false" orphaned="false" blocked="false" maintenance="false" managed="true" failed="false" failure_ignored="false" nodes_running_on="0"/>
        <resource id="inactive-dhcpd" resource_agent="lsb:dhcpd" role="Stopped" target_role="stopped" active="false" orphaned="false" blocked="false" maintenance="false" managed="true" failed="false" failure_ignored="false" nodes_running_on="0"/>
      </clone>
      <group id="inactive-group" number_resources="2" maintenance="false" managed="true" disabled="true">
        <resource id="inactive-dummy-1" resource_agent="ocf:pacemaker:Dummy" role="Stopped" target_role="stopped" active="false" orphaned="false" blocked="false" maintenance="false" managed="true" failed="false" failure_ignored="false" nodes_running_on="0"/>
        <resource id="inactive-dummy-2" resource_agent="ocf:pacemaker:Dummy" role="Stopped" target_role="stopped" active="false" orphaned="false" blocked="false" maintenance="false" managed="true" failed="false" failure_ignored="false" nodes_running_on="0"/>
      </group>
      <bundle id="httpd-bundle" type="docker" image="pcmk:http" unique="false" maintenance="false" managed="true" failed="false">
        <replica id="0">
          <resource id="httpd-bundle-ip-192.168.122.131" resource_agent="ocf:heartbeat:IPaddr2" role="Started" target_role="Started" active="true" orphaned="false" blocked="false" maintenance="false" managed="true" failed="false" failure_ignored="false" nodes_running_on="1">
            <node name="cluster01" id="1" cached="true"/>
          </resource>
          <resource id="httpd" resource_agent="ocf:heartbeat:apache" role="Started" target_role="Started" active="true" orphaned="false" blocked="false" maintenance="false" managed="true" failed="false" failure_ignored="false" nodes_running_on="1">
            <node name="httpd-bundle-0" id="httpd-bundle-0" cached="true"/>
          </resource>
          <resource id="httpd-bundle-docker-0" resource_agent="ocf:heartbeat:docker" role="Started" target_role="Started" active="true" orphaned="false" blocked="false" maintenance="false" managed="true" failed="false" failure_ignored="false" nodes_running_on="1">
            <node name="cluster01" id="1" cached="true"/>
          </resource>
          <resource id="httpd-bundle-0" resource_agent="ocf:pacemaker:remote" role="Started" target_role="Started" active="true" orphaned="false" blocked="false" maintenance="false" managed="true" failed="false" failure_ignored="false" nodes_running_on="1">
            <node name="cluster01" id="1" cached="true"/>
          </resource>
        </replica>
        <replica id="1">
          <resource id="httpd-bundle-ip-192.168.122.132" resource_agent="ocf:heartbeat:IPaddr2" role="Started" target_role="Started" active="true" orphaned="false" blocked="false" maintenance="false" managed="true" failed="false" failure_ignored="false" nodes_running_on="1">
            <node name="cluster02" id="2" cached="true"/>
          </resource>
          <resource id="httpd" resource_agent="ocf:heartbeat:apache" role="Started" target_role="Started" active="true" orphaned="false" blocked="false" maintenance="false" managed="true" failed="false" failure_ignored="false" nodes_running_on="1">
            <node name="httpd-bundle-1" id="httpd-bundle-1" cached="true"/>
          </resource>
          <resource id="httpd-bundle-docker-1" resource_agent="ocf:heartbeat:docker" role="Started" target_role="Started" active="true" orphaned="false" blocked="false" maintenance="false" managed="true" failed="false" failure_ignored="false" nodes_running_on="1">
            <node name="cluster02" id="2" cached="true"/>
          </resource>
          <resource id="httpd-bundle-1" resource_agent="ocf:pacemaker:remote" role="Started" target_role="Started" active="true" orphaned="false" blocked="false" maintenance="false" managed="true" failed="false" failure_ignored="false" nodes_running_on="1">
            <node name="cluster02" id="2" cached="true"/>
          </resource>
        </replica>
        <replica id="2">
          <resource id="httpd-bundle-ip-192.168.122.133" resource_agent="ocf:heartbeat:IPaddr2" role="Stopped" target_role="Started" active="false" orphaned="false" blocked="false" maintenance="false" managed="true" failed="false" failure_ignored="false" nodes_running_on="0"/>
          <resource id="httpd" resource_agent="ocf:heartbeat:apache" role="Stopped" target_role="Started" active="false" orphaned="false" blocked="false" maintenance="false" managed="true" failed="false" failure_ignored="false" nodes_running_on="0"/>
          <resource id="httpd-bundle-docker-2" resource_agent="ocf:heartbeat:docker" role="Stopped" target_role="Started" active="false" orphaned="false" blocked="false" maintenance="false" managed="true" failed="false" failure_ignored="false" nodes_running_on="0"/>
          <resource id="httpd-bundle-2" resource_agent="ocf:pacemaker:remote" role="Stopped" target_role="Started" active="false" orphaned="false" blocked="false" maintenance="false" managed="true" failed="false" failure_ignored="false" nodes_running_on="0"/>
        </replica>
      </bundle>
      <group id="exim-group" number_resources="2" maintenance="false" managed="true" disabled="false">
        <resource id="Public-IP" resource_agent="ocf:heartbeat:IPaddr" role="Started" active="true" orphaned="false" blocked="false" maintenance="false" managed="true" failed="false" failure_ignored="false" nodes_running_on="1">
          <node name="cluster02" id="2" cached="true"/>
        </resource>
        <resource id="Email" resource_agent="lsb:exim" role="Started" active="true" orphaned="false" blocked="false" maintenance="false" managed="true" failed="false" failure_ignored="false" nodes_running_on="1">
          <node name="cluster02" id="2" cached="true"/>
        </resource>
      </group>
      <clone id="mysql-clone-group" multi_state="false" unique="false" maintenance="false" managed="true" disabled="false" failed="false" failure_ignored="false">
        <group id="mysql-group:0" number_resources="1" maintenance="false" managed="true" disabled="false">
          <resource id="mysql-proxy" resource_agent="lsb:mysql-proxy" role="Started" active="true" orphaned="false" blocked="false" maintenance="false" managed="true" failed="false" failure_ignored="false" nodes_running_on="1">
            <node name="cluster02" id="2" cached="true"/>
          </resource>
        </group>
        <group id="mysql-group:1" number_resources="1" maintenance="false" managed="true" disabled="false">
          <resource id="mysql-proxy" resource_agent="lsb:mysql-proxy" role="Started" active="true" orphaned="false" blocked="false" maintenance="false" managed="true" failed="false" failure_ignored="false" nodes_running_on="1">
            <node name="cluster01" id="1" cached="true"/>
          </resource>
        </group>
        <group id="mysql-group:2" number_resources="1" maintenance="false" managed="true" disabled="false">
          <resource id="mysql-proxy" resource_agent="lsb:mysql-proxy" role="Stopped" active="false" orphaned="false" blocked="false" maintenance="false" managed="true" failed="false" failure_ignored="false" nodes_running_on="0"/>
        </group>
        <group id="mysql-group:3" number_resources="1" maintenance="false" managed="true" disabled="false">
          <resource id="mysql-proxy" resource_agent="lsb:mysql-proxy" role="Stopped" active="false" orphaned="false" blocked="false" maintenance="false" managed="true" failed="false" failure_ignored="false" nodes_running_on="0"/>
        </group>
        <group id="mysql-group:4" number_resources="1" maintenance="false" managed="true" disabled="false">
          <resource id="mysql-proxy" resource_agent="lsb:mysql-proxy" role="Stopped" active="false" orphaned="false" blocked="false" maintenance="false" managed="true" failed="false" failure_ignored="false" nodes_running_on="0"/>
        </group>
      </clone>
      <clone id="promotable-clone" multi_state="true" unique="false" maintenance="false" managed="true" disabled="false" failed="false" failure_ignored="false">
        <resource id="promotable-rsc" resource_agent="ocf:pacemaker:Stateful" role="Promoted" active="true" orphaned="false" blocked="false" maintenance="false" managed="true" failed="false" failure_ignored="false" nodes_running_on="1">
          <node name="cluster02" id="2" cached="true"/>
        </resource>
        <resource id="promotable-rsc" resource_agent="ocf:pacemaker:Stateful" role="Unpromoted" active="true" orphaned="false" blocked="false" maintenance="false" managed="true" failed="false" failure_ignored="false" nodes_running_on="1">
          <node name="cluster01" id="1" cached="true"/>
        </resource>
        <resource id="promotable-rsc" resource_agent="ocf:pacemaker:Stateful" role="Stopped" active="false" orphaned="false" blocked="false" maintenance="false" managed="true" failed="false" failure_ignored="false" nodes_running_on="0"/>
        <resource id="promotable-rsc" resource_agent="ocf:pacemaker:Stateful" role="Stopped" active="false" orphaned="false" blocked="false" maintenance="false" managed="true" failed="false" failure_ignored="false" nodes_running_on="0"/>
        <resource id="promotable-rsc" resource_agent="ocf:pacemaker:Stateful" role="Stopped" active="false" orphaned="false" blocked="false" maintenance="false" managed="true" failed="false" failure_ignored="false" nodes_running_on="0"/>
      </clone>
    </resources>
  </cluster_status>
  <allocations>
    <node_weight function="pcmk__clone_assign" node="cluster01" score="0" id="ping-clone"/>
    <node_weight function="pcmk__clone_assign" node="cluster02" score="0" id="ping-clone"/>
    <node_weight function="pcmk__clone_assign" node="cluster01" score="0" id="ping:0"/>
    <node_weight function="pcmk__clone_assign" node="cluster02" score="1" id="ping:0"/>
    <node_weight function="pcmk__clone_assign" node="cluster01" score="1" id="ping:1"/>
    <node_weight function="pcmk__clone_assign" node="cluster02" score="0" id="ping:1"/>
    <node_weight function="pcmk__primitive_assign" node="cluster01" score="0" id="ping:0"/>
    <node_weight function="pcmk__primitive_assign" node="cluster02" score="1" id="ping:0"/>
    <node_weight function="pcmk__primitive_assign" node="cluster01" score="1" id="ping:1"/>
    <node_weight function="pcmk__primitive_assign" node="cluster02" score="-INFINITY" id="ping:1"/>
    <node_weight function="pcmk__primitive_assign" node="cluster01" score="0" id="Fencing"/>
    <node_weight function="pcmk__primitive_assign" node="cluster02" score="0" id="Fencing"/>
    <node_weight function="pcmk__primitive_assign" node="cluster01" score="-INFINITY" id="dummy"/>
    <node_weight function="pcmk__primitive_assign" node="cluster02" score="0" id="dummy"/>
    <node_weight function="pcmk__clone_assign" node="cluster01" score="0" id="inactive-clone"/>
    <node_weight function="pcmk__clone_assign" node="cluster02" score="0" id="inactive-clone"/>
    <node_weight function="pcmk__clone_assign" node="cluster01" score="0" id="inactive-dhcpd:0"/>
    <node_weight function="pcmk__clone_assign" node="cluster02" score="0" id="inactive-dhcpd:0"/>
    <node_weight function="pcmk__clone_assign" node="cluster01" score="0" id="inactive-dhcpd:1"/>
    <node_weight function="pcmk__clone_assign" node="cluster02" score="0" id="inactive-dhcpd:1"/>
    <node_weight function="pcmk__primitive_assign" node="cluster01" score="-INFINITY" id="inactive-dhcpd:0"/>
    <node_weight function="pcmk__primitive_assign" node="cluster02" score="-INFINITY" id="inactive-dhcpd:0"/>
    <node_weight function="pcmk__primitive_assign" node="httpd-bundle-0" score="-INFINITY" id="inactive-dhcpd:0"/>
    <node_weight function="pcmk__primitive_assign" node="httpd-bundle-1" score="-INFINITY" id="inactive-dhcpd:0"/>
    <node_weight function="pcmk__primitive_assign" node="httpd-bundle-2" score="-INFINITY" id="inactive-dhcpd:0"/>
    <node_weight function="pcmk__primitive_assign" node="cluster01" score="-INFINITY" id="inactive-dhcpd:1"/>
    <node_weight function="pcmk__primitive_assign" node="cluster02" score="-INFINITY" id="inactive-dhcpd:1"/>
    <node_weight function="pcmk__primitive_assign" node="httpd-bundle-0" score="-INFINITY" id="inactive-dhcpd:1"/>
    <node_weight function="pcmk__primitive_assign" node="httpd-bundle-1" score="-INFINITY" id="inactive-dhcpd:1"/>
    <node_weight function="pcmk__primitive_assign" node="httpd-bundle-2" score="-INFINITY" id="inactive-dhcpd:1"/>
    <node_weight function="pcmk__group_assign" node="cluster01" score="0" id="inactive-group"/>
    <node_weight function="pcmk__group_assign" node="cluster02" score="0" id="inactive-group"/>
    <node_weight function="pcmk__group_assign" node="cluster01" score="0" id="inactive-dummy-1"/>
    <node_weight function="pcmk__group_assign" node="cluster02" score="0" id="inactive-dummy-1"/>
    <node_weight function="pcmk__group_assign" node="cluster01" score="0" id="inactive-dummy-2"/>
    <node_weight function="pcmk__group_assign" node="cluster02" score="0" id="inactive-dummy-2"/>
    <node_weight function="pcmk__primitive_assign" node="cluster01" score="-INFINITY" id="inactive-dummy-1"/>
    <node_weight function="pcmk__primitive_assign" node="cluster02" score="-INFINITY" id="inactive-dummy-1"/>
    <node_weight function="pcmk__primitive_assign" node="httpd-bundle-0" score="-INFINITY" id="inactive-dummy-1"/>
    <node_weight function="pcmk__primitive_assign" node="httpd-bundle-1" score="-INFINITY" id="inactive-dummy-1"/>
    <node_weight function="pcmk__primitive_assign" node="httpd-bundle-2" score="-INFINITY" id="inactive-dummy-1"/>
    <node_weight function="pcmk__primitive_assign" node="cluster01" score="-INFINITY" id="inactive-dummy-2"/>
    <node_weight function="pcmk__primitive_assign" node="cluster02" score="-INFINITY" id="inactive-dummy-2"/>
    <node_weight function="pcmk__primitive_assign" node="httpd-bundle-0" score="-INFINITY" id="inactive-dummy-2"/>
    <node_weight function="pcmk__primitive_assign" node="httpd-bundle-1" score="-INFINITY" id="inactive-dummy-2"/>
    <node_weight function="pcmk__primitive_assign" node="httpd-bundle-2" score="-INFINITY" id="inactive-dummy-2"/>
    <node_weight function="pcmk__bundle_assign" node="cluster01" score="0" id="httpd-bundle"/>
    <node_weight function="pcmk__bundle_assign" node="cluster02" score="0" id="httpd-bundle"/>
    <node_weight function="pcmk__bundle_assign" node="cluster01" score="0" id="httpd-bundle-docker-0"/>
    <node_weight function="pcmk__bundle_assign" node="cluster02" score="0" id="httpd-bundle-docker-0"/>
    <node_weight function="pcmk__bundle_assign" node="cluster01" score="0" id="httpd-bundle-ip-192.168.122.131"/>
    <node_weight function="pcmk__bundle_assign" node="cluster02" score="0" id="httpd-bundle-ip-192.168.122.131"/>
    <node_weight function="pcmk__bundle_assign" node="cluster01" score="0" id="httpd-bundle-0"/>
    <node_weight function="pcmk__bundle_assign" node="cluster02" score="0" id="httpd-bundle-0"/>
    <node_weight function="pcmk__bundle_assign" node="cluster01" score="0" id="httpd-bundle-docker-1"/>
    <node_weight function="pcmk__bundle_assign" node="cluster02" score="0" id="httpd-bundle-docker-1"/>
    <node_weight function="pcmk__bundle_assign" node="cluster01" score="0" id="httpd-bundle-ip-192.168.122.132"/>
    <node_weight function="pcmk__bundle_assign" node="cluster02" score="0" id="httpd-bundle-ip-192.168.122.132"/>
    <node_weight function="pcmk__bundle_assign" node="cluster01" score="0" id="httpd-bundle-1"/>
    <node_weight function="pcmk__bundle_assign" node="cluster02" score="0" id="httpd-bundle-1"/>
    <node_weight function="pcmk__bundle_assign" node="cluster01" score="0" id="httpd-bundle-docker-2"/>
    <node_weight function="pcmk__bundle_assign" node="cluster02" score="0" id="httpd-bundle-docker-2"/>
    <node_weight function="pcmk__bundle_assign" node="cluster01" score="0" id="httpd-bundle-ip-192.168.122.133"/>
    <node_weight function="pcmk__bundle_assign" node="cluster02" score="0" id="httpd-bundle-ip-192.168.122.133"/>
    <node_weight function="pcmk__bundle_assign" node="cluster01" score="0" id="httpd-bundle-2"/>
    <node_weight function="pcmk__bundle_assign" node="cluster02" score="0" id="httpd-bundle-2"/>
    <node_weight function="pcmk__bundle_assign" node="cluster01" score="0" id="httpd-bundle-clone"/>
    <node_weight function="pcmk__bundle_assign" node="cluster02" score="0" id="httpd-bundle-clone"/>
    <node_weight function="pcmk__bundle_assign" node="httpd-bundle-0" score="-INFINITY" id="httpd-bundle-clone"/>
    <node_weight function="pcmk__bundle_assign" node="httpd-bundle-1" score="-INFINITY" id="httpd-bundle-clone"/>
    <node_weight function="pcmk__bundle_assign" node="httpd-bundle-2" score="-INFINITY" id="httpd-bundle-clone"/>
    <node_weight function="pcmk__bundle_assign" node="httpd-bundle-0" score="501" id="httpd:0"/>
    <node_weight function="pcmk__bundle_assign" node="httpd-bundle-1" score="501" id="httpd:1"/>
    <node_weight function="pcmk__bundle_assign" node="httpd-bundle-2" score="500" id="httpd:2"/>
    <node_weight function="pcmk__primitive_assign" node="cluster01" score="0" id="httpd-bundle-docker-0"/>
    <node_weight function="pcmk__primitive_assign" node="cluster02" score="0" id="httpd-bundle-docker-0"/>
    <node_weight function="pcmk__primitive_assign" node="cluster01" score="-INFINITY" id="httpd-bundle-docker-1"/>
    <node_weight function="pcmk__primitive_assign" node="cluster02" score="0" id="httpd-bundle-docker-1"/>
    <node_weight function="pcmk__primitive_assign" node="cluster01" score="-INFINITY" id="httpd-bundle-docker-2"/>
    <node_weight function="pcmk__primitive_assign" node="cluster02" score="-INFINITY" id="httpd-bundle-docker-2"/>
    <node_weight function="pcmk__primitive_assign" node="cluster01" score="0" id="httpd-bundle-ip-192.168.122.131"/>
    <node_weight function="pcmk__primitive_assign" node="cluster02" score="-INFINITY" id="httpd-bundle-ip-192.168.122.131"/>
    <node_weight function="pcmk__primitive_assign" node="cluster01" score="10000" id="httpd-bundle-0"/>
    <node_weight function="pcmk__primitive_assign" node="cluster02" score="0" id="httpd-bundle-0"/>
    <node_weight function="pcmk__primitive_assign" node="httpd-bundle-0" score="INFINITY" id="httpd:0"/>
    <node_weight function="pcmk__primitive_assign" node="cluster01" score="-INFINITY" id="httpd-bundle-ip-192.168.122.132"/>
    <node_weight function="pcmk__primitive_assign" node="cluster02" score="0" id="httpd-bundle-ip-192.168.122.132"/>
    <node_weight function="pcmk__primitive_assign" node="cluster01" score="0" id="httpd-bundle-1"/>
    <node_weight function="pcmk__primitive_assign" node="cluster02" score="10000" id="httpd-bundle-1"/>
    <node_weight function="pcmk__primitive_assign" node="httpd-bundle-1" score="INFINITY" id="httpd:1"/>
    <node_weight function="pcmk__primitive_assign" node="cluster01" score="-INFINITY" id="httpd-bundle-ip-192.168.122.133"/>
    <node_weight function="pcmk__primitive_assign" node="cluster02" score="-INFINITY" id="httpd-bundle-ip-192.168.122.133"/>
    <node_weight function="pcmk__primitive_assign" node="cluster01" score="0" id="httpd-bundle-2"/>
    <node_weight function="pcmk__primitive_assign" node="cluster02" score="0" id="httpd-bundle-2"/>
    <node_weight function="pcmk__primitive_assign" node="httpd-bundle-2" score="INFINITY" id="httpd:2"/>
    <node_weight function="pcmk__clone_assign" node="cluster01" score="-INFINITY" id="httpd-bundle-clone"/>
    <node_weight function="pcmk__clone_assign" node="cluster02" score="-INFINITY" id="httpd-bundle-clone"/>
    <node_weight function="pcmk__clone_assign" node="httpd-bundle-0" score="0" id="httpd-bundle-clone"/>
    <node_weight function="pcmk__clone_assign" node="httpd-bundle-1" score="0" id="httpd-bundle-clone"/>
    <node_weight function="pcmk__clone_assign" node="httpd-bundle-2" score="0" id="httpd-bundle-clone"/>
    <node_weight function="pcmk__clone_assign" node="httpd-bundle-0" score="INFINITY" id="httpd:0"/>
    <node_weight function="pcmk__clone_assign" node="httpd-bundle-1" score="INFINITY" id="httpd:1"/>
    <node_weight function="pcmk__clone_assign" node="httpd-bundle-2" score="INFINITY" id="httpd:2"/>
    <node_weight function="pcmk__group_assign" node="cluster01" score="0" id="exim-group"/>
    <node_weight function="pcmk__group_assign" node="cluster02" score="0" id="exim-group"/>
    <node_weight function="pcmk__group_assign" node="cluster01" score="0" id="Public-IP"/>
    <node_weight function="pcmk__group_assign" node="cluster02" score="0" id="Public-IP"/>
    <node_weight function="pcmk__group_assign" node="cluster01" score="0" id="Email"/>
    <node_weight function="pcmk__group_assign" node="cluster02" score="0" id="Email"/>
    <node_weight function="pcmk__primitive_assign" node="cluster01" score="0" id="Public-IP"/>
    <node_weight function="pcmk__primitive_assign" node="cluster02" score="0" id="Public-IP"/>
    <node_weight function="pcmk__primitive_assign" node="cluster01" score="-INFINITY" id="Email"/>
    <node_weight function="pcmk__primitive_assign" node="cluster02" score="0" id="Email"/>
    <node_weight function="pcmk__clone_assign" node="cluster01" score="0" id="mysql-clone-group"/>
    <node_weight function="pcmk__clone_assign" node="cluster02" score="0" id="mysql-clone-group"/>
    <node_weight function="pcmk__clone_assign" node="cluster01" score="0" id="mysql-group:0"/>
    <node_weight function="pcmk__clone_assign" node="cluster02" score="0" id="mysql-group:0"/>
    <node_weight function="pcmk__clone_assign" node="cluster01" score="0" id="mysql-proxy:0"/>
    <node_weight function="pcmk__clone_assign" node="cluster02" score="1" id="mysql-proxy:0"/>
    <node_weight function="pcmk__clone_assign" node="cluster01" score="0" id="mysql-group:1"/>
    <node_weight function="pcmk__clone_assign" node="cluster02" score="0" id="mysql-group:1"/>
    <node_weight function="pcmk__clone_assign" node="cluster01" score="1" id="mysql-proxy:1"/>
    <node_weight function="pcmk__clone_assign" node="cluster02" score="0" id="mysql-proxy:1"/>
    <node_weight function="pcmk__clone_assign" node="cluster01" score="0" id="mysql-group:2"/>
    <node_weight function="pcmk__clone_assign" node="cluster02" score="0" id="mysql-group:2"/>
    <node_weight function="pcmk__clone_assign" node="cluster01" score="0" id="mysql-proxy:2"/>
    <node_weight function="pcmk__clone_assign" node="cluster02" score="0" id="mysql-proxy:2"/>
    <node_weight function="pcmk__clone_assign" node="cluster01" score="0" id="mysql-group:3"/>
    <node_weight function="pcmk__clone_assign" node="cluster02" score="0" id="mysql-group:3"/>
    <node_weight function="pcmk__clone_assign" node="cluster01" score="0" id="mysql-proxy:3"/>
    <node_weight function="pcmk__clone_assign" node="cluster02" score="0" id="mysql-proxy:3"/>
    <node_weight function="pcmk__clone_assign" node="cluster01" score="0" id="mysql-group:4"/>
    <node_weight function="pcmk__clone_assign" node="cluster02" score="0" id="mysql-group:4"/>
    <node_weight function="pcmk__clone_assign" node="cluster01" score="0" id="mysql-proxy:4"/>
    <node_weight function="pcmk__clone_assign" node="cluster02" score="0" id="mysql-proxy:4"/>
    <node_weight function="pcmk__group_assign" node="cluster01" score="0" id="mysql-group:0"/>
    <node_weight function="pcmk__group_assign" node="cluster02" score="0" id="mysql-group:0"/>
    <node_weight function="pcmk__group_assign" node="cluster01" score="0" id="mysql-proxy:0"/>
    <node_weight function="pcmk__group_assign" node="cluster02" score="1" id="mysql-proxy:0"/>
    <node_weight function="pcmk__primitive_assign" node="cluster01" score="0" id="mysql-proxy:0"/>
    <node_weight function="pcmk__primitive_assign" node="cluster02" score="1" id="mysql-proxy:0"/>
    <node_weight function="pcmk__group_assign" node="cluster01" score="0" id="mysql-group:1"/>
    <node_weight function="pcmk__group_assign" node="cluster02" score="-INFINITY" id="mysql-group:1"/>
    <node_weight function="pcmk__group_assign" node="cluster01" score="1" id="mysql-proxy:1"/>
    <node_weight function="pcmk__group_assign" node="cluster02" score="-INFINITY" id="mysql-proxy:1"/>
    <node_weight function="pcmk__primitive_assign" node="cluster01" score="1" id="mysql-proxy:1"/>
    <node_weight function="pcmk__primitive_assign" node="cluster02" score="-INFINITY" id="mysql-proxy:1"/>
    <node_weight function="pcmk__group_assign" node="cluster01" score="-INFINITY" id="mysql-group:2"/>
    <node_weight function="pcmk__group_assign" node="cluster02" score="-INFINITY" id="mysql-group:2"/>
    <node_weight function="pcmk__group_assign" node="cluster01" score="-INFINITY" id="mysql-proxy:2"/>
    <node_weight function="pcmk__group_assign" node="cluster02" score="-INFINITY" id="mysql-proxy:2"/>
    <node_weight function="pcmk__primitive_assign" node="cluster01" score="-INFINITY" id="mysql-proxy:2"/>
    <node_weight function="pcmk__primitive_assign" node="cluster02" score="-INFINITY" id="mysql-proxy:2"/>
    <node_weight function="pcmk__group_assign" node="cluster01" score="-INFINITY" id="mysql-group:3"/>
    <node_weight function="pcmk__group_assign" node="cluster02" score="-INFINITY" id="mysql-group:3"/>
    <node_weight function="pcmk__group_assign" node="cluster01" score="-INFINITY" id="mysql-proxy:3"/>
    <node_weight function="pcmk__group_assign" node="cluster02" score="-INFINITY" id="mysql-proxy:3"/>
    <node_weight function="pcmk__primitive_assign" node="cluster01" score="-INFINITY" id="mysql-proxy:3"/>
    <node_weight function="pcmk__primitive_assign" node="cluster02" score="-INFINITY" id="mysql-proxy:3"/>
    <node_weight function="pcmk__group_assign" node="cluster01" score="-INFINITY" id="mysql-group:4"/>
    <node_weight function="pcmk__group_assign" node="cluster02" score="-INFINITY" id="mysql-group:4"/>
    <node_weight function="pcmk__group_assign" node="cluster01" score="-INFINITY" id="mysql-proxy:4"/>
    <node_weight function="pcmk__group_assign" node="cluster02" score="-INFINITY" id="mysql-proxy:4"/>
    <node_weight function="pcmk__primitive_assign" node="cluster01" score="-INFINITY" id="mysql-proxy:4"/>
    <node_weight function="pcmk__primitive_assign" node="cluster02" score="-INFINITY" id="mysql-proxy:4"/>
    <node_weight function="pcmk__clone_assign" node="cluster01" score="0" id="promotable-clone"/>
    <node_weight function="pcmk__clone_assign" node="cluster02" score="0" id="promotable-clone"/>
    <node_weight function="pcmk__clone_assign" node="cluster01" score="0" id="promotable-rsc:0"/>
    <node_weight function="pcmk__clone_assign" node="cluster02" score="1" id="promotable-rsc:0"/>
    <node_weight function="pcmk__clone_assign" node="cluster01" score="1" id="promotable-rsc:1"/>
    <node_weight function="pcmk__clone_assign" node="cluster02" score="0" id="promotable-rsc:1"/>
    <node_weight function="pcmk__clone_assign" node="cluster01" score="0" id="promotable-rsc:2"/>
    <node_weight function="pcmk__clone_assign" node="cluster02" score="0" id="promotable-rsc:2"/>
    <node_weight function="pcmk__clone_assign" node="cluster01" score="0" id="promotable-rsc:3"/>
    <node_weight function="pcmk__clone_assign" node="cluster02" score="0" id="promotable-rsc:3"/>
    <node_weight function="pcmk__clone_assign" node="cluster01" score="0" id="promotable-rsc:4"/>
    <node_weight function="pcmk__clone_assign" node="cluster02" score="0" id="promotable-rsc:4"/>
    <node_weight function="pcmk__primitive_assign" node="cluster01" score="0" id="promotable-rsc:0"/>
    <node_weight function="pcmk__primitive_assign" node="cluster02" score="1" id="promotable-rsc:0"/>
    <node_weight function="pcmk__primitive_assign" node="cluster01" score="1" id="promotable-rsc:1"/>
    <node_weight function="pcmk__primitive_assign" node="cluster02" score="-INFINITY" id="promotable-rsc:1"/>
    <node_weight function="pcmk__primitive_assign" node="cluster01" score="-INFINITY" id="promotable-rsc:2"/>
    <node_weight function="pcmk__primitive_assign" node="cluster02" score="-INFINITY" id="promotable-rsc:2"/>
    <node_weight function="pcmk__primitive_assign" node="cluster01" score="-INFINITY" id="promotable-rsc:3"/>
    <node_weight function="pcmk__primitive_assign" node="cluster02" score="-INFINITY" id="promotable-rsc:3"/>
    <node_weight function="pcmk__primitive_assign" node="cluster01" score="-INFINITY" id="promotable-rsc:4"/>
    <node_weight function="pcmk__primitive_assign" node="cluster02" score="-INFINITY" id="promotable-rsc:4"/>
    <promotion_score id="promotable-rsc:0" score="9" node="cluster02"/>
    <promotion_score id="promotable-rsc:1" score="-1" node="cluster01"/>
    <promotion_score id="promotable-rsc:2" score="-INFINITY"/>
    <promotion_score id="promotable-rsc:3" score="-INFINITY"/>
    <promotion_score id="promotable-rsc:4" score="-INFINITY"/>
  </allocations>
  <actions>
    <rsc_action action="start" resource="httpd-bundle-2" node="cluster01" reason="unrunnable httpd-bundle-docker-2 start" blocked="true"/>
    <rsc_action action="start" resource="httpd:2" node="httpd-bundle-2" reason="unrunnable httpd-bundle-docker-2 start" blocked="true"/>
  </actions>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Show allocation scores with crm_simulate - OK (0) =#=#=#=
* Passed: crm_simulate   - Show allocation scores with crm_simulate
=#=#=#= Begin test: Show utilization with crm_simulate =#=#=#=
4 of 32 resource instances DISABLED and 0 BLOCKED from further action due to failure

Current cluster status:
  * Node List:
    * Online: [ cluster01 cluster02 ]
    * GuestOnline: [ httpd-bundle-0 httpd-bundle-1 ]

  * Full List of Resources:
    * Clone Set: ping-clone [ping]:
      * Started: [ cluster01 cluster02 ]
    * Fencing	(stonith:fence_xvm):	 Started cluster01
    * dummy	(ocf:pacemaker:Dummy):	 Started cluster02
    * Clone Set: inactive-clone [inactive-dhcpd] (disabled):
      * Stopped (disabled): [ cluster01 cluster02 ]
    * Resource Group: inactive-group (disabled):
      * inactive-dummy-1	(ocf:pacemaker:Dummy):	 Stopped (disabled)
      * inactive-dummy-2	(ocf:pacemaker:Dummy):	 Stopped (disabled)
    * Container bundle set: httpd-bundle [pcmk:http]:
      * httpd-bundle-0 (192.168.122.131)	(ocf:heartbeat:apache):	 Started cluster01
      * httpd-bundle-1 (192.168.122.132)	(ocf:heartbeat:apache):	 Started cluster02
      * httpd-bundle-2 (192.168.122.133)	(ocf:heartbeat:apache):	 Stopped
    * Resource Group: exim-group:
      * Public-IP	(ocf:heartbeat:IPaddr):	 Started cluster02
      * Email	(lsb:exim):	 Started cluster02
    * Clone Set: mysql-clone-group [mysql-group]:
      * Started: [ cluster01 cluster02 ]
    * Clone Set: promotable-clone [promotable-rsc] (promotable):
      * Promoted: [ cluster02 ]
      * Unpromoted: [ cluster01 ]

Utilization Information:
Only 'private' parameters to 1m-interval monitor for dummy on cluster02 changed: 0:0;16:2:0:4a9e64d6-e1dd-4395-917c-1596312eafe4
  * Original: cluster01 capacity:
  * Original: cluster02 capacity:
  * Original: httpd-bundle-0 capacity:
  * Original: httpd-bundle-1 capacity:
  * Original: httpd-bundle-2 capacity:
  * pcmk__assign_resource: ping:0 utilization on cluster02:
  * pcmk__assign_resource: ping:1 utilization on cluster01:
  * pcmk__assign_resource: Fencing utilization on cluster01:
  * pcmk__assign_resource: dummy utilization on cluster02:
  * pcmk__assign_resource: httpd-bundle-docker-0 utilization on cluster01:
  * pcmk__assign_resource: httpd-bundle-docker-1 utilization on cluster02:
  * pcmk__assign_resource: httpd-bundle-ip-192.168.122.131 utilization on cluster01:
  * pcmk__assign_resource: httpd-bundle-0 utilization on cluster01:
  * pcmk__assign_resource: httpd:0 utilization on httpd-bundle-0:
  * pcmk__assign_resource: httpd-bundle-ip-192.168.122.132 utilization on cluster02:
  * pcmk__assign_resource: httpd-bundle-1 utilization on cluster02:
  * pcmk__assign_resource: httpd:1 utilization on httpd-bundle-1:
  * pcmk__assign_resource: httpd-bundle-2 utilization on cluster01:
  * pcmk__assign_resource: httpd:2 utilization on httpd-bundle-2:
  * pcmk__assign_resource: Public-IP utilization on cluster02:
  * pcmk__assign_resource: Email utilization on cluster02:
  * pcmk__assign_resource: mysql-proxy:0 utilization on cluster02:
  * pcmk__assign_resource: mysql-proxy:1 utilization on cluster01:
  * pcmk__assign_resource: promotable-rsc:0 utilization on cluster02:
  * pcmk__assign_resource: promotable-rsc:1 utilization on cluster01:
  * Remaining: cluster01 capacity:
  * Remaining: cluster02 capacity:
  * Remaining: httpd-bundle-0 capacity:
  * Remaining: httpd-bundle-1 capacity:
  * Remaining: httpd-bundle-2 capacity:

Transition Summary:
  * Start      httpd-bundle-2     (      cluster01 )  due to unrunnable httpd-bundle-docker-2 start (blocked)
  * Start      httpd:2            ( httpd-bundle-2 )  due to unrunnable httpd-bundle-docker-2 start (blocked)
=#=#=#= End test: Show utilization with crm_simulate - OK (0) =#=#=#=
* Passed: crm_simulate   - Show utilization with crm_simulate
=#=#=#= Begin test: Simulate injecting a failure =#=#=#=
4 of 32 resource instances DISABLED and 0 BLOCKED from further action due to failure

Current cluster status:
  * Node List:
    * Online: [ cluster01 cluster02 ]
    * GuestOnline: [ httpd-bundle-0 httpd-bundle-1 ]

  * Full List of Resources:
    * Clone Set: ping-clone [ping]:
      * Started: [ cluster01 cluster02 ]
    * Fencing	(stonith:fence_xvm):	 Started cluster01
    * dummy	(ocf:pacemaker:Dummy):	 Started cluster02
    * Clone Set: inactive-clone [inactive-dhcpd] (disabled):
      * Stopped (disabled): [ cluster01 cluster02 ]
    * Resource Group: inactive-group (disabled):
      * inactive-dummy-1	(ocf:pacemaker:Dummy):	 Stopped (disabled)
      * inactive-dummy-2	(ocf:pacemaker:Dummy):	 Stopped (disabled)
    * Container bundle set: httpd-bundle [pcmk:http]:
      * httpd-bundle-0 (192.168.122.131)	(ocf:heartbeat:apache):	 Started cluster01
      * httpd-bundle-1 (192.168.122.132)	(ocf:heartbeat:apache):	 Started cluster02
      * httpd-bundle-2 (192.168.122.133)	(ocf:heartbeat:apache):	 Stopped
    * Resource Group: exim-group:
      * Public-IP	(ocf:heartbeat:IPaddr):	 Started cluster02
      * Email	(lsb:exim):	 Started cluster02
    * Clone Set: mysql-clone-group [mysql-group]:
      * Started: [ cluster01 cluster02 ]
    * Clone Set: promotable-clone [promotable-rsc] (promotable):
      * Promoted: [ cluster02 ]
      * Unpromoted: [ cluster01 ]

Performing Requested Modifications:
  * Injecting ping_monitor_10000@cluster02=1 into the configuration
  * Injecting attribute fail-count-ping#monitor_10000=1 into /node_state '2'
  * Injecting attribute last-failure-ping#monitor_10000= into /node_state '2'

Transition Summary:
  * Recover    ping:0             (      cluster02 )
  * Start      httpd-bundle-2     (      cluster01 )  due to unrunnable httpd-bundle-docker-2 start (blocked)
  * Start      httpd:2            ( httpd-bundle-2 )  due to unrunnable httpd-bundle-docker-2 start (blocked)

Executing Cluster Transition:
  * Cluster action:  clear_failcount for ping on cluster02
  * Pseudo action:   ping-clone_stop_0
  * Pseudo action:   httpd-bundle_start_0
  * Resource action: ping            stop on cluster02
  * Pseudo action:   ping-clone_stopped_0
  * Pseudo action:   ping-clone_start_0
  * Pseudo action:   httpd-bundle-clone_start_0
  * Resource action: ping            start on cluster02
  * Resource action: ping            monitor=10000 on cluster02
  * Pseudo action:   ping-clone_running_0
  * Pseudo action:   httpd-bundle-clone_running_0
  * Pseudo action:   httpd-bundle_running_0

Revised Cluster Status:
  * Node List:
    * Online: [ cluster01 cluster02 ]
    * GuestOnline: [ httpd-bundle-0 httpd-bundle-1 ]

  * Full List of Resources:
    * Clone Set: ping-clone [ping]:
      * Started: [ cluster01 cluster02 ]
    * Fencing	(stonith:fence_xvm):	 Started cluster01
    * dummy	(ocf:pacemaker:Dummy):	 Started cluster02
    * Clone Set: inactive-clone [inactive-dhcpd] (disabled):
      * Stopped (disabled): [ cluster01 cluster02 ]
    * Resource Group: inactive-group (disabled):
      * inactive-dummy-1	(ocf:pacemaker:Dummy):	 Stopped (disabled)
      * inactive-dummy-2	(ocf:pacemaker:Dummy):	 Stopped (disabled)
    * Container bundle set: httpd-bundle [pcmk:http]:
      * httpd-bundle-0 (192.168.122.131)	(ocf:heartbeat:apache):	 Started cluster01
      * httpd-bundle-1 (192.168.122.132)	(ocf:heartbeat:apache):	 Started cluster02
      * httpd-bundle-2 (192.168.122.133)	(ocf:heartbeat:apache):	 Stopped
    * Resource Group: exim-group:
      * Public-IP	(ocf:heartbeat:IPaddr):	 Started cluster02
      * Email	(lsb:exim):	 Started cluster02
    * Clone Set: mysql-clone-group [mysql-group]:
      * Started: [ cluster01 cluster02 ]
    * Clone Set: promotable-clone [promotable-rsc] (promotable):
      * Promoted: [ cluster02 ]
      * Unpromoted: [ cluster01 ]
=#=#=#= End test: Simulate injecting a failure - OK (0) =#=#=#=
* Passed: crm_simulate   - Simulate injecting a failure
=#=#=#= Begin test: Simulate bringing a node down =#=#=#=
4 of 32 resource instances DISABLED and 0 BLOCKED from further action due to failure

Current cluster status:
  * Node List:
    * Online: [ cluster01 cluster02 ]
    * GuestOnline: [ httpd-bundle-0 httpd-bundle-1 ]

  * Full List of Resources:
    * Clone Set: ping-clone [ping]:
      * Started: [ cluster01 cluster02 ]
    * Fencing	(stonith:fence_xvm):	 Started cluster01
    * dummy	(ocf:pacemaker:Dummy):	 Started cluster02
    * Clone Set: inactive-clone [inactive-dhcpd] (disabled):
      * Stopped (disabled): [ cluster01 cluster02 ]
    * Resource Group: inactive-group (disabled):
      * inactive-dummy-1	(ocf:pacemaker:Dummy):	 Stopped (disabled)
      * inactive-dummy-2	(ocf:pacemaker:Dummy):	 Stopped (disabled)
    * Container bundle set: httpd-bundle [pcmk:http]:
      * httpd-bundle-0 (192.168.122.131)	(ocf:heartbeat:apache):	 Started cluster01
      * httpd-bundle-1 (192.168.122.132)	(ocf:heartbeat:apache):	 Started cluster02
      * httpd-bundle-2 (192.168.122.133)	(ocf:heartbeat:apache):	 Stopped
    * Resource Group: exim-group:
      * Public-IP	(ocf:heartbeat:IPaddr):	 Started cluster02
      * Email	(lsb:exim):	 Started cluster02
    * Clone Set: mysql-clone-group [mysql-group]:
      * Started: [ cluster01 cluster02 ]
    * Clone Set: promotable-clone [promotable-rsc] (promotable):
      * Promoted: [ cluster02 ]
      * Unpromoted: [ cluster01 ]

Performing Requested Modifications:
  * Taking node cluster01 offline

Transition Summary:
  * Fence (off) httpd-bundle-0 (resource: httpd-bundle-docker-0) 'guest is unclean'
  * Start      Fencing            (      cluster02 )
  * Start      httpd-bundle-0     (      cluster02 )  due to unrunnable httpd-bundle-docker-0 start (blocked)
  * Stop       httpd:0            ( httpd-bundle-0 )  due to unrunnable httpd-bundle-docker-0 start
  * Start      httpd-bundle-2     (      cluster02 )  due to unrunnable httpd-bundle-docker-2 start (blocked)
  * Start      httpd:2            ( httpd-bundle-2 )  due to unrunnable httpd-bundle-docker-2 start (blocked)

Executing Cluster Transition:
  * Resource action: Fencing         start on cluster02
  * Pseudo action:   stonith-httpd-bundle-0-off on httpd-bundle-0
  * Pseudo action:   httpd-bundle_stop_0
  * Pseudo action:   httpd-bundle_start_0
  * Resource action: Fencing         monitor=60000 on cluster02
  * Pseudo action:   httpd-bundle-clone_stop_0
  * Pseudo action:   httpd_stop_0
  * Pseudo action:   httpd-bundle-clone_stopped_0
  * Pseudo action:   httpd-bundle-clone_start_0
  * Pseudo action:   httpd-bundle_stopped_0
  * Pseudo action:   httpd-bundle-clone_running_0
  * Pseudo action:   httpd-bundle_running_0

Revised Cluster Status:
  * Node List:
    * Online: [ cluster02 ]
    * OFFLINE: [ cluster01 ]
    * GuestOnline: [ httpd-bundle-1 ]

  * Full List of Resources:
    * Clone Set: ping-clone [ping]:
      * Started: [ cluster02 ]
      * Stopped: [ cluster01 ]
    * Fencing	(stonith:fence_xvm):	 Started cluster02
    * dummy	(ocf:pacemaker:Dummy):	 Started cluster02
    * Clone Set: inactive-clone [inactive-dhcpd] (disabled):
      * Stopped (disabled): [ cluster01 cluster02 ]
    * Resource Group: inactive-group (disabled):
      * inactive-dummy-1	(ocf:pacemaker:Dummy):	 Stopped (disabled)
      * inactive-dummy-2	(ocf:pacemaker:Dummy):	 Stopped (disabled)
    * Container bundle set: httpd-bundle [pcmk:http]:
      * httpd-bundle-0 (192.168.122.131)	(ocf:heartbeat:apache):	 FAILED
      * httpd-bundle-1 (192.168.122.132)	(ocf:heartbeat:apache):	 Started cluster02
      * httpd-bundle-2 (192.168.122.133)	(ocf:heartbeat:apache):	 Stopped
    * Resource Group: exim-group:
      * Public-IP	(ocf:heartbeat:IPaddr):	 Started cluster02
      * Email	(lsb:exim):	 Started cluster02
    * Clone Set: mysql-clone-group [mysql-group]:
      * Started: [ cluster02 ]
      * Stopped: [ cluster01 ]
    * Clone Set: promotable-clone [promotable-rsc] (promotable):
      * Promoted: [ cluster02 ]
      * Stopped: [ cluster01 ]
=#=#=#= End test: Simulate bringing a node down - OK (0) =#=#=#=
* Passed: crm_simulate   - Simulate bringing a node down
=#=#=#= Begin test: Simulate a node failing =#=#=#=
4 of 32 resource instances DISABLED and 0 BLOCKED from further action due to failure

Current cluster status:
  * Node List:
    * Online: [ cluster01 cluster02 ]
    * GuestOnline: [ httpd-bundle-0 httpd-bundle-1 ]

  * Full List of Resources:
    * Clone Set: ping-clone [ping]:
      * Started: [ cluster01 cluster02 ]
    * Fencing	(stonith:fence_xvm):	 Started cluster01
    * dummy	(ocf:pacemaker:Dummy):	 Started cluster02
    * Clone Set: inactive-clone [inactive-dhcpd] (disabled):
      * Stopped (disabled): [ cluster01 cluster02 ]
    * Resource Group: inactive-group (disabled):
      * inactive-dummy-1	(ocf:pacemaker:Dummy):	 Stopped (disabled)
      * inactive-dummy-2	(ocf:pacemaker:Dummy):	 Stopped (disabled)
    * Container bundle set: httpd-bundle [pcmk:http]:
      * httpd-bundle-0 (192.168.122.131)	(ocf:heartbeat:apache):	 Started cluster01
      * httpd-bundle-1 (192.168.122.132)	(ocf:heartbeat:apache):	 Started cluster02
      * httpd-bundle-2 (192.168.122.133)	(ocf:heartbeat:apache):	 Stopped
    * Resource Group: exim-group:
      * Public-IP	(ocf:heartbeat:IPaddr):	 Started cluster02
      * Email	(lsb:exim):	 Started cluster02
    * Clone Set: mysql-clone-group [mysql-group]:
      * Started: [ cluster01 cluster02 ]
    * Clone Set: promotable-clone [promotable-rsc] (promotable):
      * Promoted: [ cluster02 ]
      * Unpromoted: [ cluster01 ]

Performing Requested Modifications:
  * Failing node cluster02

Transition Summary:
  * Fence (off) httpd-bundle-1 (resource: httpd-bundle-docker-1) 'guest is unclean'
  * Fence (reboot) cluster02 'peer is no longer part of the cluster'
  * Stop       ping:0                              (              cluster02 )  due to node availability
  * Stop       dummy                               (              cluster02 )  due to node availability
  * Stop       httpd-bundle-ip-192.168.122.132     (              cluster02 )  due to node availability
  * Stop       httpd-bundle-docker-1               (              cluster02 )  due to node availability
  * Stop       httpd-bundle-1                      (              cluster02 )  due to unrunnable httpd-bundle-docker-1 start
  * Stop       httpd:1                             (         httpd-bundle-1 )  due to unrunnable httpd-bundle-docker-1 start
  * Start      httpd-bundle-2                      (              cluster01 )  due to unrunnable httpd-bundle-docker-2 start (blocked)
  * Start      httpd:2                             (         httpd-bundle-2 )  due to unrunnable httpd-bundle-docker-2 start (blocked)
  * Move       Public-IP                           ( cluster02 -> cluster01 )
  * Move       Email                               ( cluster02 -> cluster01 )
  * Stop       mysql-proxy:0                       (              cluster02 )  due to node availability
  * Stop       promotable-rsc:0                    (     Promoted cluster02 )  due to node availability

Executing Cluster Transition:
  * Pseudo action:   httpd-bundle-1_stop_0
  * Pseudo action:   promotable-clone_demote_0
  * Pseudo action:   httpd-bundle_stop_0
  * Pseudo action:   httpd-bundle_start_0
  * Fencing cluster02 (reboot)
  * Pseudo action:   ping-clone_stop_0
  * Pseudo action:   dummy_stop_0
  * Pseudo action:   httpd-bundle-docker-1_stop_0
  * Pseudo action:   exim-group_stop_0
  * Pseudo action:   Email_stop_0
  * Pseudo action:   mysql-clone-group_stop_0
  * Pseudo action:   promotable-rsc_demote_0
  * Pseudo action:   promotable-clone_demoted_0
  * Pseudo action:   promotable-clone_stop_0
  * Pseudo action:   stonith-httpd-bundle-1-off on httpd-bundle-1
  * Pseudo action:   ping_stop_0
  * Pseudo action:   ping-clone_stopped_0
  * Pseudo action:   httpd-bundle-clone_stop_0
  * Pseudo action:   httpd-bundle-ip-192.168.122.132_stop_0
  * Pseudo action:   Public-IP_stop_0
  * Pseudo action:   mysql-group:0_stop_0
  * Pseudo action:   mysql-proxy_stop_0
  * Pseudo action:   promotable-rsc_stop_0
  * Pseudo action:   promotable-clone_stopped_0
  * Pseudo action:   httpd_stop_0
  * Pseudo action:   httpd-bundle-clone_stopped_0
  * Pseudo action:   httpd-bundle-clone_start_0
  * Pseudo action:   exim-group_stopped_0
  * Pseudo action:   exim-group_start_0
  * Resource action: Public-IP       start on cluster01
  * Resource action: Email           start on cluster01
  * Pseudo action:   mysql-group:0_stopped_0
  * Pseudo action:   mysql-clone-group_stopped_0
  * Pseudo action:   httpd-bundle_stopped_0
  * Pseudo action:   httpd-bundle-clone_running_0
  * Pseudo action:   exim-group_running_0
  * Pseudo action:   httpd-bundle_running_0

Revised Cluster Status:
  * Node List:
    * Online: [ cluster01 ]
    * OFFLINE: [ cluster02 ]
    * GuestOnline: [ httpd-bundle-0 ]

  * Full List of Resources:
    * Clone Set: ping-clone [ping]:
      * Started: [ cluster01 ]
      * Stopped: [ cluster02 ]
    * Fencing	(stonith:fence_xvm):	 Started cluster01
    * dummy	(ocf:pacemaker:Dummy):	 Stopped
    * Clone Set: inactive-clone [inactive-dhcpd] (disabled):
      * Stopped (disabled): [ cluster01 cluster02 ]
    * Resource Group: inactive-group (disabled):
      * inactive-dummy-1	(ocf:pacemaker:Dummy):	 Stopped (disabled)
      * inactive-dummy-2	(ocf:pacemaker:Dummy):	 Stopped (disabled)
    * Container bundle set: httpd-bundle [pcmk:http]:
      * httpd-bundle-0 (192.168.122.131)	(ocf:heartbeat:apache):	 Started cluster01
      * httpd-bundle-1 (192.168.122.132)	(ocf:heartbeat:apache):	 FAILED
      * httpd-bundle-2 (192.168.122.133)	(ocf:heartbeat:apache):	 Stopped
    * Resource Group: exim-group:
      * Public-IP	(ocf:heartbeat:IPaddr):	 Started cluster01
      * Email	(lsb:exim):	 Started cluster01
    * Clone Set: mysql-clone-group [mysql-group]:
      * Started: [ cluster01 ]
      * Stopped: [ cluster02 ]
    * Clone Set: promotable-clone [promotable-rsc] (promotable):
      * Unpromoted: [ cluster01 ]
      * Stopped: [ cluster02 ]
=#=#=#= End test: Simulate a node failing - OK (0) =#=#=#=
* Passed: crm_simulate   - Simulate a node failing
=#=#=#= Begin test: List a promotable clone resource =#=#=#=
resource promotable-clone is running on: cluster01
resource promotable-clone is running on: cluster02 Promoted
=#=#=#= End test: List a promotable clone resource - OK (0) =#=#=#=
* Passed: crm_resource   - List a promotable clone resource
=#=#=#= Begin test: List the primitive of a promotable clone resource =#=#=#=
resource promotable-rsc is running on: cluster01
resource promotable-rsc is running on: cluster02 Promoted
=#=#=#= End test: List the primitive of a promotable clone resource - OK (0) =#=#=#=
* Passed: crm_resource   - List the primitive of a promotable clone resource
=#=#=#= Begin test: List a single instance of a promotable clone resource =#=#=#=
resource promotable-rsc:0 is running on: cluster02 Promoted
=#=#=#= End test: List a single instance of a promotable clone resource - OK (0) =#=#=#=
* Passed: crm_resource   - List a single instance of a promotable clone resource
=#=#=#= Begin test: List another instance of a promotable clone resource =#=#=#=
resource promotable-rsc:1 is running on: cluster01
=#=#=#= End test: List another instance of a promotable clone resource - OK (0) =#=#=#=
* Passed: crm_resource   - List another instance of a promotable clone resource
=#=#=#= Begin test: List a promotable clone resource in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource --locate -r promotable-clone --output-as=xml">
  <nodes resource="promotable-clone">
    <node>cluster01</node>
    <node state="promoted">cluster02</node>
  </nodes>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: List a promotable clone resource in XML - OK (0) =#=#=#=
* Passed: crm_resource   - List a promotable clone resource in XML
=#=#=#= Begin test: List the primitive of a promotable clone resource in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource --locate -r promotable-rsc --output-as=xml">
  <nodes resource="promotable-rsc">
    <node>cluster01</node>
    <node state="promoted">cluster02</node>
  </nodes>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: List the primitive of a promotable clone resource in XML - OK (0) =#=#=#=
* Passed: crm_resource   - List the primitive of a promotable clone resource in XML
=#=#=#= Begin test: List a single instance of a promotable clone resource in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource --locate -r promotable-rsc:0 --output-as=xml">
  <nodes resource="promotable-rsc:0">
    <node state="promoted">cluster02</node>
  </nodes>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: List a single instance of a promotable clone resource in XML - OK (0) =#=#=#=
* Passed: crm_resource   - List a single instance of a promotable clone resource in XML
=#=#=#= Begin test: List another instance of a promotable clone resource in XML =#=#=#=
<pacemaker-result api-version="X" request="crm_resource --locate -r promotable-rsc:1 --output-as=xml">
  <nodes resource="promotable-rsc:1">
    <node>cluster01</node>
  </nodes>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: List another instance of a promotable clone resource in XML - OK (0) =#=#=#=
* Passed: crm_resource   - List another instance of a promotable clone resource in XML
=#=#=#= Begin test: Try to move an instance of a cloned resource =#=#=#=
crm_resource: Cannot operate on clone resource instance 'promotable-rsc:0'
Error performing operation: Invalid parameter
=#=#=#= End test: Try to move an instance of a cloned resource - Invalid parameter (2) =#=#=#=
* Passed: crm_resource   - Try to move an instance of a cloned resource
=#=#=#= Begin test: Query a nonexistent promotable score attribute =#=#=#=
crm_attribute: Error performing operation: No such device or address
=#=#=#= End test: Query a nonexistent promotable score attribute - No such object (105) =#=#=#=
* Passed: crm_attribute  - Query a nonexistent promotable score attribute
=#=#=#= Begin test: Query a nonexistent promotable score attribute (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_attribute -N cluster01 -p promotable-rsc -G --output-as=xml">
  <status code="105" message="No such object">
    <errors>
      <error>crm_attribute: Error performing operation: No such device or address</error>
    </errors>
  </status>
</pacemaker-result>
=#=#=#= End test: Query a nonexistent promotable score attribute (XML) - No such object (105) =#=#=#=
* Passed: crm_attribute  - Query a nonexistent promotable score attribute (XML)
=#=#=#= Begin test: Delete a nonexistent promotable score attribute =#=#=#=
=#=#=#= End test: Delete a nonexistent promotable score attribute - OK (0) =#=#=#=
* Passed: crm_attribute  - Delete a nonexistent promotable score attribute
=#=#=#= Begin test: Delete a nonexistent promotable score attribute (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_attribute -N cluster01 -p promotable-rsc -D --output-as=xml">
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Delete a nonexistent promotable score attribute (XML) - OK (0) =#=#=#=
* Passed: crm_attribute  - Delete a nonexistent promotable score attribute (XML)
=#=#=#= Begin test: Query after deleting a nonexistent promotable score attribute =#=#=#=
crm_attribute: Error performing operation: No such device or address
=#=#=#= End test: Query after deleting a nonexistent promotable score attribute - No such object (105) =#=#=#=
* Passed: crm_attribute  - Query after deleting a nonexistent promotable score attribute
=#=#=#= Begin test: Query after deleting a nonexistent promotable score attribute (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_attribute -N cluster01 -p promotable-rsc -G --output-as=xml">
  <status code="105" message="No such object">
    <errors>
      <error>crm_attribute: Error performing operation: No such device or address</error>
    </errors>
  </status>
</pacemaker-result>
=#=#=#= End test: Query after deleting a nonexistent promotable score attribute (XML) - No such object (105) =#=#=#=
* Passed: crm_attribute  - Query after deleting a nonexistent promotable score attribute (XML)
=#=#=#= Begin test: Update a nonexistent promotable score attribute =#=#=#=
=#=#=#= End test: Update a nonexistent promotable score attribute - OK (0) =#=#=#=
* Passed: crm_attribute  - Update a nonexistent promotable score attribute
=#=#=#= Begin test: Update a nonexistent promotable score attribute (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_attribute -N cluster01 -p promotable-rsc -v 1 --output-as=xml">
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Update a nonexistent promotable score attribute (XML) - OK (0) =#=#=#=
* Passed: crm_attribute  - Update a nonexistent promotable score attribute (XML)
=#=#=#= Begin test: Query after updating a nonexistent promotable score attribute =#=#=#=
scope=status name=master-promotable-rsc value=1
=#=#=#= End test: Query after updating a nonexistent promotable score attribute - OK (0) =#=#=#=
* Passed: crm_attribute  - Query after updating a nonexistent promotable score attribute
=#=#=#= Begin test: Query after updating a nonexistent promotable score attribute (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_attribute -N cluster01 -p promotable-rsc -G --output-as=xml">
  <attribute name="master-promotable-rsc" value="1" scope="status"/>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Query after updating a nonexistent promotable score attribute (XML) - OK (0) =#=#=#=
* Passed: crm_attribute  - Query after updating a nonexistent promotable score attribute (XML)
=#=#=#= Begin test: Update an existing promotable score attribute =#=#=#=
=#=#=#= End test: Update an existing promotable score attribute - OK (0) =#=#=#=
* Passed: crm_attribute  - Update an existing promotable score attribute
=#=#=#= Begin test: Update an existing promotable score attribute (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_attribute -N cluster01 -p promotable-rsc -v 5 --output-as=xml">
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Update an existing promotable score attribute (XML) - OK (0) =#=#=#=
* Passed: crm_attribute  - Update an existing promotable score attribute (XML)
=#=#=#= Begin test: Query after updating an existing promotable score attribute =#=#=#=
scope=status name=master-promotable-rsc value=5
=#=#=#= End test: Query after updating an existing promotable score attribute - OK (0) =#=#=#=
* Passed: crm_attribute  - Query after updating an existing promotable score attribute
=#=#=#= Begin test: Query after updating an existing promotable score attribute (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_attribute -N cluster01 -p promotable-rsc -G --output-as=xml">
  <attribute name="master-promotable-rsc" value="5" scope="status"/>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Query after updating an existing promotable score attribute (XML) - OK (0) =#=#=#=
* Passed: crm_attribute  - Query after updating an existing promotable score attribute (XML)
=#=#=#= Begin test: Delete an existing promotable score attribute =#=#=#=
Deleted status attribute: id=status-1-master-promotable-rsc name=master-promotable-rsc
=#=#=#= End test: Delete an existing promotable score attribute - OK (0) =#=#=#=
* Passed: crm_attribute  - Delete an existing promotable score attribute
=#=#=#= Begin test: Delete an existing promotable score attribute (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_attribute -N cluster01 -p promotable-rsc -D --output-as=xml">
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Delete an existing promotable score attribute (XML) - OK (0) =#=#=#=
* Passed: crm_attribute  - Delete an existing promotable score attribute (XML)
=#=#=#= Begin test: Query after deleting an existing promotable score attribute =#=#=#=
crm_attribute: Error performing operation: No such device or address
=#=#=#= End test: Query after deleting an existing promotable score attribute - No such object (105) =#=#=#=
* Passed: crm_attribute  - Query after deleting an existing promotable score attribute
=#=#=#= Begin test: Query after deleting an existing promotable score attribute (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_attribute -N cluster01 -p promotable-rsc -G --output-as=xml">
  <status code="105" message="No such object">
    <errors>
      <error>crm_attribute: Error performing operation: No such device or address</error>
    </errors>
  </status>
</pacemaker-result>
=#=#=#= End test: Query after deleting an existing promotable score attribute (XML) - No such object (105) =#=#=#=
* Passed: crm_attribute  - Query after deleting an existing promotable score attribute (XML)
=#=#=#= Begin test: Update a promotable score attribute to -INFINITY =#=#=#=
=#=#=#= End test: Update a promotable score attribute to -INFINITY - OK (0) =#=#=#=
* Passed: crm_attribute  - Update a promotable score attribute to -INFINITY
=#=#=#= Begin test: Update a promotable score attribute to -INFINITY (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_attribute -N cluster01 -p -v -INFINITY --output-as=xml">
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Update a promotable score attribute to -INFINITY (XML) - OK (0) =#=#=#=
* Passed: crm_attribute  - Update a promotable score attribute to -INFINITY (XML)
=#=#=#= Begin test: Query after updating a promotable score attribute to -INFINITY =#=#=#=
scope=status name=master-promotable-rsc value=-INFINITY
=#=#=#= End test: Query after updating a promotable score attribute to -INFINITY - OK (0) =#=#=#=
* Passed: crm_attribute  - Query after updating a promotable score attribute to -INFINITY
=#=#=#= Begin test: Query after updating a promotable score attribute to -INFINITY (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_attribute -N cluster01 -p -G --output-as=xml">
  <attribute name="master-promotable-rsc" value="-INFINITY" scope="status"/>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Query after updating a promotable score attribute to -INFINITY (XML) - OK (0) =#=#=#=
* Passed: crm_attribute  - Query after updating a promotable score attribute to -INFINITY (XML)
=#=#=#= Begin test: Try OCF_RESOURCE_INSTANCE if -p is specified with an empty string =#=#=#=
scope=status name=master-promotable-rsc value=-INFINITY
=#=#=#= End test: Try OCF_RESOURCE_INSTANCE if -p is specified with an empty string - OK (0) =#=#=#=
* Passed: crm_attribute  - Try OCF_RESOURCE_INSTANCE if -p is specified with an empty string
=#=#=#= Begin test: Return usage error if both -p and OCF_RESOURCE_INSTANCE are empty strings =#=#=#=
crm_attribute: -p/--promotion must be called from an OCF resource agent or with a resource ID specified
=#=#=#= End test: Return usage error if both -p and OCF_RESOURCE_INSTANCE are empty strings - Incorrect usage (64) =#=#=#=
* Passed: crm_attribute  - Return usage error if both -p and OCF_RESOURCE_INSTANCE are empty strings
=#=#=#= Begin test: Check that CIB_file="-" works - crm_mon =#=#=#=
Cluster Summary:
  * Stack: corosync
  * Current DC: cluster02 (version) - partition with quorum
  * Last updated:
  * Last change:
  * 5 nodes configured
  * 32 resource instances configured (4 DISABLED)

Node List:
  * Online: [ cluster01 cluster02 ]
  * GuestOnline: [ httpd-bundle-0 httpd-bundle-1 ]

Active Resources:
  * Clone Set: ping-clone [ping]:
    * Started: [ cluster01 cluster02 ]
  * Fencing	(stonith:fence_xvm):	 Started cluster01
  * dummy	(ocf:pacemaker:Dummy):	 Started cluster02
  * Container bundle set: httpd-bundle [pcmk:http]:
    * httpd-bundle-0 (192.168.122.131)	(ocf:heartbeat:apache):	 Started cluster01
    * httpd-bundle-1 (192.168.122.132)	(ocf:heartbeat:apache):	 Started cluster02
    * httpd-bundle-2 (192.168.122.133)	(ocf:heartbeat:apache):	 Stopped
  * Resource Group: exim-group:
    * Public-IP	(ocf:heartbeat:IPaddr):	 Started cluster02
    * Email	(lsb:exim):	 Started cluster02
  * Clone Set: mysql-clone-group [mysql-group]:
    * Started: [ cluster01 cluster02 ]
  * Clone Set: promotable-clone [promotable-rsc] (promotable):
    * Promoted: [ cluster02 ]
    * Unpromoted: [ cluster01 ]
=#=#=#= End test: Check that CIB_file="-" works - crm_mon - OK (0) =#=#=#=
* Passed: cat            - Check that CIB_file="-" works - crm_mon
=#=#=#= Begin test: Check that CIB_file="-" works - crm_resource =#=#=#=
<pacemaker-result api-version="X" request="crm_resource --digests -r rsc1 -N node1 --output-as=xml">
  <digests resource="rsc1" node="node1" task="start" interval="0ms">
    <digest type="all" hash="3acdbe4c12734ebeb1251a59545af936">
      <parameters passwd="secret" fake="0"/>
    </digest>
    <digest type="nonprivate" hash="279c477dbc38c621904a00ab9e599b2f">
      <parameters fake="0"/>
    </digest>
    <digest type="nonreloadable" hash="5de1fd72a2e7762ed41543231034f6d7">
      <parameters passwd="secret"/>
    </digest>
  </digests>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Check that CIB_file="-" works - crm_resource - OK (0) =#=#=#=
* Passed: cat            - Check that CIB_file="-" works - crm_resource
=#=#=#= Begin test: Check that CIB_file="-" works - crmadmin =#=#=#=
11
=#=#=#= End test: Check that CIB_file="-" works - crmadmin - OK (0) =#=#=#=
* Passed: cat            - Check that CIB_file="-" works - crmadmin
=#=#=#= Begin test: Get active shadow instance (no active instance) =#=#=#=
crm_shadow: No active shadow configuration defined
=#=#=#= End test: Get active shadow instance (no active instance) - No such object (105) =#=#=#=
* Passed: crm_shadow     - Get active shadow instance (no active instance)
=#=#=#= Begin test: Get active shadow instance (no active instance) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --which --output-as=xml">
  <status code="105" message="No such object">
    <errors>
      <error>crm_shadow: No active shadow configuration defined</error>
    </errors>
  </status>
</pacemaker-result>
=#=#=#= End test: Get active shadow instance (no active instance) (XML) - No such object (105) =#=#=#=
* Passed: crm_shadow     - Get active shadow instance (no active instance) (XML)
=#=#=#= Begin test: Get active shadow instance's file name (no active instance) =#=#=#=
crm_shadow: No active shadow configuration defined
=#=#=#= End test: Get active shadow instance's file name (no active instance) - No such object (105) =#=#=#=
* Passed: crm_shadow     - Get active shadow instance's file name (no active instance)
=#=#=#= Begin test: Get active shadow instance's file name (no active instance) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --file --output-as=xml">
  <status code="105" message="No such object">
    <errors>
      <error>crm_shadow: No active shadow configuration defined</error>
    </errors>
  </status>
</pacemaker-result>
=#=#=#= End test: Get active shadow instance's file name (no active instance) (XML) - No such object (105) =#=#=#=
* Passed: crm_shadow     - Get active shadow instance's file name (no active instance) (XML)
=#=#=#= Begin test: Get active shadow instance's contents (no active instance) =#=#=#=
crm_shadow: No active shadow configuration defined
=#=#=#= End test: Get active shadow instance's contents (no active instance) - No such object (105) =#=#=#=
* Passed: crm_shadow     - Get active shadow instance's contents (no active instance)
=#=#=#= Begin test: Get active shadow instance's contents (no active instance) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --display --output-as=xml">
  <status code="105" message="No such object">
    <errors>
      <error>crm_shadow: No active shadow configuration defined</error>
    </errors>
  </status>
</pacemaker-result>
=#=#=#= End test: Get active shadow instance's contents (no active instance) (XML) - No such object (105) =#=#=#=
* Passed: crm_shadow     - Get active shadow instance's contents (no active instance) (XML)
=#=#=#= Begin test: Get active shadow instance's diff (no active instance) =#=#=#=
crm_shadow: No active shadow configuration defined
=#=#=#= End test: Get active shadow instance's diff (no active instance) - No such object (105) =#=#=#=
* Passed: crm_shadow     - Get active shadow instance's diff (no active instance)
=#=#=#= Begin test: Get active shadow instance's diff (no active instance) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --diff --output-as=xml">
  <status code="105" message="No such object">
    <errors>
      <error>crm_shadow: No active shadow configuration defined</error>
    </errors>
  </status>
</pacemaker-result>
=#=#=#= End test: Get active shadow instance's diff (no active instance) (XML) - No such object (105) =#=#=#=
* Passed: crm_shadow     - Get active shadow instance's diff (no active instance) (XML)
=#=#=#= Begin test: Create copied shadow instance =#=#=#=
A new shadow instance was created. To begin using it, enter the following into your shell:
	export CIB_shadow=cts-cli
=#=#=#= End test: Create copied shadow instance - OK (0) =#=#=#=
* Passed: crm_shadow     - Create copied shadow instance
=#=#=#= Begin test: Create copied shadow instance (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --create cts-cli --batch --output-as=xml">
  <instruction>A new shadow instance was created. To begin using it, enter the following into your shell:
	export CIB_shadow=cts-cli</instruction>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Create copied shadow instance (XML) - OK (0) =#=#=#=
* Passed: crm_shadow     - Create copied shadow instance (XML)
=#=#=#= Begin test: Get active shadow instance (copied) =#=#=#=
cts-cli
=#=#=#= End test: Get active shadow instance (copied) - OK (0) =#=#=#=
* Passed: crm_shadow     - Get active shadow instance (copied)
=#=#=#= Begin test: Get active shadow instance (copied) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --which --output-as=xml">
  <shadow instance="cts-cli"/>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Get active shadow instance (copied) (XML) - OK (0) =#=#=#=
* Passed: crm_shadow     - Get active shadow instance (copied) (XML)
=#=#=#= Begin test: Get active shadow instance's file name (copied) =#=#=#=
/tmp/cts-cli.shadow/shadow.cts-cli
=#=#=#= End test: Get active shadow instance's file name (copied) - OK (0) =#=#=#=
* Passed: crm_shadow     - Get active shadow instance's file name (copied)
=#=#=#= Begin test: Get active shadow instance's file name (copied) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --file --output-as=xml">
  <shadow instance="cts-cli" file="/tmp/cts-cli.shadow/shadow.cts-cli"/>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Get active shadow instance's file name (copied) (XML) - OK (0) =#=#=#=
* Passed: crm_shadow     - Get active shadow instance's file name (copied) (XML)
=#=#=#= Begin test: Get active shadow instance's contents (copied) =#=#=#=
<cib epoch="1" num_updates="173" admin_epoch="1" update-origin="cluster01" update-client="crmd" update-user="hacluster" have-quorum="1" dc-uuid="2">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-have-watchdog" name="have-watchdog" value="false"/>
        <nvpair id="cib-bootstrap-options-dc-version" name="dc-version" value="2.0.4-1.e97f9675f.git.el7-e97f9675f"/>
        <nvpair id="cib-bootstrap-options-cluster-infrastructure" name="cluster-infrastructure" value="corosync"/>
        <nvpair id="cib-bootstrap-options-cluster-name" name="cluster-name" value="test-cluster"/>
        <nvpair id="cib-bootstrap-options-stonith-enabled" name="stonith-enabled" value="true"/>
        <nvpair id="cib-bootstrap-options-maintenance-mode" name="maintenance-mode" value="false"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="1" uname="cluster01">
        <instance_attributes id="nodes-1">
          <nvpair id="nodes-1-location" name="location" value="office"/>
        </instance_attributes>
      </node>
      <node id="2" uname="cluster02"/>
    </nodes>
    <resources>
      <clone id="ping-clone">
        <primitive class="ocf" id="ping" provider="pacemaker" type="ping">
          <instance_attributes id="ping-instance_attributes">
            <nvpair id="ping-instance_attributes-dampen" name="dampen" value="5s"/>
            <nvpair id="ping-instance_attributes-host_list" name="host_list" value="192.168.122.1"/>
            <nvpair id="ping-instance_attributes-multiplier" name="multiplier" value="1000"/>
          </instance_attributes>
          <operations>
            <op id="ping-monitor-interval-10s" interval="10s" name="monitor" timeout="60s"/>
            <op id="ping-start-interval-0s" interval="0s" name="start" timeout="60s"/>
            <op id="ping-stop-interval-0s" interval="0s" name="stop" timeout="20s"/>
          </operations>
        </primitive>
      </clone>
      <primitive class="stonith" id="Fencing" type="fence_xvm">
        <instance_attributes id="Fencing-instance_attributes">
          <nvpair id="Fencing-instance_attributes-ip_family" name="ip_family" value="ipv4"/>
        </instance_attributes>
        <operations>
          <op id="Fencing-monitor-interval-60s" interval="60s" name="monitor"/>
        </operations>
      </primitive>
      <primitive class="ocf" id="dummy" provider="pacemaker" type="Dummy">
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-op_sleep" name="op_sleep" value="6"/>
        </instance_attributes>
        <operations>
          <op id="dummy-migrate_from-interval-0s" interval="0s" name="migrate_from" timeout="20s"/>
          <op id="dummy-migrate_to-interval-0s" interval="0s" name="migrate_to" timeout="20s"/>
          <op id="dummy-monitor-interval-60s" interval="60s" name="monitor" on-fail="stop"/>
          <op id="dummy-reload-interval-0s" interval="0s" name="reload" timeout="20s"/>
          <op id="dummy-start-interval-0s" interval="0s" name="start" timeout="20s"/>
          <op id="dummy-stop-interval-0s" interval="0s" name="stop" timeout="20s"/>
        </operations>
      </primitive>
      <clone id="inactive-clone">
        <meta_attributes id="inactive-clone-meta_attributes">
          <nvpair id="inactive-clone-meta_attributes-target-role" name="target-role" value="stopped"/>
        </meta_attributes>
        <primitive id="inactive-dhcpd" class="lsb" type="dhcpd"/>
      </clone>
      <group id="inactive-group">
        <meta_attributes id="inactive-group-meta_attributes">
          <nvpair id="inactive-group-meta_attributes-target-role" name="target-role" value="stopped"/>
        </meta_attributes>
        <primitive class="ocf" id="inactive-dummy-1" provider="pacemaker" type="Dummy"/>
        <primitive class="ocf" id="inactive-dummy-2" provider="pacemaker" type="Dummy"/>
      </group>
      <bundle id="httpd-bundle">
        <docker image="pcmk:http" replicas="3"/>
        <network ip-range-start="192.168.122.131" host-netmask="24" host-interface="eth0">
          <port-mapping id="httpd-port" port="80"/>
        </network>
        <storage>
          <storage-mapping id="httpd-syslog" source-dir="/dev/log" target-dir="/dev/log" options="rw"/>
          <storage-mapping id="httpd-root" source-dir="/srv/html" target-dir="/var/www/html" options="rw"/>
          <storage-mapping id="httpd-logs" source-dir-root="/var/log/pacemaker/bundles" target-dir="/etc/httpd/logs" options="rw"/>
        </storage>
        <primitive class="ocf" id="httpd" provider="heartbeat" type="apache"/>
        <meta_attributes id="bundle-meta_attributes">
          <nvpair id="bundle-meta_attributes-target-role" name="target-role" value="Started"/>
        </meta_attributes>
      </bundle>
      <group id="exim-group">
        <primitive id="Public-IP" class="ocf" type="IPaddr" provider="heartbeat">
          <instance_attributes id="params-public-ip">
            <nvpair id="public-ip-addr" name="ip" value="192.168.1.1"/>
          </instance_attributes>
        </primitive>
        <primitive id="Email" class="lsb" type="exim"/>
      </group>
      <clone id="mysql-clone-group">
        <group id="mysql-group">
          <primitive id="mysql-proxy" class="lsb" type="mysql-proxy">
            <operations>
              <op name="monitor" interval="10s" id="mysql-proxy_mon" timeout="20s"/>
            </operations>
          </primitive>
        </group>
      </clone>
      <clone id="promotable-clone">
        <meta_attributes id="promotable-clone-meta_attributes">
          <nvpair id="promotable-clone-meta_attributes-promotable" name="promotable" value="true"/>
        </meta_attributes>
        <primitive id="promotable-rsc" class="ocf" provider="pacemaker" type="Stateful" description="test_description">
          <operations id="promotable-rsc-operations">
            <op id="promotable-rsc-monitor-promoted-5" name="monitor" interval="5" role="Promoted"/>
            <op id="promotable-rsc-monitor-unpromoted-10" name="monitor" interval="10" role="Unpromoted"/>
          </operations>
        </primitive>
      </clone>
    </resources>
    <constraints>
      <rsc_location id="not-on-cluster1" rsc="dummy" node="cluster01" score="-INFINITY"/>
      <rsc_location id="loc-promotable-clone" rsc="promotable-clone">
        <rule id="loc-promotable-clone-rule" role="Promoted" score="10">
          <expression attribute="#uname" id="loc-promotable-clone-expression" operation="eq" value="cluster02"/>
        </rule>
      </rsc_location>
    </constraints>
    <tags>
      <tag id="all-nodes">
        <obj_ref id="1"/>
        <obj_ref id="2"/>
      </tag>
      <tag id="even-nodes">
        <obj_ref id="2"/>
      </tag>
      <tag id="odd-nodes">
        <obj_ref id="1"/>
      </tag>
      <tag id="inactive-rscs">
        <obj_ref id="inactive-group"/>
        <obj_ref id="inactive-clone"/>
      </tag>
      <tag id="fencing-rscs">
        <obj_ref id="Fencing"/>
      </tag>
    </tags>
    <op_defaults>
      <meta_attributes id="op_defaults-options">
        <nvpair id="op_defaults-options-timeout" name="timeout" value="5s"/>
      </meta_attributes>
    </op_defaults>
  </configuration>
  <status>
    <node_state id="2" uname="cluster02" in_ccm="true" crmd="online" crm-debug-origin="do_update_resource" join="member" expected="member">
      <lrm id="2">
        <lrm_resources>
          <lrm_resource id="ping" type="ping" class="ocf" provider="pacemaker">
            <lrm_rsc_op id="ping_last_0" operation_key="ping_start_0" operation="start" crm-debug-origin="do_update_resource" transition-key="9:0:0:4a9e64d6-e1dd-4395-917c-1596312eafe4" transition-magic="0:0;9:0:0:4a9e64d6-e1dd-4395-917c-1596312eafe4" exit-reason="" on_node="cluster02" call-id="11" rc-code="0" op-status="0" interval="0" exec-time="2044" queue-time="0" op-digest="769dd6f95f1494d416ae9dc690960e17"/>
            <lrm_rsc_op id="ping_monitor_10000" operation_key="ping_monitor_10000" operation="monitor" crm-debug-origin="do_update_resource" transition-key="10:0:0:4a9e64d6-e1dd-4395-917c-1596312eafe4" transition-magic="0:0;10:0:0:4a9e64d6-e1dd-4395-917c-1596312eafe4" exit-reason="" on_node="cluster02" call-id="12" rc-code="0" op-status="0" interval="10000" exec-time="2031" queue-time="0" op-digest="7beffd8be749b787fabea4aef5df21c9"/>
          </lrm_resource>
          <lrm_resource id="Fencing" type="fence_xvm" class="stonith">
            <lrm_rsc_op id="Fencing_last_0" operation_key="Fencing_monitor_0" operation="monitor" crm-debug-origin="do_update_resource" transition-key="5:0:7:4a9e64d6-e1dd-4395-917c-1596312eafe4" transition-magic="0:7;5:0:7:4a9e64d6-e1dd-4395-917c-1596312eafe4" exit-reason="" on_node="cluster02" call-id="10" rc-code="7" op-status="0" interval="0" exec-time="3" queue-time="0" op-digest="7da16842ab2328e41f737cab5e5fc89c"/>
          </lrm_resource>
          <lrm_resource id="dummy" type="Dummy" class="ocf" provider="pacemaker">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="do_update_resource" transition-key="14:1:0:4a9e64d6-e1dd-4395-917c-1596312eafe4" transition-magic="0:0;14:1:0:4a9e64d6-e1dd-4395-917c-1596312eafe4" exit-reason="" on_node="cluster02" call-id="18" rc-code="0" op-status="0" interval="0" exec-time="6020" queue-time="0" op-digest="aa0f9b7caf28600646551adb55bd9b95" op-force-restart=" envfile  op_sleep  passwd  state " op-restart-digest="aa0f9b7caf28600646551adb55bd9b95" op-secure-params=" passwd " op-secure-digest="aa0f9b7caf28600646551adb55bd9b95"/>
            <lrm_rsc_op id="dummy_monitor_60000" operation_key="dummy_monitor_60000" operation="monitor" crm-debug-origin="do_update_resource" transition-key="16:2:0:4a9e64d6-e1dd-4395-917c-1596312eafe4" transition-magic="0:0;16:2:0:4a9e64d6-e1dd-4395-917c-1596312eafe4" exit-reason="" on_node="cluster02" call-id="19" rc-code="0" op-status="0" interval="60000" exec-time="6015" queue-time="0" op-digest="ccfee4afbb0618907016c9bef210b8b6" op-secure-params=" passwd " op-secure-digest="aa0f9b7caf28600646551adb55bd9b95"/>
          </lrm_resource>
          <lrm_resource id="Public-IP" class="ocf" provider="heartbeat" type="IPaddr">
            <lrm_rsc_op id="Public-IP_last_0" operation_key="Public-IP_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="3bb21cd55b79809a3ae69333a8981fd4"/>
          </lrm_resource>
          <lrm_resource id="Email" class="lsb" type="exim">
            <lrm_rsc_op id="Email_last_0" operation_key="Email_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
          <lrm_resource id="mysql-proxy" class="lsb" type="mysql-proxy">
            <lrm_rsc_op id="mysql-proxy_last_0" operation_key="mysql-proxy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
            <lrm_rsc_op id="mysql-proxy_monitor_10000" operation_key="mysql-proxy_monitor_10000" operation="monitor" crm-debug-origin="crm_simulate" transition-key="3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="3" rc-code="0" op-status="0" interval="10000" exec-time="0" queue-time="0" op-digest="4811cef7f7f94e3a35a70be7916cb2fd"/>
          </lrm_resource>
          <lrm_resource id="promotable-rsc" class="ocf" provider="pacemaker" type="Stateful">
            <lrm_rsc_op id="promotable-rsc_last_0" operation_key="promotable-rsc_promote_0" operation="promote" crm-debug-origin="crm_simulate" transition-key="6:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;6:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="6" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
            <lrm_rsc_op id="promotable-rsc_post_notify_start_0" operation_key="promotable-rsc_notify_0" operation="notify" crm-debug-origin="crm_simulate" transition-key="3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="3" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
            <lrm_rsc_op id="promotable-rsc_monitor_10000" operation_key="promotable-rsc_monitor_10000" operation="monitor" crm-debug-origin="crm_simulate" transition-key="4:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;4:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="4" rc-code="0" op-status="0" interval="10000" exec-time="0" queue-time="0" op-digest="79643b49fcd2a15282788271c56eddb4"/>
            <lrm_rsc_op id="promotable-rsc_cancel_10000" operation_key="promotable-rsc_cancel_10000" operation="cancel" crm-debug-origin="crm_simulate" transition-key="5:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;5:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="5" rc-code="0" op-status="0" interval="10000" exec-time="0" queue-time="0" op-digest="79643b49fcd2a15282788271c56eddb4"/>
            <lrm_rsc_op id="promotable-rsc_monitor_5000" operation_key="promotable-rsc_monitor_5000" operation="monitor" crm-debug-origin="crm_simulate" transition-key="7:-1:8:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:8;7:-1:8:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="7" rc-code="8" op-status="0" interval="5000" exec-time="0" queue-time="0" op-digest="79643b49fcd2a15282788271c56eddb4"/>
          </lrm_resource>
          <lrm_resource id="inactive-dhcpd" class="lsb" type="dhcpd">
            <lrm_rsc_op id="inactive-dhcpd_last_0" operation_key="inactive-dhcpd_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
          <lrm_resource id="inactive-dummy-1" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="inactive-dummy-1_last_0" operation_key="inactive-dummy-1_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
          <lrm_resource id="inactive-dummy-2" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="inactive-dummy-2_last_0" operation_key="inactive-dummy-2_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
          <lrm_resource id="httpd-bundle-ip-192.168.122.131" class="ocf" provider="heartbeat" type="IPaddr2">
            <lrm_rsc_op id="httpd-bundle-ip-192.168.122.131_last_0" operation_key="httpd-bundle-ip-192.168.122.131_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="8656419d4ed26465c724189832393477"/>
          </lrm_resource>
          <lrm_resource id="httpd-bundle-docker-0" class="ocf" provider="heartbeat" type="docker">
            <lrm_rsc_op id="httpd-bundle-docker-0_last_0" operation_key="httpd-bundle-docker-0_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="02a1a0b2dfa1cade1893713b56939c55"/>
          </lrm_resource>
          <lrm_resource id="httpd-bundle-ip-192.168.122.132" class="ocf" provider="heartbeat" type="IPaddr2">
            <lrm_rsc_op id="httpd-bundle-ip-192.168.122.132_last_0" operation_key="httpd-bundle-ip-192.168.122.132_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="c3d96a2922c2946905f760df9a177cd1"/>
            <lrm_rsc_op id="httpd-bundle-ip-192.168.122.132_monitor_60000" operation_key="httpd-bundle-ip-192.168.122.132_monitor_60000" operation="monitor" crm-debug-origin="crm_simulate" transition-key="3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="3" rc-code="0" op-status="0" interval="60000" exec-time="0" queue-time="0" op-digest="547dff7d7a9d7448dd07cde35966f08a"/>
          </lrm_resource>
          <lrm_resource id="httpd-bundle-docker-1" class="ocf" provider="heartbeat" type="docker">
            <lrm_rsc_op id="httpd-bundle-docker-1_last_0" operation_key="httpd-bundle-docker-1_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="2edb33b196e2261c6b3e30ce579e0590"/>
            <lrm_rsc_op id="httpd-bundle-docker-1_monitor_60000" operation_key="httpd-bundle-docker-1_monitor_60000" operation="monitor" crm-debug-origin="crm_simulate" transition-key="3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="3" rc-code="0" op-status="0" interval="60000" exec-time="0" queue-time="0" op-digest="1ed1cced876b80101858caac9836e113"/>
          </lrm_resource>
          <lrm_resource id="httpd-bundle-ip-192.168.122.133" class="ocf" provider="heartbeat" type="IPaddr2">
            <lrm_rsc_op id="httpd-bundle-ip-192.168.122.133_last_0" operation_key="httpd-bundle-ip-192.168.122.133_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f318115a675fd430c293a0dc2705f398"/>
          </lrm_resource>
          <lrm_resource id="httpd-bundle-docker-2" class="ocf" provider="heartbeat" type="docker">
            <lrm_rsc_op id="httpd-bundle-docker-2_last_0" operation_key="httpd-bundle-docker-2_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="6680384ac1363763d9d5cca296be0b2d"/>
          </lrm_resource>
          <lrm_resource id="httpd-bundle-0" class="ocf" provider="pacemaker" type="remote">
            <lrm_rsc_op id="httpd-bundle-0_last_0" operation_key="httpd-bundle-0_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="c535429017a9ee0785106fbef2858a41"/>
          </lrm_resource>
          <lrm_resource id="httpd-bundle-1" class="ocf" provider="pacemaker" type="remote">
            <lrm_rsc_op id="httpd-bundle-1_last_0" operation_key="httpd-bundle-1_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="791bcda8f6693465cc318cba5302a8df"/>
            <lrm_rsc_op id="httpd-bundle-1_monitor_30000" operation_key="httpd-bundle-1_monitor_30000" operation="monitor" crm-debug-origin="crm_simulate" transition-key="3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="3" rc-code="0" op-status="0" interval="30000" exec-time="0" queue-time="0" op-digest="7592cb10fa1499772a031adfd385f558"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
      <transient_attributes id="2">
        <instance_attributes id="status-2">
          <nvpair id="status-2-pingd" name="pingd" value="1000"/>
        </instance_attributes>
      </transient_attributes>
    </node_state>
    <node_state id="1" uname="cluster01" in_ccm="true" crmd="online" crm-debug-origin="do_update_resource" join="member" expected="member">
      <lrm id="1">
        <lrm_resources>
          <lrm_resource id="ping" type="ping" class="ocf" provider="pacemaker">
            <lrm_rsc_op id="ping_last_0" operation_key="ping_start_0" operation="start" crm-debug-origin="do_update_resource" transition-key="6:1:0:4a9e64d6-e1dd-4395-917c-1596312eafe4" transition-magic="0:0;6:1:0:4a9e64d6-e1dd-4395-917c-1596312eafe4" exit-reason="" on_node="cluster01" call-id="17" rc-code="0" op-status="0" interval="0" exec-time="2038" queue-time="0" op-digest="769dd6f95f1494d416ae9dc690960e17"/>
            <lrm_rsc_op id="ping_monitor_10000" operation_key="ping_monitor_10000" operation="monitor" crm-debug-origin="do_update_resource" transition-key="7:1:0:4a9e64d6-e1dd-4395-917c-1596312eafe4" transition-magic="0:0;7:1:0:4a9e64d6-e1dd-4395-917c-1596312eafe4" exit-reason="" on_node="cluster01" call-id="18" rc-code="0" op-status="0" interval="10000" exec-time="2034" queue-time="0" op-digest="7beffd8be749b787fabea4aef5df21c9"/>
          </lrm_resource>
          <lrm_resource id="Fencing" type="fence_xvm" class="stonith">
            <lrm_rsc_op id="Fencing_last_0" operation_key="Fencing_start_0" operation="start" crm-debug-origin="do_update_resource" transition-key="12:1:0:4a9e64d6-e1dd-4395-917c-1596312eafe4" transition-magic="0:0;12:1:0:4a9e64d6-e1dd-4395-917c-1596312eafe4" exit-reason="" on_node="cluster01" call-id="15" rc-code="0" op-status="0" interval="0" exec-time="36" queue-time="0" op-digest="7da16842ab2328e41f737cab5e5fc89c"/>
            <lrm_rsc_op id="Fencing_monitor_60000" operation_key="Fencing_monitor_60000" operation="monitor" crm-debug-origin="crm_simulate" transition-key="20:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;20:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" on_node="cluster01" call-id="20" rc-code="0" op-status="0" interval="60000" exec-time="0" queue-time="0" op-digest="d4ee02dc1c7ce16eb0f72e06c2cc9193"/>
          </lrm_resource>
          <lrm_resource id="dummy" type="Dummy" class="ocf" provider="pacemaker">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_stop_0" operation="stop" crm-debug-origin="do_update_resource" transition-key="3:1:0:4a9e64d6-e1dd-4395-917c-1596312eafe4" transition-magic="0:0;3:1:0:4a9e64d6-e1dd-4395-917c-1596312eafe4" exit-reason="" on_node="cluster01" call-id="16" rc-code="0" op-status="0" interval="0" exec-time="6048" queue-time="0" op-digest="aa0f9b7caf28600646551adb55bd9b95" op-force-restart=" envfile  op_sleep  passwd  state " op-restart-digest="aa0f9b7caf28600646551adb55bd9b95" op-secure-params=" passwd " op-secure-digest="aa0f9b7caf28600646551adb55bd9b95"/>
          </lrm_resource>
          <lrm_resource id="Public-IP" class="ocf" provider="heartbeat" type="IPaddr">
            <lrm_rsc_op id="Public-IP_last_0" operation_key="Public-IP_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="3bb21cd55b79809a3ae69333a8981fd4"/>
          </lrm_resource>
          <lrm_resource id="Email" class="lsb" type="exim">
            <lrm_rsc_op id="Email_last_0" operation_key="Email_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
          <lrm_resource id="mysql-proxy" class="lsb" type="mysql-proxy">
            <lrm_rsc_op id="mysql-proxy_last_0" operation_key="mysql-proxy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
            <lrm_rsc_op id="mysql-proxy_monitor_10000" operation_key="mysql-proxy_monitor_10000" operation="monitor" crm-debug-origin="crm_simulate" transition-key="3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="3" rc-code="0" op-status="0" interval="10000" exec-time="0" queue-time="0" op-digest="4811cef7f7f94e3a35a70be7916cb2fd"/>
          </lrm_resource>
          <lrm_resource id="promotable-rsc" class="ocf" provider="pacemaker" type="Stateful">
            <lrm_rsc_op id="promotable-rsc_last_0" operation_key="promotable-rsc_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
            <lrm_rsc_op id="promotable-rsc_post_notify_start_0" operation_key="promotable-rsc_notify_0" operation="notify" crm-debug-origin="crm_simulate" transition-key="3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="3" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
            <lrm_rsc_op id="promotable-rsc_monitor_10000" operation_key="promotable-rsc_monitor_10000" operation="monitor" crm-debug-origin="crm_simulate" transition-key="4:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;4:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="4" rc-code="0" op-status="0" interval="10000" exec-time="0" queue-time="0" op-digest="79643b49fcd2a15282788271c56eddb4"/>
          </lrm_resource>
          <lrm_resource id="inactive-dhcpd" class="lsb" type="dhcpd">
            <lrm_rsc_op id="inactive-dhcpd_last_0" operation_key="inactive-dhcpd_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
          <lrm_resource id="inactive-dummy-1" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="inactive-dummy-1_last_0" operation_key="inactive-dummy-1_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
          <lrm_resource id="inactive-dummy-2" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="inactive-dummy-2_last_0" operation_key="inactive-dummy-2_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
          <lrm_resource id="httpd-bundle-ip-192.168.122.131" class="ocf" provider="heartbeat" type="IPaddr2">
            <lrm_rsc_op id="httpd-bundle-ip-192.168.122.131_last_0" operation_key="httpd-bundle-ip-192.168.122.131_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="8656419d4ed26465c724189832393477"/>
            <lrm_rsc_op id="httpd-bundle-ip-192.168.122.131_monitor_60000" operation_key="httpd-bundle-ip-192.168.122.131_monitor_60000" operation="monitor" crm-debug-origin="crm_simulate" transition-key="3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="3" rc-code="0" op-status="0" interval="60000" exec-time="0" queue-time="0" op-digest="dfb531456299aa7b527d4e57805703da"/>
          </lrm_resource>
          <lrm_resource id="httpd-bundle-docker-0" class="ocf" provider="heartbeat" type="docker">
            <lrm_rsc_op id="httpd-bundle-docker-0_last_0" operation_key="httpd-bundle-docker-0_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="02a1a0b2dfa1cade1893713b56939c55"/>
            <lrm_rsc_op id="httpd-bundle-docker-0_monitor_60000" operation_key="httpd-bundle-docker-0_monitor_60000" operation="monitor" crm-debug-origin="crm_simulate" transition-key="3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="3" rc-code="0" op-status="0" interval="60000" exec-time="0" queue-time="0" op-digest="377a66c466df6e6edf98a6e83cff9c22"/>
          </lrm_resource>
          <lrm_resource id="httpd-bundle-ip-192.168.122.132" class="ocf" provider="heartbeat" type="IPaddr2">
            <lrm_rsc_op id="httpd-bundle-ip-192.168.122.132_last_0" operation_key="httpd-bundle-ip-192.168.122.132_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="c3d96a2922c2946905f760df9a177cd1"/>
          </lrm_resource>
          <lrm_resource id="httpd-bundle-docker-1" class="ocf" provider="heartbeat" type="docker">
            <lrm_rsc_op id="httpd-bundle-docker-1_last_0" operation_key="httpd-bundle-docker-1_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="2edb33b196e2261c6b3e30ce579e0590"/>
          </lrm_resource>
          <lrm_resource id="httpd-bundle-ip-192.168.122.133" class="ocf" provider="heartbeat" type="IPaddr2">
            <lrm_rsc_op id="httpd-bundle-ip-192.168.122.133_last_0" operation_key="httpd-bundle-ip-192.168.122.133_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f318115a675fd430c293a0dc2705f398"/>
          </lrm_resource>
          <lrm_resource id="httpd-bundle-docker-2" class="ocf" provider="heartbeat" type="docker">
            <lrm_rsc_op id="httpd-bundle-docker-2_last_0" operation_key="httpd-bundle-docker-2_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="6680384ac1363763d9d5cca296be0b2d"/>
          </lrm_resource>
          <lrm_resource id="httpd-bundle-0" class="ocf" provider="pacemaker" type="remote">
            <lrm_rsc_op id="httpd-bundle-0_last_0" operation_key="httpd-bundle-0_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="c535429017a9ee0785106fbef2858a41"/>
            <lrm_rsc_op id="httpd-bundle-0_monitor_30000" operation_key="httpd-bundle-0_monitor_30000" operation="monitor" crm-debug-origin="crm_simulate" transition-key="3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="3" rc-code="0" op-status="0" interval="30000" exec-time="0" queue-time="0" op-digest="6d63e20548871f169e287d33f3711637"/>
          </lrm_resource>
          <lrm_resource id="httpd-bundle-1" class="ocf" provider="pacemaker" type="remote">
            <lrm_rsc_op id="httpd-bundle-1_last_0" operation_key="httpd-bundle-1_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="791bcda8f6693465cc318cba5302a8df"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
      <transient_attributes id="1">
        <instance_attributes id="status-1">
          <nvpair id="status-1-pingd" name="pingd" value="1000"/>
        </instance_attributes>
      </transient_attributes>
    </node_state>
    <node_state id="httpd-bundle-0" uname="httpd-bundle-0">
      <lrm id="httpd-bundle-0">
        <lrm_resources>
          <lrm_resource id="httpd" class="ocf" provider="heartbeat" type="apache">
            <lrm_rsc_op id="httpd_last_0" operation_key="httpd_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="1:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;1:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <node_state id="httpd-bundle-1" uname="httpd-bundle-1">
      <lrm id="httpd-bundle-1">
        <lrm_resources>
          <lrm_resource id="httpd" class="ocf" provider="heartbeat" type="apache">
            <lrm_rsc_op id="httpd_last_0" operation_key="httpd_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="1:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;1:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
  </status>
</cib>
=#=#=#= End test: Get active shadow instance's contents (copied) - OK (0) =#=#=#=
* Passed: crm_shadow     - Get active shadow instance's contents (copied)
=#=#=#= Begin test: Get active shadow instance's contents (copied) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --display --output-as=xml">
  <shadow instance="cts-cli">
    <content><![CDATA[<cib epoch="1" num_updates="173" admin_epoch="1" update-origin="cluster01" update-client="crmd" update-user="hacluster" have-quorum="1" dc-uuid="2">
  <configuration>
    <crm_config>
      <cluster_property_set id="cib-bootstrap-options">
        <nvpair id="cib-bootstrap-options-have-watchdog" name="have-watchdog" value="false"/>
        <nvpair id="cib-bootstrap-options-dc-version" name="dc-version" value="2.0.4-1.e97f9675f.git.el7-e97f9675f"/>
        <nvpair id="cib-bootstrap-options-cluster-infrastructure" name="cluster-infrastructure" value="corosync"/>
        <nvpair id="cib-bootstrap-options-cluster-name" name="cluster-name" value="test-cluster"/>
        <nvpair id="cib-bootstrap-options-stonith-enabled" name="stonith-enabled" value="true"/>
        <nvpair id="cib-bootstrap-options-maintenance-mode" name="maintenance-mode" value="false"/>
      </cluster_property_set>
    </crm_config>
    <nodes>
      <node id="1" uname="cluster01">
        <instance_attributes id="nodes-1">
          <nvpair id="nodes-1-location" name="location" value="office"/>
        </instance_attributes>
      </node>
      <node id="2" uname="cluster02"/>
    </nodes>
    <resources>
      <clone id="ping-clone">
        <primitive class="ocf" id="ping" provider="pacemaker" type="ping">
          <instance_attributes id="ping-instance_attributes">
            <nvpair id="ping-instance_attributes-dampen" name="dampen" value="5s"/>
            <nvpair id="ping-instance_attributes-host_list" name="host_list" value="192.168.122.1"/>
            <nvpair id="ping-instance_attributes-multiplier" name="multiplier" value="1000"/>
          </instance_attributes>
          <operations>
            <op id="ping-monitor-interval-10s" interval="10s" name="monitor" timeout="60s"/>
            <op id="ping-start-interval-0s" interval="0s" name="start" timeout="60s"/>
            <op id="ping-stop-interval-0s" interval="0s" name="stop" timeout="20s"/>
          </operations>
        </primitive>
      </clone>
      <primitive class="stonith" id="Fencing" type="fence_xvm">
        <instance_attributes id="Fencing-instance_attributes">
          <nvpair id="Fencing-instance_attributes-ip_family" name="ip_family" value="ipv4"/>
        </instance_attributes>
        <operations>
          <op id="Fencing-monitor-interval-60s" interval="60s" name="monitor"/>
        </operations>
      </primitive>
      <primitive class="ocf" id="dummy" provider="pacemaker" type="Dummy">
        <instance_attributes id="dummy-instance_attributes">
          <nvpair id="dummy-instance_attributes-op_sleep" name="op_sleep" value="6"/>
        </instance_attributes>
        <operations>
          <op id="dummy-migrate_from-interval-0s" interval="0s" name="migrate_from" timeout="20s"/>
          <op id="dummy-migrate_to-interval-0s" interval="0s" name="migrate_to" timeout="20s"/>
          <op id="dummy-monitor-interval-60s" interval="60s" name="monitor" on-fail="stop"/>
          <op id="dummy-reload-interval-0s" interval="0s" name="reload" timeout="20s"/>
          <op id="dummy-start-interval-0s" interval="0s" name="start" timeout="20s"/>
          <op id="dummy-stop-interval-0s" interval="0s" name="stop" timeout="20s"/>
        </operations>
      </primitive>
      <clone id="inactive-clone">
        <meta_attributes id="inactive-clone-meta_attributes">
          <nvpair id="inactive-clone-meta_attributes-target-role" name="target-role" value="stopped"/>
        </meta_attributes>
        <primitive id="inactive-dhcpd" class="lsb" type="dhcpd"/>
      </clone>
      <group id="inactive-group">
        <meta_attributes id="inactive-group-meta_attributes">
          <nvpair id="inactive-group-meta_attributes-target-role" name="target-role" value="stopped"/>
        </meta_attributes>
        <primitive class="ocf" id="inactive-dummy-1" provider="pacemaker" type="Dummy"/>
        <primitive class="ocf" id="inactive-dummy-2" provider="pacemaker" type="Dummy"/>
      </group>
      <bundle id="httpd-bundle">
        <docker image="pcmk:http" replicas="3"/>
        <network ip-range-start="192.168.122.131" host-netmask="24" host-interface="eth0">
          <port-mapping id="httpd-port" port="80"/>
        </network>
        <storage>
          <storage-mapping id="httpd-syslog" source-dir="/dev/log" target-dir="/dev/log" options="rw"/>
          <storage-mapping id="httpd-root" source-dir="/srv/html" target-dir="/var/www/html" options="rw"/>
          <storage-mapping id="httpd-logs" source-dir-root="/var/log/pacemaker/bundles" target-dir="/etc/httpd/logs" options="rw"/>
        </storage>
        <primitive class="ocf" id="httpd" provider="heartbeat" type="apache"/>
        <meta_attributes id="bundle-meta_attributes">
          <nvpair id="bundle-meta_attributes-target-role" name="target-role" value="Started"/>
        </meta_attributes>
      </bundle>
      <group id="exim-group">
        <primitive id="Public-IP" class="ocf" type="IPaddr" provider="heartbeat">
          <instance_attributes id="params-public-ip">
            <nvpair id="public-ip-addr" name="ip" value="192.168.1.1"/>
          </instance_attributes>
        </primitive>
        <primitive id="Email" class="lsb" type="exim"/>
      </group>
      <clone id="mysql-clone-group">
        <group id="mysql-group">
          <primitive id="mysql-proxy" class="lsb" type="mysql-proxy">
            <operations>
              <op name="monitor" interval="10s" id="mysql-proxy_mon" timeout="20s"/>
            </operations>
          </primitive>
        </group>
      </clone>
      <clone id="promotable-clone">
        <meta_attributes id="promotable-clone-meta_attributes">
          <nvpair id="promotable-clone-meta_attributes-promotable" name="promotable" value="true"/>
        </meta_attributes>
        <primitive id="promotable-rsc" class="ocf" provider="pacemaker" type="Stateful" description="test_description">
          <operations id="promotable-rsc-operations">
            <op id="promotable-rsc-monitor-promoted-5" name="monitor" interval="5" role="Promoted"/>
            <op id="promotable-rsc-monitor-unpromoted-10" name="monitor" interval="10" role="Unpromoted"/>
          </operations>
        </primitive>
      </clone>
    </resources>
    <constraints>
      <rsc_location id="not-on-cluster1" rsc="dummy" node="cluster01" score="-INFINITY"/>
      <rsc_location id="loc-promotable-clone" rsc="promotable-clone">
        <rule id="loc-promotable-clone-rule" role="Promoted" score="10">
          <expression attribute="#uname" id="loc-promotable-clone-expression" operation="eq" value="cluster02"/>
        </rule>
      </rsc_location>
    </constraints>
    <tags>
      <tag id="all-nodes">
        <obj_ref id="1"/>
        <obj_ref id="2"/>
      </tag>
      <tag id="even-nodes">
        <obj_ref id="2"/>
      </tag>
      <tag id="odd-nodes">
        <obj_ref id="1"/>
      </tag>
      <tag id="inactive-rscs">
        <obj_ref id="inactive-group"/>
        <obj_ref id="inactive-clone"/>
      </tag>
      <tag id="fencing-rscs">
        <obj_ref id="Fencing"/>
      </tag>
    </tags>
    <op_defaults>
      <meta_attributes id="op_defaults-options">
        <nvpair id="op_defaults-options-timeout" name="timeout" value="5s"/>
      </meta_attributes>
    </op_defaults>
  </configuration>
  <status>
    <node_state id="2" uname="cluster02" in_ccm="true" crmd="online" crm-debug-origin="do_update_resource" join="member" expected="member">
      <lrm id="2">
        <lrm_resources>
          <lrm_resource id="ping" type="ping" class="ocf" provider="pacemaker">
            <lrm_rsc_op id="ping_last_0" operation_key="ping_start_0" operation="start" crm-debug-origin="do_update_resource" transition-key="9:0:0:4a9e64d6-e1dd-4395-917c-1596312eafe4" transition-magic="0:0;9:0:0:4a9e64d6-e1dd-4395-917c-1596312eafe4" exit-reason="" on_node="cluster02" call-id="11" rc-code="0" op-status="0" interval="0" exec-time="2044" queue-time="0" op-digest="769dd6f95f1494d416ae9dc690960e17"/>
            <lrm_rsc_op id="ping_monitor_10000" operation_key="ping_monitor_10000" operation="monitor" crm-debug-origin="do_update_resource" transition-key="10:0:0:4a9e64d6-e1dd-4395-917c-1596312eafe4" transition-magic="0:0;10:0:0:4a9e64d6-e1dd-4395-917c-1596312eafe4" exit-reason="" on_node="cluster02" call-id="12" rc-code="0" op-status="0" interval="10000" exec-time="2031" queue-time="0" op-digest="7beffd8be749b787fabea4aef5df21c9"/>
          </lrm_resource>
          <lrm_resource id="Fencing" type="fence_xvm" class="stonith">
            <lrm_rsc_op id="Fencing_last_0" operation_key="Fencing_monitor_0" operation="monitor" crm-debug-origin="do_update_resource" transition-key="5:0:7:4a9e64d6-e1dd-4395-917c-1596312eafe4" transition-magic="0:7;5:0:7:4a9e64d6-e1dd-4395-917c-1596312eafe4" exit-reason="" on_node="cluster02" call-id="10" rc-code="7" op-status="0" interval="0" exec-time="3" queue-time="0" op-digest="7da16842ab2328e41f737cab5e5fc89c"/>
          </lrm_resource>
          <lrm_resource id="dummy" type="Dummy" class="ocf" provider="pacemaker">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_start_0" operation="start" crm-debug-origin="do_update_resource" transition-key="14:1:0:4a9e64d6-e1dd-4395-917c-1596312eafe4" transition-magic="0:0;14:1:0:4a9e64d6-e1dd-4395-917c-1596312eafe4" exit-reason="" on_node="cluster02" call-id="18" rc-code="0" op-status="0" interval="0" exec-time="6020" queue-time="0" op-digest="aa0f9b7caf28600646551adb55bd9b95" op-force-restart=" envfile  op_sleep  passwd  state " op-restart-digest="aa0f9b7caf28600646551adb55bd9b95" op-secure-params=" passwd " op-secure-digest="aa0f9b7caf28600646551adb55bd9b95"/>
            <lrm_rsc_op id="dummy_monitor_60000" operation_key="dummy_monitor_60000" operation="monitor" crm-debug-origin="do_update_resource" transition-key="16:2:0:4a9e64d6-e1dd-4395-917c-1596312eafe4" transition-magic="0:0;16:2:0:4a9e64d6-e1dd-4395-917c-1596312eafe4" exit-reason="" on_node="cluster02" call-id="19" rc-code="0" op-status="0" interval="60000" exec-time="6015" queue-time="0" op-digest="ccfee4afbb0618907016c9bef210b8b6" op-secure-params=" passwd " op-secure-digest="aa0f9b7caf28600646551adb55bd9b95"/>
          </lrm_resource>
          <lrm_resource id="Public-IP" class="ocf" provider="heartbeat" type="IPaddr">
            <lrm_rsc_op id="Public-IP_last_0" operation_key="Public-IP_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="3bb21cd55b79809a3ae69333a8981fd4"/>
          </lrm_resource>
          <lrm_resource id="Email" class="lsb" type="exim">
            <lrm_rsc_op id="Email_last_0" operation_key="Email_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
          <lrm_resource id="mysql-proxy" class="lsb" type="mysql-proxy">
            <lrm_rsc_op id="mysql-proxy_last_0" operation_key="mysql-proxy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
            <lrm_rsc_op id="mysql-proxy_monitor_10000" operation_key="mysql-proxy_monitor_10000" operation="monitor" crm-debug-origin="crm_simulate" transition-key="3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="3" rc-code="0" op-status="0" interval="10000" exec-time="0" queue-time="0" op-digest="4811cef7f7f94e3a35a70be7916cb2fd"/>
          </lrm_resource>
          <lrm_resource id="promotable-rsc" class="ocf" provider="pacemaker" type="Stateful">
            <lrm_rsc_op id="promotable-rsc_last_0" operation_key="promotable-rsc_promote_0" operation="promote" crm-debug-origin="crm_simulate" transition-key="6:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;6:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="6" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
            <lrm_rsc_op id="promotable-rsc_post_notify_start_0" operation_key="promotable-rsc_notify_0" operation="notify" crm-debug-origin="crm_simulate" transition-key="3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="3" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
            <lrm_rsc_op id="promotable-rsc_monitor_10000" operation_key="promotable-rsc_monitor_10000" operation="monitor" crm-debug-origin="crm_simulate" transition-key="4:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;4:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="4" rc-code="0" op-status="0" interval="10000" exec-time="0" queue-time="0" op-digest="79643b49fcd2a15282788271c56eddb4"/>
            <lrm_rsc_op id="promotable-rsc_cancel_10000" operation_key="promotable-rsc_cancel_10000" operation="cancel" crm-debug-origin="crm_simulate" transition-key="5:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;5:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="5" rc-code="0" op-status="0" interval="10000" exec-time="0" queue-time="0" op-digest="79643b49fcd2a15282788271c56eddb4"/>
            <lrm_rsc_op id="promotable-rsc_monitor_5000" operation_key="promotable-rsc_monitor_5000" operation="monitor" crm-debug-origin="crm_simulate" transition-key="7:-1:8:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:8;7:-1:8:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="7" rc-code="8" op-status="0" interval="5000" exec-time="0" queue-time="0" op-digest="79643b49fcd2a15282788271c56eddb4"/>
          </lrm_resource>
          <lrm_resource id="inactive-dhcpd" class="lsb" type="dhcpd">
            <lrm_rsc_op id="inactive-dhcpd_last_0" operation_key="inactive-dhcpd_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
          <lrm_resource id="inactive-dummy-1" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="inactive-dummy-1_last_0" operation_key="inactive-dummy-1_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
          <lrm_resource id="inactive-dummy-2" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="inactive-dummy-2_last_0" operation_key="inactive-dummy-2_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
          <lrm_resource id="httpd-bundle-ip-192.168.122.131" class="ocf" provider="heartbeat" type="IPaddr2">
            <lrm_rsc_op id="httpd-bundle-ip-192.168.122.131_last_0" operation_key="httpd-bundle-ip-192.168.122.131_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="8656419d4ed26465c724189832393477"/>
          </lrm_resource>
          <lrm_resource id="httpd-bundle-docker-0" class="ocf" provider="heartbeat" type="docker">
            <lrm_rsc_op id="httpd-bundle-docker-0_last_0" operation_key="httpd-bundle-docker-0_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="02a1a0b2dfa1cade1893713b56939c55"/>
          </lrm_resource>
          <lrm_resource id="httpd-bundle-ip-192.168.122.132" class="ocf" provider="heartbeat" type="IPaddr2">
            <lrm_rsc_op id="httpd-bundle-ip-192.168.122.132_last_0" operation_key="httpd-bundle-ip-192.168.122.132_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="c3d96a2922c2946905f760df9a177cd1"/>
            <lrm_rsc_op id="httpd-bundle-ip-192.168.122.132_monitor_60000" operation_key="httpd-bundle-ip-192.168.122.132_monitor_60000" operation="monitor" crm-debug-origin="crm_simulate" transition-key="3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="3" rc-code="0" op-status="0" interval="60000" exec-time="0" queue-time="0" op-digest="547dff7d7a9d7448dd07cde35966f08a"/>
          </lrm_resource>
          <lrm_resource id="httpd-bundle-docker-1" class="ocf" provider="heartbeat" type="docker">
            <lrm_rsc_op id="httpd-bundle-docker-1_last_0" operation_key="httpd-bundle-docker-1_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="2edb33b196e2261c6b3e30ce579e0590"/>
            <lrm_rsc_op id="httpd-bundle-docker-1_monitor_60000" operation_key="httpd-bundle-docker-1_monitor_60000" operation="monitor" crm-debug-origin="crm_simulate" transition-key="3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="3" rc-code="0" op-status="0" interval="60000" exec-time="0" queue-time="0" op-digest="1ed1cced876b80101858caac9836e113"/>
          </lrm_resource>
          <lrm_resource id="httpd-bundle-ip-192.168.122.133" class="ocf" provider="heartbeat" type="IPaddr2">
            <lrm_rsc_op id="httpd-bundle-ip-192.168.122.133_last_0" operation_key="httpd-bundle-ip-192.168.122.133_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f318115a675fd430c293a0dc2705f398"/>
          </lrm_resource>
          <lrm_resource id="httpd-bundle-docker-2" class="ocf" provider="heartbeat" type="docker">
            <lrm_rsc_op id="httpd-bundle-docker-2_last_0" operation_key="httpd-bundle-docker-2_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="6680384ac1363763d9d5cca296be0b2d"/>
          </lrm_resource>
          <lrm_resource id="httpd-bundle-0" class="ocf" provider="pacemaker" type="remote">
            <lrm_rsc_op id="httpd-bundle-0_last_0" operation_key="httpd-bundle-0_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="c535429017a9ee0785106fbef2858a41"/>
          </lrm_resource>
          <lrm_resource id="httpd-bundle-1" class="ocf" provider="pacemaker" type="remote">
            <lrm_rsc_op id="httpd-bundle-1_last_0" operation_key="httpd-bundle-1_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="791bcda8f6693465cc318cba5302a8df"/>
            <lrm_rsc_op id="httpd-bundle-1_monitor_30000" operation_key="httpd-bundle-1_monitor_30000" operation="monitor" crm-debug-origin="crm_simulate" transition-key="3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="3" rc-code="0" op-status="0" interval="30000" exec-time="0" queue-time="0" op-digest="7592cb10fa1499772a031adfd385f558"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
      <transient_attributes id="2">
        <instance_attributes id="status-2">
          <nvpair id="status-2-pingd" name="pingd" value="1000"/>
        </instance_attributes>
      </transient_attributes>
    </node_state>
    <node_state id="1" uname="cluster01" in_ccm="true" crmd="online" crm-debug-origin="do_update_resource" join="member" expected="member">
      <lrm id="1">
        <lrm_resources>
          <lrm_resource id="ping" type="ping" class="ocf" provider="pacemaker">
            <lrm_rsc_op id="ping_last_0" operation_key="ping_start_0" operation="start" crm-debug-origin="do_update_resource" transition-key="6:1:0:4a9e64d6-e1dd-4395-917c-1596312eafe4" transition-magic="0:0;6:1:0:4a9e64d6-e1dd-4395-917c-1596312eafe4" exit-reason="" on_node="cluster01" call-id="17" rc-code="0" op-status="0" interval="0" exec-time="2038" queue-time="0" op-digest="769dd6f95f1494d416ae9dc690960e17"/>
            <lrm_rsc_op id="ping_monitor_10000" operation_key="ping_monitor_10000" operation="monitor" crm-debug-origin="do_update_resource" transition-key="7:1:0:4a9e64d6-e1dd-4395-917c-1596312eafe4" transition-magic="0:0;7:1:0:4a9e64d6-e1dd-4395-917c-1596312eafe4" exit-reason="" on_node="cluster01" call-id="18" rc-code="0" op-status="0" interval="10000" exec-time="2034" queue-time="0" op-digest="7beffd8be749b787fabea4aef5df21c9"/>
          </lrm_resource>
          <lrm_resource id="Fencing" type="fence_xvm" class="stonith">
            <lrm_rsc_op id="Fencing_last_0" operation_key="Fencing_start_0" operation="start" crm-debug-origin="do_update_resource" transition-key="12:1:0:4a9e64d6-e1dd-4395-917c-1596312eafe4" transition-magic="0:0;12:1:0:4a9e64d6-e1dd-4395-917c-1596312eafe4" exit-reason="" on_node="cluster01" call-id="15" rc-code="0" op-status="0" interval="0" exec-time="36" queue-time="0" op-digest="7da16842ab2328e41f737cab5e5fc89c"/>
            <lrm_rsc_op id="Fencing_monitor_60000" operation_key="Fencing_monitor_60000" operation="monitor" crm-debug-origin="crm_simulate" transition-key="20:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;20:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" on_node="cluster01" call-id="20" rc-code="0" op-status="0" interval="60000" exec-time="0" queue-time="0" op-digest="d4ee02dc1c7ce16eb0f72e06c2cc9193"/>
          </lrm_resource>
          <lrm_resource id="dummy" type="Dummy" class="ocf" provider="pacemaker">
            <lrm_rsc_op id="dummy_last_0" operation_key="dummy_stop_0" operation="stop" crm-debug-origin="do_update_resource" transition-key="3:1:0:4a9e64d6-e1dd-4395-917c-1596312eafe4" transition-magic="0:0;3:1:0:4a9e64d6-e1dd-4395-917c-1596312eafe4" exit-reason="" on_node="cluster01" call-id="16" rc-code="0" op-status="0" interval="0" exec-time="6048" queue-time="0" op-digest="aa0f9b7caf28600646551adb55bd9b95" op-force-restart=" envfile  op_sleep  passwd  state " op-restart-digest="aa0f9b7caf28600646551adb55bd9b95" op-secure-params=" passwd " op-secure-digest="aa0f9b7caf28600646551adb55bd9b95"/>
          </lrm_resource>
          <lrm_resource id="Public-IP" class="ocf" provider="heartbeat" type="IPaddr">
            <lrm_rsc_op id="Public-IP_last_0" operation_key="Public-IP_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="3bb21cd55b79809a3ae69333a8981fd4"/>
          </lrm_resource>
          <lrm_resource id="Email" class="lsb" type="exim">
            <lrm_rsc_op id="Email_last_0" operation_key="Email_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
          <lrm_resource id="mysql-proxy" class="lsb" type="mysql-proxy">
            <lrm_rsc_op id="mysql-proxy_last_0" operation_key="mysql-proxy_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
            <lrm_rsc_op id="mysql-proxy_monitor_10000" operation_key="mysql-proxy_monitor_10000" operation="monitor" crm-debug-origin="crm_simulate" transition-key="3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="3" rc-code="0" op-status="0" interval="10000" exec-time="0" queue-time="0" op-digest="4811cef7f7f94e3a35a70be7916cb2fd"/>
          </lrm_resource>
          <lrm_resource id="promotable-rsc" class="ocf" provider="pacemaker" type="Stateful">
            <lrm_rsc_op id="promotable-rsc_last_0" operation_key="promotable-rsc_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
            <lrm_rsc_op id="promotable-rsc_post_notify_start_0" operation_key="promotable-rsc_notify_0" operation="notify" crm-debug-origin="crm_simulate" transition-key="3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="3" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
            <lrm_rsc_op id="promotable-rsc_monitor_10000" operation_key="promotable-rsc_monitor_10000" operation="monitor" crm-debug-origin="crm_simulate" transition-key="4:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;4:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="4" rc-code="0" op-status="0" interval="10000" exec-time="0" queue-time="0" op-digest="79643b49fcd2a15282788271c56eddb4"/>
          </lrm_resource>
          <lrm_resource id="inactive-dhcpd" class="lsb" type="dhcpd">
            <lrm_rsc_op id="inactive-dhcpd_last_0" operation_key="inactive-dhcpd_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
          <lrm_resource id="inactive-dummy-1" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="inactive-dummy-1_last_0" operation_key="inactive-dummy-1_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
          <lrm_resource id="inactive-dummy-2" class="ocf" provider="pacemaker" type="Dummy">
            <lrm_rsc_op id="inactive-dummy-2_last_0" operation_key="inactive-dummy-2_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
          <lrm_resource id="httpd-bundle-ip-192.168.122.131" class="ocf" provider="heartbeat" type="IPaddr2">
            <lrm_rsc_op id="httpd-bundle-ip-192.168.122.131_last_0" operation_key="httpd-bundle-ip-192.168.122.131_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="8656419d4ed26465c724189832393477"/>
            <lrm_rsc_op id="httpd-bundle-ip-192.168.122.131_monitor_60000" operation_key="httpd-bundle-ip-192.168.122.131_monitor_60000" operation="monitor" crm-debug-origin="crm_simulate" transition-key="3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="3" rc-code="0" op-status="0" interval="60000" exec-time="0" queue-time="0" op-digest="dfb531456299aa7b527d4e57805703da"/>
          </lrm_resource>
          <lrm_resource id="httpd-bundle-docker-0" class="ocf" provider="heartbeat" type="docker">
            <lrm_rsc_op id="httpd-bundle-docker-0_last_0" operation_key="httpd-bundle-docker-0_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="02a1a0b2dfa1cade1893713b56939c55"/>
            <lrm_rsc_op id="httpd-bundle-docker-0_monitor_60000" operation_key="httpd-bundle-docker-0_monitor_60000" operation="monitor" crm-debug-origin="crm_simulate" transition-key="3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="3" rc-code="0" op-status="0" interval="60000" exec-time="0" queue-time="0" op-digest="377a66c466df6e6edf98a6e83cff9c22"/>
          </lrm_resource>
          <lrm_resource id="httpd-bundle-ip-192.168.122.132" class="ocf" provider="heartbeat" type="IPaddr2">
            <lrm_rsc_op id="httpd-bundle-ip-192.168.122.132_last_0" operation_key="httpd-bundle-ip-192.168.122.132_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="c3d96a2922c2946905f760df9a177cd1"/>
          </lrm_resource>
          <lrm_resource id="httpd-bundle-docker-1" class="ocf" provider="heartbeat" type="docker">
            <lrm_rsc_op id="httpd-bundle-docker-1_last_0" operation_key="httpd-bundle-docker-1_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="2edb33b196e2261c6b3e30ce579e0590"/>
          </lrm_resource>
          <lrm_resource id="httpd-bundle-ip-192.168.122.133" class="ocf" provider="heartbeat" type="IPaddr2">
            <lrm_rsc_op id="httpd-bundle-ip-192.168.122.133_last_0" operation_key="httpd-bundle-ip-192.168.122.133_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f318115a675fd430c293a0dc2705f398"/>
          </lrm_resource>
          <lrm_resource id="httpd-bundle-docker-2" class="ocf" provider="heartbeat" type="docker">
            <lrm_rsc_op id="httpd-bundle-docker-2_last_0" operation_key="httpd-bundle-docker-2_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="6680384ac1363763d9d5cca296be0b2d"/>
          </lrm_resource>
          <lrm_resource id="httpd-bundle-0" class="ocf" provider="pacemaker" type="remote">
            <lrm_rsc_op id="httpd-bundle-0_last_0" operation_key="httpd-bundle-0_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;2:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="2" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="c535429017a9ee0785106fbef2858a41"/>
            <lrm_rsc_op id="httpd-bundle-0_monitor_30000" operation_key="httpd-bundle-0_monitor_30000" operation="monitor" crm-debug-origin="crm_simulate" transition-key="3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;3:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="3" rc-code="0" op-status="0" interval="30000" exec-time="0" queue-time="0" op-digest="6d63e20548871f169e287d33f3711637"/>
          </lrm_resource>
          <lrm_resource id="httpd-bundle-1" class="ocf" provider="pacemaker" type="remote">
            <lrm_rsc_op id="httpd-bundle-1_last_0" operation_key="httpd-bundle-1_monitor_0" operation="monitor" crm-debug-origin="crm_simulate" transition-key="1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:7;1:-1:7:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="7" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="791bcda8f6693465cc318cba5302a8df"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
      <transient_attributes id="1">
        <instance_attributes id="status-1">
          <nvpair id="status-1-pingd" name="pingd" value="1000"/>
        </instance_attributes>
      </transient_attributes>
    </node_state>
    <node_state id="httpd-bundle-0" uname="httpd-bundle-0">
      <lrm id="httpd-bundle-0">
        <lrm_resources>
          <lrm_resource id="httpd" class="ocf" provider="heartbeat" type="apache">
            <lrm_rsc_op id="httpd_last_0" operation_key="httpd_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="1:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;1:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
    <node_state id="httpd-bundle-1" uname="httpd-bundle-1">
      <lrm id="httpd-bundle-1">
        <lrm_resources>
          <lrm_resource id="httpd" class="ocf" provider="heartbeat" type="apache">
            <lrm_rsc_op id="httpd_last_0" operation_key="httpd_start_0" operation="start" crm-debug-origin="crm_simulate" transition-key="1:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" transition-magic="0:0;1:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" exit-reason="" call-id="1" rc-code="0" op-status="0" interval="0" exec-time="0" queue-time="0" op-digest="f2317cad3d54cec5d7d7aa7d0bf35cf8"/>
          </lrm_resource>
        </lrm_resources>
      </lrm>
    </node_state>
  </status>
</cib>
]]></content>
  </shadow>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Get active shadow instance's contents (copied) (XML) - OK (0) =#=#=#=
* Passed: crm_shadow     - Get active shadow instance's contents (copied) (XML)
=#=#=#= Begin test: Get active shadow instance's diff (copied) =#=#=#=
=#=#=#= End test: Get active shadow instance's diff (copied) - OK (0) =#=#=#=
* Passed: crm_shadow     - Get active shadow instance's diff (copied)
=#=#=#= Begin test: Get active shadow instance's diff (copied) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --diff --output-as=xml">
  <shadow instance="cts-cli"/>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Get active shadow instance's diff (copied) (XML) - OK (0) =#=#=#=
* Passed: crm_shadow     - Get active shadow instance's diff (copied) (XML)
=#=#=#= Begin test: Get active shadow instance's diff (after changes) =#=#=#=
Diff: --- 1.1.173 2
Diff: +++ 1.4.1 (null)
-- /cib/configuration/op_defaults
+  /cib:  @epoch=4, @num_updates=1
+  /cib/configuration/resources/primitive[@id='dummy']:  @description=desc
++ /cib/configuration/resources:  <primitive id="dummy1" class="ocf" provider="pacemaker" type="Dummy"/>
++ /cib/status:  <node_state id="3" uname="cluster03" in_ccm="true" crmd="online" crm-debug-origin="do_update_resource" join="member" expected="member"/>
=#=#=#= End test: Get active shadow instance's diff (after changes) - Error occurred (1) =#=#=#=
* Passed: crm_shadow     - Get active shadow instance's diff (after changes)
=#=#=#= Begin test: Get active shadow instance's diff (after changes) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --diff --output-as=xml">
  <shadow instance="cts-cli">
    <xml-patchset><![CDATA[<diff format="2">
  <version>
    <source admin_epoch="1" epoch="1" num_updates="173"/>
    <target admin_epoch="1" epoch="4" num_updates="1"/>
  </version>
  <change operation="delete" path="/cib/configuration/op_defaults"/>
  <change operation="modify" path="/cib">
    <change-list>
      <change-attr name="epoch" operation="set" value="4"/>
      <change-attr name="num_updates" operation="set" value="1"/>
    </change-list>
    <change-result>
      <cib epoch="4" num_updates="1" admin_epoch="1" update-origin="cluster01" update-client="crmd" update-user="hacluster" have-quorum="1" dc-uuid="2"/>
    </change-result>
  </change>
  <change operation="modify" path="/cib/configuration/resources/primitive[@id='dummy']">
    <change-list>
      <change-attr name="description" operation="set" value="desc"/>
    </change-list>
    <change-result>
      <primitive class="ocf" id="dummy" provider="pacemaker" type="Dummy" description="desc"/>
    </change-result>
  </change>
  <change operation="create" path="/cib/configuration/resources" position="9">
    <primitive id="dummy1" class="ocf" provider="pacemaker" type="Dummy"/>
  </change>
  <change operation="create" path="/cib/status" position="4">
    <node_state id="3" uname="cluster03" in_ccm="true" crmd="online" crm-debug-origin="do_update_resource" join="member" expected="member"/>
  </change>
</diff>
]]></xml-patchset>
  </shadow>
  <status code="1" message="Error occurred"/>
</pacemaker-result>
=#=#=#= End test: Get active shadow instance's diff (after changes) (XML) - Error occurred (1) =#=#=#=
* Passed: crm_shadow     - Get active shadow instance's diff (after changes) (XML)
=#=#=#= Begin test: Commit shadow instance =#=#=#=
crm_shadow: The commit command overwrites the active cluster configuration.
To prevent accidental destruction of the cluster, the --force flag is required in order to proceed.
=#=#=#= End test: Commit shadow instance - Incorrect usage (64) =#=#=#=
* Passed: crm_shadow     - Commit shadow instance
=#=#=#= Begin test: Commit shadow instance (force) =#=#=#=
=#=#=#= End test: Commit shadow instance (force) - OK (0) =#=#=#=
* Passed: crm_shadow     - Commit shadow instance (force)
=#=#=#= Begin test: Get active shadow instance's diff (after commit) =#=#=#=
Diff: --- 1.2.0 2
Diff: +++ 1.4.1 (null)
+  /cib:  @epoch=4, @num_updates=1
++ /cib/status:  <node_state id="3" uname="cluster03" in_ccm="true" crmd="online" crm-debug-origin="do_update_resource" join="member" expected="member"/>
=#=#=#= End test: Get active shadow instance's diff (after commit) - Error occurred (1) =#=#=#=
* Passed: crm_shadow     - Get active shadow instance's diff (after commit)
=#=#=#= Begin test: Commit shadow instance (force) (all) =#=#=#=
=#=#=#= End test: Commit shadow instance (force) (all) - OK (0) =#=#=#=
* Passed: crm_shadow     - Commit shadow instance (force) (all)
=#=#=#= Begin test: Get active shadow instance's diff (after commit all) =#=#=#=
Diff: --- 1.4.2 2
Diff: +++ 1.4.1 (null)
+  /cib:  @num_updates=1
=#=#=#= End test: Get active shadow instance's diff (after commit all) - Error occurred (1) =#=#=#=
* Passed: crm_shadow     - Get active shadow instance's diff (after commit all)
=#=#=#= Begin test: Commit shadow instance (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --commit cts-cli --output-as=xml">
  <status code="64" message="Incorrect usage">
    <errors>
      <error>crm_shadow: The commit command overwrites the active cluster configuration.
To prevent accidental destruction of the cluster, the --force flag is required in order to proceed.</error>
    </errors>
  </status>
</pacemaker-result>
=#=#=#= End test: Commit shadow instance (XML) - Incorrect usage (64) =#=#=#=
* Passed: crm_shadow     - Commit shadow instance (XML)
=#=#=#= Begin test: Commit shadow instance (force) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --commit cts-cli --force --output-as=xml">
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Commit shadow instance (force) (XML) - OK (0) =#=#=#=
* Passed: crm_shadow     - Commit shadow instance (force) (XML)
=#=#=#= Begin test: Get active shadow instance's diff (after commit) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --diff --output-as=xml">
  <shadow instance="cts-cli">
    <xml-patchset><![CDATA[<diff format="2">
  <version>
    <source admin_epoch="1" epoch="2" num_updates="0"/>
    <target admin_epoch="1" epoch="4" num_updates="1"/>
  </version>
  <change operation="modify" path="/cib">
    <change-list>
      <change-attr name="epoch" operation="set" value="4"/>
      <change-attr name="num_updates" operation="set" value="1"/>
    </change-list>
    <change-result>
      <cib epoch="4" num_updates="1" admin_epoch="1" update-origin="cluster01" update-client="crmd" update-user="hacluster" have-quorum="1" dc-uuid="2"/>
    </change-result>
  </change>
  <change operation="create" path="/cib/status" position="4">
    <node_state id="3" uname="cluster03" in_ccm="true" crmd="online" crm-debug-origin="do_update_resource" join="member" expected="member"/>
  </change>
</diff>
]]></xml-patchset>
  </shadow>
  <status code="1" message="Error occurred"/>
</pacemaker-result>
=#=#=#= End test: Get active shadow instance's diff (after commit) (XML) - Error occurred (1) =#=#=#=
* Passed: crm_shadow     - Get active shadow instance's diff (after commit) (XML)
=#=#=#= Begin test: Commit shadow instance (force) (all) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --commit cts-cli --force --all --output-as=xml">
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Commit shadow instance (force) (all) (XML) - OK (0) =#=#=#=
* Passed: crm_shadow     - Commit shadow instance (force) (all) (XML)
=#=#=#= Begin test: Get active shadow instance's diff (after commit all) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --diff --output-as=xml">
  <shadow instance="cts-cli">
    <xml-patchset><![CDATA[<diff format="2">
  <version>
    <source admin_epoch="1" epoch="4" num_updates="2"/>
    <target admin_epoch="1" epoch="4" num_updates="1"/>
  </version>
  <change operation="modify" path="/cib">
    <change-list>
      <change-attr name="num_updates" operation="set" value="1"/>
    </change-list>
    <change-result>
      <cib epoch="4" num_updates="1" admin_epoch="1" update-origin="cluster01" update-client="crmd" update-user="hacluster" have-quorum="1" dc-uuid="2"/>
    </change-result>
  </change>
</diff>
]]></xml-patchset>
  </shadow>
  <status code="1" message="Error occurred"/>
</pacemaker-result>
=#=#=#= End test: Get active shadow instance's diff (after commit all) (XML) - Error occurred (1) =#=#=#=
* Passed: crm_shadow     - Get active shadow instance's diff (after commit all) (XML)
=#=#=#= Begin test: Commit shadow instance (no active instance) =#=#=#=
crm_shadow: The commit command overwrites the active cluster configuration.
To prevent accidental destruction of the cluster, the --force flag is required in order to proceed.
=#=#=#= End test: Commit shadow instance (no active instance) - Incorrect usage (64) =#=#=#=
* Passed: crm_shadow     - Commit shadow instance (no active instance)
=#=#=#= Begin test: Commit shadow instance (no active instance) (force) =#=#=#=
=#=#=#= End test: Commit shadow instance (no active instance) (force) - OK (0) =#=#=#=
* Passed: crm_shadow     - Commit shadow instance (no active instance) (force)
=#=#=#= Begin test: Commit shadow instance (no active instance) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --commit cts-cli --output-as=xml">
  <status code="64" message="Incorrect usage">
    <errors>
      <error>crm_shadow: The commit command overwrites the active cluster configuration.
To prevent accidental destruction of the cluster, the --force flag is required in order to proceed.</error>
    </errors>
  </status>
</pacemaker-result>
=#=#=#= End test: Commit shadow instance (no active instance) (XML) - Incorrect usage (64) =#=#=#=
* Passed: crm_shadow     - Commit shadow instance (no active instance) (XML)
=#=#=#= Begin test: Commit shadow instance (no active instance) (force) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --commit cts-cli --force --output-as=xml">
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Commit shadow instance (no active instance) (force) (XML) - OK (0) =#=#=#=
* Passed: crm_shadow     - Commit shadow instance (no active instance) (force) (XML)
=#=#=#= Begin test: Commit shadow instance (mismatch) =#=#=#=
crm_shadow: The commit command overwrites the active cluster configuration.
Additionally, the supplied shadow instance (cts-cli) is not the same as the active one (nonexistent_shadow).
To prevent accidental destruction of the cluster, the --force flag is required in order to proceed.
=#=#=#= End test: Commit shadow instance (mismatch) - Incorrect usage (64) =#=#=#=
* Passed: crm_shadow     - Commit shadow instance (mismatch)
=#=#=#= Begin test: Commit shadow instance (mismatch) (force) =#=#=#=
=#=#=#= End test: Commit shadow instance (mismatch) (force) - OK (0) =#=#=#=
* Passed: crm_shadow     - Commit shadow instance (mismatch) (force)
=#=#=#= Begin test: Commit shadow instance (mismatch) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --commit cts-cli --output-as=xml">
  <status code="64" message="Incorrect usage">
    <errors>
      <error>crm_shadow: The commit command overwrites the active cluster configuration.
Additionally, the supplied shadow instance (cts-cli) is not the same as the active one (nonexistent_shadow).
To prevent accidental destruction of the cluster, the --force flag is required in order to proceed.</error>
    </errors>
  </status>
</pacemaker-result>
=#=#=#= End test: Commit shadow instance (mismatch) (XML) - Incorrect usage (64) =#=#=#=
* Passed: crm_shadow     - Commit shadow instance (mismatch) (XML)
=#=#=#= Begin test: Commit shadow instance (mismatch) (force) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --commit cts-cli --force --output-as=xml">
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Commit shadow instance (mismatch) (force) (XML) - OK (0) =#=#=#=
* Passed: crm_shadow     - Commit shadow instance (mismatch) (force) (XML)
=#=#=#= Begin test: Commit shadow instance (nonexistent shadow file) =#=#=#=
crm_shadow: The commit command overwrites the active cluster configuration.
To prevent accidental destruction of the cluster, the --force flag is required in order to proceed.
=#=#=#= End test: Commit shadow instance (nonexistent shadow file) - Incorrect usage (64) =#=#=#=
* Passed: crm_shadow     - Commit shadow instance (nonexistent shadow file)
=#=#=#= Begin test: Commit shadow instance (nonexistent shadow file) (force) =#=#=#=
crm_shadow: Could not access shadow instance 'nonexistent_shadow': No such file or directory
=#=#=#= End test: Commit shadow instance (nonexistent shadow file) (force) - No such object (105) =#=#=#=
* Passed: crm_shadow     - Commit shadow instance (nonexistent shadow file) (force)
=#=#=#= Begin test: Get active shadow instance's diff (nonexistent shadow file) =#=#=#=
crm_shadow: Could not access shadow instance 'nonexistent_shadow': No such file or directory
=#=#=#= End test: Get active shadow instance's diff (nonexistent shadow file) - No such object (105) =#=#=#=
* Passed: crm_shadow     - Get active shadow instance's diff (nonexistent shadow file)
=#=#=#= Begin test: Commit shadow instance (nonexistent shadow file) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --commit nonexistent_shadow --output-as=xml">
  <status code="64" message="Incorrect usage">
    <errors>
      <error>crm_shadow: The commit command overwrites the active cluster configuration.
To prevent accidental destruction of the cluster, the --force flag is required in order to proceed.</error>
    </errors>
  </status>
</pacemaker-result>
=#=#=#= End test: Commit shadow instance (nonexistent shadow file) (XML) - Incorrect usage (64) =#=#=#=
* Passed: crm_shadow     - Commit shadow instance (nonexistent shadow file) (XML)
=#=#=#= Begin test: Commit shadow instance (nonexistent shadow file) (force) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --commit nonexistent_shadow --force --output-as=xml">
  <status code="105" message="No such object">
    <errors>
      <error>crm_shadow: Could not access shadow instance 'nonexistent_shadow': No such file or directory</error>
    </errors>
  </status>
</pacemaker-result>
=#=#=#= End test: Commit shadow instance (nonexistent shadow file) (force) (XML) - No such object (105) =#=#=#=
* Passed: crm_shadow     - Commit shadow instance (nonexistent shadow file) (force) (XML)
=#=#=#= Begin test: Get active shadow instance's diff (nonexistent shadow file) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --diff --output-as=xml">
  <status code="105" message="No such object">
    <errors>
      <error>crm_shadow: Could not access shadow instance 'nonexistent_shadow': No such file or directory</error>
    </errors>
  </status>
</pacemaker-result>
=#=#=#= End test: Get active shadow instance's diff (nonexistent shadow file) (XML) - No such object (105) =#=#=#=
* Passed: crm_shadow     - Get active shadow instance's diff (nonexistent shadow file) (XML)
=#=#=#= Begin test: Commit shadow instance (nonexistent CIB file) =#=#=#=
crm_shadow: The commit command overwrites the active cluster configuration.
To prevent accidental destruction of the cluster, the --force flag is required in order to proceed.
=#=#=#= End test: Commit shadow instance (nonexistent CIB file) - Incorrect usage (64) =#=#=#=
* Passed: crm_shadow     - Commit shadow instance (nonexistent CIB file)
=#=#=#= Begin test: Commit shadow instance (nonexistent CIB file) (force) =#=#=#=
crm_shadow: Could not connect to CIB: No such device or address
=#=#=#= End test: Commit shadow instance (nonexistent CIB file) (force) - No such object (105) =#=#=#=
* Passed: crm_shadow     - Commit shadow instance (nonexistent CIB file) (force)
=#=#=#= Begin test: Get active shadow instance's diff (nonexistent CIB file) =#=#=#=
crm_shadow: Could not connect to CIB: No such device or address
=#=#=#= End test: Get active shadow instance's diff (nonexistent CIB file) - No such object (105) =#=#=#=
* Passed: crm_shadow     - Get active shadow instance's diff (nonexistent CIB file)
=#=#=#= Begin test: Commit shadow instance (nonexistent CIB file) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --commit cts-cli --output-as=xml">
  <status code="64" message="Incorrect usage">
    <errors>
      <error>crm_shadow: The commit command overwrites the active cluster configuration.
To prevent accidental destruction of the cluster, the --force flag is required in order to proceed.</error>
    </errors>
  </status>
</pacemaker-result>
=#=#=#= End test: Commit shadow instance (nonexistent CIB file) (XML) - Incorrect usage (64) =#=#=#=
* Passed: crm_shadow     - Commit shadow instance (nonexistent CIB file) (XML)
=#=#=#= Begin test: Commit shadow instance (nonexistent CIB file) (force) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --commit cts-cli --force --output-as=xml">
  <status code="105" message="No such object">
    <errors>
      <error>crm_shadow: Could not connect to CIB: No such device or address</error>
    </errors>
  </status>
</pacemaker-result>
=#=#=#= End test: Commit shadow instance (nonexistent CIB file) (force) (XML) - No such object (105) =#=#=#=
* Passed: crm_shadow     - Commit shadow instance (nonexistent CIB file) (force) (XML)
=#=#=#= Begin test: Get active shadow instance's diff (nonexistent CIB file) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --diff --output-as=xml">
  <status code="105" message="No such object">
    <errors>
      <error>crm_shadow: Could not connect to CIB: No such device or address</error>
    </errors>
  </status>
</pacemaker-result>
=#=#=#= End test: Get active shadow instance's diff (nonexistent CIB file) (XML) - No such object (105) =#=#=#=
* Passed: crm_shadow     - Get active shadow instance's diff (nonexistent CIB file) (XML)
=#=#=#= Begin test: Delete shadow instance =#=#=#=
crm_shadow: The delete command removes the specified shadow file.
To prevent accidental destruction of the shadow file, the --force flag is required in order to proceed.
=#=#=#= End test: Delete shadow instance - Incorrect usage (64) =#=#=#=
* Passed: crm_shadow     - Delete shadow instance
=#=#=#= Begin test: Delete shadow instance (force) =#=#=#=
Remember to unset the CIB_shadow variable by entering the following into your shell:
	unset CIB_shadow
=#=#=#= End test: Delete shadow instance (force) - OK (0) =#=#=#=
* Passed: crm_shadow     - Delete shadow instance (force)
A new shadow instance was created. To begin using it, enter the following into your shell:
	export CIB_shadow=cts-cli
=#=#=#= Begin test: Delete shadow instance (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --delete cts-cli --output-as=xml">
  <status code="64" message="Incorrect usage">
    <errors>
      <error>crm_shadow: The delete command removes the specified shadow file.
To prevent accidental destruction of the shadow file, the --force flag is required in order to proceed.</error>
    </errors>
  </status>
</pacemaker-result>
=#=#=#= End test: Delete shadow instance (XML) - Incorrect usage (64) =#=#=#=
* Passed: crm_shadow     - Delete shadow instance (XML)
=#=#=#= Begin test: Delete shadow instance (force) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --delete cts-cli --force --output-as=xml">
  <instruction>Remember to unset the CIB_shadow variable by entering the following into your shell:
	unset CIB_shadow</instruction>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Delete shadow instance (force) (XML) - OK (0) =#=#=#=
* Passed: crm_shadow     - Delete shadow instance (force) (XML)
A new shadow instance was created. To begin using it, enter the following into your shell:
	export CIB_shadow=cts-cli
=#=#=#= Begin test: Delete shadow instance (no active instance) =#=#=#=
crm_shadow: The delete command removes the specified shadow file.
To prevent accidental destruction of the shadow file, the --force flag is required in order to proceed.
=#=#=#= End test: Delete shadow instance (no active instance) - Incorrect usage (64) =#=#=#=
* Passed: crm_shadow     - Delete shadow instance (no active instance)
=#=#=#= Begin test: Delete shadow instance (no active instance) (force) =#=#=#=
=#=#=#= End test: Delete shadow instance (no active instance) (force) - OK (0) =#=#=#=
* Passed: crm_shadow     - Delete shadow instance (no active instance) (force)
A new shadow instance was created. To begin using it, enter the following into your shell:
	export CIB_shadow=cts-cli
=#=#=#= Begin test: Delete shadow instance (no active instance) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --delete cts-cli --output-as=xml">
  <status code="64" message="Incorrect usage">
    <errors>
      <error>crm_shadow: The delete command removes the specified shadow file.
To prevent accidental destruction of the shadow file, the --force flag is required in order to proceed.</error>
    </errors>
  </status>
</pacemaker-result>
=#=#=#= End test: Delete shadow instance (no active instance) (XML) - Incorrect usage (64) =#=#=#=
* Passed: crm_shadow     - Delete shadow instance (no active instance) (XML)
=#=#=#= Begin test: Delete shadow instance (no active instance) (force) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --delete cts-cli --force --output-as=xml">
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Delete shadow instance (no active instance) (force) (XML) - OK (0) =#=#=#=
* Passed: crm_shadow     - Delete shadow instance (no active instance) (force) (XML)
A new shadow instance was created. To begin using it, enter the following into your shell:
	export CIB_shadow=cts-cli
=#=#=#= Begin test: Delete shadow instance (mismatch) =#=#=#=
crm_shadow: The delete command removes the specified shadow file.
Additionally, the supplied shadow instance (cts-cli) is not the same as the active one (nonexistent_shadow).
To prevent accidental destruction of the shadow file, the --force flag is required in order to proceed.
=#=#=#= End test: Delete shadow instance (mismatch) - Incorrect usage (64) =#=#=#=
* Passed: crm_shadow     - Delete shadow instance (mismatch)
=#=#=#= Begin test: Delete shadow instance (mismatch) (force) =#=#=#=
=#=#=#= End test: Delete shadow instance (mismatch) (force) - OK (0) =#=#=#=
* Passed: crm_shadow     - Delete shadow instance (mismatch) (force)
A new shadow instance was created. To begin using it, enter the following into your shell:
	export CIB_shadow=cts-cli
=#=#=#= Begin test: Delete shadow instance (mismatch) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --delete cts-cli --output-as=xml">
  <status code="64" message="Incorrect usage">
    <errors>
      <error>crm_shadow: The delete command removes the specified shadow file.
Additionally, the supplied shadow instance (cts-cli) is not the same as the active one (nonexistent_shadow).
To prevent accidental destruction of the shadow file, the --force flag is required in order to proceed.</error>
    </errors>
  </status>
</pacemaker-result>
=#=#=#= End test: Delete shadow instance (mismatch) (XML) - Incorrect usage (64) =#=#=#=
* Passed: crm_shadow     - Delete shadow instance (mismatch) (XML)
=#=#=#= Begin test: Delete shadow instance (mismatch) (force) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --delete cts-cli --force --output-as=xml">
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Delete shadow instance (mismatch) (force) (XML) - OK (0) =#=#=#=
* Passed: crm_shadow     - Delete shadow instance (mismatch) (force) (XML)
=#=#=#= Begin test: Delete shadow instance (nonexistent shadow file) =#=#=#=
crm_shadow: The delete command removes the specified shadow file.
To prevent accidental destruction of the shadow file, the --force flag is required in order to proceed.
=#=#=#= End test: Delete shadow instance (nonexistent shadow file) - Incorrect usage (64) =#=#=#=
* Passed: crm_shadow     - Delete shadow instance (nonexistent shadow file)
=#=#=#= Begin test: Delete shadow instance (nonexistent shadow file) (force) =#=#=#=
Remember to unset the CIB_shadow variable by entering the following into your shell:
	unset CIB_shadow
=#=#=#= End test: Delete shadow instance (nonexistent shadow file) (force) - OK (0) =#=#=#=
* Passed: crm_shadow     - Delete shadow instance (nonexistent shadow file) (force)
=#=#=#= Begin test: Delete shadow instance (nonexistent shadow file) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --delete nonexistent_shadow --output-as=xml">
  <status code="64" message="Incorrect usage">
    <errors>
      <error>crm_shadow: The delete command removes the specified shadow file.
To prevent accidental destruction of the shadow file, the --force flag is required in order to proceed.</error>
    </errors>
  </status>
</pacemaker-result>
=#=#=#= End test: Delete shadow instance (nonexistent shadow file) (XML) - Incorrect usage (64) =#=#=#=
* Passed: crm_shadow     - Delete shadow instance (nonexistent shadow file) (XML)
=#=#=#= Begin test: Delete shadow instance (nonexistent shadow file) (force) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --delete nonexistent_shadow --force --output-as=xml">
  <instruction>Remember to unset the CIB_shadow variable by entering the following into your shell:
	unset CIB_shadow</instruction>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Delete shadow instance (nonexistent shadow file) (force) (XML) - OK (0) =#=#=#=
* Passed: crm_shadow     - Delete shadow instance (nonexistent shadow file) (force) (XML)
A new shadow instance was created. To begin using it, enter the following into your shell:
	export CIB_shadow=cts-cli
=#=#=#= Begin test: Delete shadow instance (nonexistent CIB file) =#=#=#=
crm_shadow: The delete command removes the specified shadow file.
To prevent accidental destruction of the shadow file, the --force flag is required in order to proceed.
=#=#=#= End test: Delete shadow instance (nonexistent CIB file) - Incorrect usage (64) =#=#=#=
* Passed: crm_shadow     - Delete shadow instance (nonexistent CIB file)
=#=#=#= Begin test: Delete shadow instance (nonexistent CIB file) (force) =#=#=#=
Remember to unset the CIB_shadow variable by entering the following into your shell:
	unset CIB_shadow
=#=#=#= End test: Delete shadow instance (nonexistent CIB file) (force) - OK (0) =#=#=#=
* Passed: crm_shadow     - Delete shadow instance (nonexistent CIB file) (force)
A new shadow instance was created. To begin using it, enter the following into your shell:
	export CIB_shadow=cts-cli
=#=#=#= Begin test: Delete shadow instance (nonexistent CIB file) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --delete cts-cli --output-as=xml">
  <status code="64" message="Incorrect usage">
    <errors>
      <error>crm_shadow: The delete command removes the specified shadow file.
To prevent accidental destruction of the shadow file, the --force flag is required in order to proceed.</error>
    </errors>
  </status>
</pacemaker-result>
=#=#=#= End test: Delete shadow instance (nonexistent CIB file) (XML) - Incorrect usage (64) =#=#=#=
* Passed: crm_shadow     - Delete shadow instance (nonexistent CIB file) (XML)
=#=#=#= Begin test: Delete shadow instance (nonexistent CIB file) (force) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --delete cts-cli --force --output-as=xml">
  <instruction>Remember to unset the CIB_shadow variable by entering the following into your shell:
	unset CIB_shadow</instruction>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Delete shadow instance (nonexistent CIB file) (force) (XML) - OK (0) =#=#=#=
* Passed: crm_shadow     - Delete shadow instance (nonexistent CIB file) (force) (XML)
=#=#=#= Begin test: Create copied shadow instance (no active instance) =#=#=#=
A new shadow instance was created. To begin using it, enter the following into your shell:
	export CIB_shadow=cts-cli
=#=#=#= End test: Create copied shadow instance (no active instance) - OK (0) =#=#=#=
* Passed: crm_shadow     - Create copied shadow instance (no active instance)
=#=#=#= Begin test: Create copied shadow instance (no active instance) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --create cts-cli --batch --output-as=xml">
  <instruction>A new shadow instance was created. To begin using it, enter the following into your shell:
	export CIB_shadow=cts-cli</instruction>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Create copied shadow instance (no active instance) (XML) - OK (0) =#=#=#=
* Passed: crm_shadow     - Create copied shadow instance (no active instance) (XML)
=#=#=#= Begin test: Create copied shadow instance (mismatch) =#=#=#=
A new shadow instance was created. To begin using it, enter the following into your shell:
	export CIB_shadow=cts-cli
=#=#=#= End test: Create copied shadow instance (mismatch) - OK (0) =#=#=#=
* Passed: crm_shadow     - Create copied shadow instance (mismatch)
=#=#=#= Begin test: Create copied shadow instance (mismatch) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --create cts-cli --batch --output-as=xml">
  <instruction>A new shadow instance was created. To begin using it, enter the following into your shell:
	export CIB_shadow=cts-cli</instruction>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Create copied shadow instance (mismatch) (XML) - OK (0) =#=#=#=
* Passed: crm_shadow     - Create copied shadow instance (mismatch) (XML)
=#=#=#= Begin test: Create copied shadow instance (file already exists) =#=#=#=
crm_shadow: A shadow instance 'cts-cli' already exists.
To prevent accidental destruction of the shadow file, the --force flag is required in order to proceed.
=#=#=#= End test: Create copied shadow instance (file already exists) - Cannot create output file (73) =#=#=#=
* Passed: crm_shadow     - Create copied shadow instance (file already exists)
=#=#=#= Begin test: Create copied shadow instance (file already exists) (force) =#=#=#=
A new shadow instance was created. To begin using it, enter the following into your shell:
	export CIB_shadow=cts-cli
=#=#=#= End test: Create copied shadow instance (file already exists) (force) - OK (0) =#=#=#=
* Passed: crm_shadow     - Create copied shadow instance (file already exists) (force)
=#=#=#= Begin test: Create copied shadow instance (file already exists) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --create cts-cli --batch --output-as=xml">
  <status code="73" message="Cannot create output file">
    <errors>
      <error>crm_shadow: A shadow instance 'cts-cli' already exists.
To prevent accidental destruction of the shadow file, the --force flag is required in order to proceed.</error>
    </errors>
  </status>
</pacemaker-result>
=#=#=#= End test: Create copied shadow instance (file already exists) (XML) - Cannot create output file (73) =#=#=#=
* Passed: crm_shadow     - Create copied shadow instance (file already exists) (XML)
=#=#=#= Begin test: Create copied shadow instance (file already exists) (force) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --create cts-cli --batch --force --output-as=xml">
  <instruction>A new shadow instance was created. To begin using it, enter the following into your shell:
	export CIB_shadow=cts-cli</instruction>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Create copied shadow instance (file already exists) (force) (XML) - OK (0) =#=#=#=
* Passed: crm_shadow     - Create copied shadow instance (file already exists) (force) (XML)
=#=#=#= Begin test: Create copied shadow instance (nonexistent CIB file) (force) =#=#=#=
crm_shadow: Could not connect to CIB: No such device or address
=#=#=#= End test: Create copied shadow instance (nonexistent CIB file) (force) - No such object (105) =#=#=#=
* Passed: crm_shadow     - Create copied shadow instance (nonexistent CIB file) (force)
=#=#=#= Begin test: Create copied shadow instance (nonexistent CIB file) (force) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --create cts-cli --batch --force --output-as=xml">
  <status code="105" message="No such object">
    <errors>
      <error>crm_shadow: Could not connect to CIB: No such device or address</error>
    </errors>
  </status>
</pacemaker-result>
=#=#=#= End test: Create copied shadow instance (nonexistent CIB file) (force) (XML) - No such object (105) =#=#=#=
* Passed: crm_shadow     - Create copied shadow instance (nonexistent CIB file) (force) (XML)
=#=#=#= Begin test: Create empty shadow instance =#=#=#=
Created new pacemaker configuration
A new shadow instance was created. To begin using it, enter the following into your shell:
	export CIB_shadow=cts-cli
=#=#=#= End test: Create empty shadow instance - OK (0) =#=#=#=
* Passed: crm_shadow     - Create empty shadow instance
=#=#=#= Begin test: Create empty shadow instance (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --create-empty cts-cli --batch --output-as=xml">
  <instruction>A new shadow instance was created. To begin using it, enter the following into your shell:
	export CIB_shadow=cts-cli</instruction>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Create empty shadow instance (XML) - OK (0) =#=#=#=
* Passed: crm_shadow     - Create empty shadow instance (XML)
=#=#=#= Begin test: Create empty shadow instance (no active instance) =#=#=#=
Created new pacemaker configuration
A new shadow instance was created. To begin using it, enter the following into your shell:
	export CIB_shadow=cts-cli
=#=#=#= End test: Create empty shadow instance (no active instance) - OK (0) =#=#=#=
* Passed: crm_shadow     - Create empty shadow instance (no active instance)
=#=#=#= Begin test: Create empty shadow instance (no active instance) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --create-empty cts-cli --batch --output-as=xml">
  <instruction>A new shadow instance was created. To begin using it, enter the following into your shell:
	export CIB_shadow=cts-cli</instruction>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Create empty shadow instance (no active instance) (XML) - OK (0) =#=#=#=
* Passed: crm_shadow     - Create empty shadow instance (no active instance) (XML)
=#=#=#= Begin test: Create empty shadow instance (mismatch) =#=#=#=
Created new pacemaker configuration
A new shadow instance was created. To begin using it, enter the following into your shell:
	export CIB_shadow=cts-cli
=#=#=#= End test: Create empty shadow instance (mismatch) - OK (0) =#=#=#=
* Passed: crm_shadow     - Create empty shadow instance (mismatch)
=#=#=#= Begin test: Create empty shadow instance (mismatch) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --create-empty cts-cli --batch --output-as=xml">
  <instruction>A new shadow instance was created. To begin using it, enter the following into your shell:
	export CIB_shadow=cts-cli</instruction>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Create empty shadow instance (mismatch) (XML) - OK (0) =#=#=#=
* Passed: crm_shadow     - Create empty shadow instance (mismatch) (XML)
=#=#=#= Begin test: Create empty shadow instance (nonexistent CIB file) =#=#=#=
Created new pacemaker configuration
A new shadow instance was created. To begin using it, enter the following into your shell:
	export CIB_shadow=cts-cli
=#=#=#= End test: Create empty shadow instance (nonexistent CIB file) - OK (0) =#=#=#=
* Passed: crm_shadow     - Create empty shadow instance (nonexistent CIB file)
=#=#=#= Begin test: Create empty shadow instance (nonexistent CIB file) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --create-empty cts-cli --batch --force --output-as=xml">
  <instruction>A new shadow instance was created. To begin using it, enter the following into your shell:
	export CIB_shadow=cts-cli</instruction>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Create empty shadow instance (nonexistent CIB file) (XML) - OK (0) =#=#=#=
* Passed: crm_shadow     - Create empty shadow instance (nonexistent CIB file) (XML)
=#=#=#= Begin test: Create empty shadow instance (file already exists) =#=#=#=
crm_shadow: A shadow instance 'cts-cli' already exists.
To prevent accidental destruction of the shadow file, the --force flag is required in order to proceed.
=#=#=#= End test: Create empty shadow instance (file already exists) - Cannot create output file (73) =#=#=#=
* Passed: crm_shadow     - Create empty shadow instance (file already exists)
=#=#=#= Begin test: Create empty shadow instance (file already exists) (force) =#=#=#=
Created new pacemaker configuration
A new shadow instance was created. To begin using it, enter the following into your shell:
	export CIB_shadow=cts-cli
=#=#=#= End test: Create empty shadow instance (file already exists) (force) - OK (0) =#=#=#=
* Passed: crm_shadow     - Create empty shadow instance (file already exists) (force)
=#=#=#= Begin test: Create empty shadow instance (file already exists) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --create-empty cts-cli --batch --output-as=xml">
  <status code="73" message="Cannot create output file">
    <errors>
      <error>crm_shadow: A shadow instance 'cts-cli' already exists.
To prevent accidental destruction of the shadow file, the --force flag is required in order to proceed.</error>
    </errors>
  </status>
</pacemaker-result>
=#=#=#= End test: Create empty shadow instance (file already exists) (XML) - Cannot create output file (73) =#=#=#=
* Passed: crm_shadow     - Create empty shadow instance (file already exists) (XML)
=#=#=#= Begin test: Create empty shadow instance (file already exists) (force) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --create-empty cts-cli --batch --force --output-as=xml">
  <instruction>A new shadow instance was created. To begin using it, enter the following into your shell:
	export CIB_shadow=cts-cli</instruction>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Create empty shadow instance (file already exists) (force) (XML) - OK (0) =#=#=#=
* Passed: crm_shadow     - Create empty shadow instance (file already exists) (force) (XML)
=#=#=#= Begin test: Get active shadow instance's contents (empty CIB) =#=#=#=
<cib epoch="1" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config/>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
=#=#=#= End test: Get active shadow instance's contents (empty CIB) - OK (0) =#=#=#=
* Passed: crm_shadow     - Get active shadow instance's contents (empty CIB)
=#=#=#= Begin test: Get active shadow instance's contents (empty CIB) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --display --output-as=xml">
  <shadow instance="cts-cli">
    <content><![CDATA[<cib epoch="1" num_updates="0" admin_epoch="0">
  <configuration>
    <crm_config/>
    <nodes/>
    <resources/>
    <constraints/>
  </configuration>
  <status/>
</cib>
]]></content>
  </shadow>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Get active shadow instance's contents (empty CIB) (XML) - OK (0) =#=#=#=
* Passed: crm_shadow     - Get active shadow instance's contents (empty CIB) (XML)
=#=#=#= Begin test: Get active shadow instance's diff (empty CIB) =#=#=#=
Diff: --- 1.1.173 2
Diff: +++ 0.1.0 (null)
-- /cib/configuration/crm_config/cluster_property_set[@id='cib-bootstrap-options']
-- /cib/configuration/nodes/node[@id='1']
-- /cib/configuration/nodes/node[@id='2']
-- /cib/configuration/resources/clone[@id='ping-clone']
-- /cib/configuration/resources/primitive[@id='Fencing']
-- /cib/configuration/resources/primitive[@id='dummy']
-- /cib/configuration/resources/clone[@id='inactive-clone']
-- /cib/configuration/resources/group[@id='inactive-group']
-- /cib/configuration/resources/bundle[@id='httpd-bundle']
-- /cib/configuration/resources/group[@id='exim-group']
-- /cib/configuration/resources/clone[@id='mysql-clone-group']
-- /cib/configuration/resources/clone[@id='promotable-clone']
-- /cib/configuration/constraints/rsc_location[@id='not-on-cluster1']
-- /cib/configuration/constraints/rsc_location[@id='loc-promotable-clone']
-- /cib/configuration/tags
-- /cib/configuration/op_defaults
-- /cib/status/node_state[@id='2']
-- /cib/status/node_state[@id='1']
-- /cib/status/node_state[@id='httpd-bundle-0']
-- /cib/status/node_state[@id='httpd-bundle-1']
+  /cib:  @validate-with=pacemaker-X, @num_updates=0, @admin_epoch=0
-- /cib:  @cib-last-written, @update-origin, @update-client, @update-user, @have-quorum, @dc-uuid
=#=#=#= End test: Get active shadow instance's diff (empty CIB) - Error occurred (1) =#=#=#=
* Passed: crm_shadow     - Get active shadow instance's diff (empty CIB)
=#=#=#= Begin test: Get active shadow instance's diff (empty CIB) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --diff --output-as=xml">
  <shadow instance="cts-cli">
    <xml-patchset><![CDATA[<diff format="2">
  <version>
    <source admin_epoch="1" epoch="1" num_updates="173"/>
    <target admin_epoch="0" epoch="1" num_updates="0"/>
  </version>
  <change operation="delete" path="/cib/configuration/crm_config/cluster_property_set[@id='cib-bootstrap-options']"/>
  <change operation="delete" path="/cib/configuration/nodes/node[@id='1']"/>
  <change operation="delete" path="/cib/configuration/nodes/node[@id='2']"/>
  <change operation="delete" path="/cib/configuration/resources/clone[@id='ping-clone']"/>
  <change operation="delete" path="/cib/configuration/resources/primitive[@id='Fencing']"/>
  <change operation="delete" path="/cib/configuration/resources/primitive[@id='dummy']"/>
  <change operation="delete" path="/cib/configuration/resources/clone[@id='inactive-clone']"/>
  <change operation="delete" path="/cib/configuration/resources/group[@id='inactive-group']"/>
  <change operation="delete" path="/cib/configuration/resources/bundle[@id='httpd-bundle']"/>
  <change operation="delete" path="/cib/configuration/resources/group[@id='exim-group']"/>
  <change operation="delete" path="/cib/configuration/resources/clone[@id='mysql-clone-group']"/>
  <change operation="delete" path="/cib/configuration/resources/clone[@id='promotable-clone']"/>
  <change operation="delete" path="/cib/configuration/constraints/rsc_location[@id='not-on-cluster1']"/>
  <change operation="delete" path="/cib/configuration/constraints/rsc_location[@id='loc-promotable-clone']"/>
  <change operation="delete" path="/cib/configuration/tags"/>
  <change operation="delete" path="/cib/configuration/op_defaults"/>
  <change operation="delete" path="/cib/status/node_state[@id='2']"/>
  <change operation="delete" path="/cib/status/node_state[@id='1']"/>
  <change operation="delete" path="/cib/status/node_state[@id='httpd-bundle-0']"/>
  <change operation="delete" path="/cib/status/node_state[@id='httpd-bundle-1']"/>
  <change operation="modify" path="/cib">
    <change-list>
      <change-attr name="crm_feature_set" operation="set" value=""/>
      <change-attr name="validate-with" operation="set" value="pacemaker-X"/>
      <change-attr name="num_updates" operation="set" value="0"/>
      <change-attr name="admin_epoch" operation="set" value="0"/>
      <change-attr name="cib-last-written" operation="unset"/>
      <change-attr name="update-origin" operation="unset"/>
      <change-attr name="update-client" operation="unset"/>
      <change-attr name="update-user" operation="unset"/>
      <change-attr name="have-quorum" operation="unset"/>
      <change-attr name="dc-uuid" operation="unset"/>
    </change-list>
    <change-result>
      <cib epoch="1" num_updates="0" admin_epoch="0"/>
    </change-result>
  </change>
</diff>
]]></xml-patchset>
  </shadow>
  <status code="1" message="Error occurred"/>
</pacemaker-result>
=#=#=#= End test: Get active shadow instance's diff (empty CIB) (XML) - Error occurred (1) =#=#=#=
* Passed: crm_shadow     - Get active shadow instance's diff (empty CIB) (XML)
=#=#=#= Begin test: Reset shadow instance =#=#=#=
A new shadow instance was created. To begin using it, enter the following into your shell:
	export CIB_shadow=cts-cli
=#=#=#= End test: Reset shadow instance - OK (0) =#=#=#=
* Passed: crm_shadow     - Reset shadow instance
=#=#=#= Begin test: Get active shadow instance's diff (after reset) =#=#=#=
=#=#=#= End test: Get active shadow instance's diff (after reset) - OK (0) =#=#=#=
* Passed: crm_shadow     - Get active shadow instance's diff (after reset)
Created new pacemaker configuration
A new shadow instance was created. To begin using it, enter the following into your shell:
	export CIB_shadow=cts-cli
=#=#=#= Begin test: Reset shadow instance (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --reset cts-cli --batch --output-as=xml">
  <instruction>A new shadow instance was created. To begin using it, enter the following into your shell:
	export CIB_shadow=cts-cli</instruction>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Reset shadow instance (XML) - OK (0) =#=#=#=
* Passed: crm_shadow     - Reset shadow instance (XML)
=#=#=#= Begin test: Get active shadow instance's diff (after reset) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --diff --output-as=xml">
  <shadow instance="cts-cli"/>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Get active shadow instance's diff (after reset) (XML) - OK (0) =#=#=#=
* Passed: crm_shadow     - Get active shadow instance's diff (after reset) (XML)
=#=#=#= Begin test: Reset shadow instance (no active instance) =#=#=#=
A new shadow instance was created. To begin using it, enter the following into your shell:
	export CIB_shadow=cts-cli
=#=#=#= End test: Reset shadow instance (no active instance) - OK (0) =#=#=#=
* Passed: crm_shadow     - Reset shadow instance (no active instance)
Created new pacemaker configuration
A new shadow instance was created. To begin using it, enter the following into your shell:
	export CIB_shadow=cts-cli
=#=#=#= Begin test: Reset shadow instance (no active instance) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --reset cts-cli --batch --output-as=xml">
  <instruction>A new shadow instance was created. To begin using it, enter the following into your shell:
	export CIB_shadow=cts-cli</instruction>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Reset shadow instance (no active instance) (XML) - OK (0) =#=#=#=
* Passed: crm_shadow     - Reset shadow instance (no active instance) (XML)
=#=#=#= Begin test: Reset shadow instance (mismatch) =#=#=#=
crm_shadow: The supplied shadow instance (cts-cli) is not the same as the active one (nonexistent_shadow).
To prevent accidental destruction of the shadow file, the --force flag is required in order to proceed.
=#=#=#= End test: Reset shadow instance (mismatch) - Incorrect usage (64) =#=#=#=
* Passed: crm_shadow     - Reset shadow instance (mismatch)
=#=#=#= Begin test: Reset shadow instance (mismatch) (force) =#=#=#=
A new shadow instance was created. To begin using it, enter the following into your shell:
	export CIB_shadow=cts-cli
=#=#=#= End test: Reset shadow instance (mismatch) (force) - OK (0) =#=#=#=
* Passed: crm_shadow     - Reset shadow instance (mismatch) (force)
Created new pacemaker configuration
A new shadow instance was created. To begin using it, enter the following into your shell:
	export CIB_shadow=cts-cli
=#=#=#= Begin test: Reset shadow instance (mismatch) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --reset cts-cli --batch --output-as=xml">
  <status code="64" message="Incorrect usage">
    <errors>
      <error>crm_shadow: The supplied shadow instance (cts-cli) is not the same as the active one (nonexistent_shadow).
To prevent accidental destruction of the shadow file, the --force flag is required in order to proceed.</error>
    </errors>
  </status>
</pacemaker-result>
=#=#=#= End test: Reset shadow instance (mismatch) (XML) - Incorrect usage (64) =#=#=#=
* Passed: crm_shadow     - Reset shadow instance (mismatch) (XML)
=#=#=#= Begin test: Reset shadow instance (mismatch) (force) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --reset cts-cli --batch --force --output-as=xml">
  <instruction>A new shadow instance was created. To begin using it, enter the following into your shell:
	export CIB_shadow=cts-cli</instruction>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Reset shadow instance (mismatch) (force) (XML) - OK (0) =#=#=#=
* Passed: crm_shadow     - Reset shadow instance (mismatch) (force) (XML)
Created new pacemaker configuration
A new shadow instance was created. To begin using it, enter the following into your shell:
	export CIB_shadow=cts-cli
=#=#=#= Begin test: Reset shadow instance (nonexistent CIB file) =#=#=#=
crm_shadow: Could not connect to CIB: No such device or address
=#=#=#= End test: Reset shadow instance (nonexistent CIB file) - No such object (105) =#=#=#=
* Passed: crm_shadow     - Reset shadow instance (nonexistent CIB file)
=#=#=#= Begin test: Reset shadow instance (nonexistent CIB file) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --reset cts-cli --batch --output-as=xml">
  <status code="105" message="No such object">
    <errors>
      <error>crm_shadow: Could not connect to CIB: No such device or address</error>
    </errors>
  </status>
</pacemaker-result>
=#=#=#= End test: Reset shadow instance (nonexistent CIB file) (XML) - No such object (105) =#=#=#=
* Passed: crm_shadow     - Reset shadow instance (nonexistent CIB file) (XML)
=#=#=#= Begin test: Reset shadow instance (nonexistent CIB file) (force) =#=#=#=
crm_shadow: Could not connect to CIB: No such device or address
=#=#=#= End test: Reset shadow instance (nonexistent CIB file) (force) - No such object (105) =#=#=#=
* Passed: crm_shadow     - Reset shadow instance (nonexistent CIB file) (force)
=#=#=#= Begin test: Reset shadow instance (nonexistent CIB file) (force) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --reset cts-cli --batch --force --output-as=xml">
  <status code="105" message="No such object">
    <errors>
      <error>crm_shadow: Could not connect to CIB: No such device or address</error>
    </errors>
  </status>
</pacemaker-result>
=#=#=#= End test: Reset shadow instance (nonexistent CIB file) (force) (XML) - No such object (105) =#=#=#=
* Passed: crm_shadow     - Reset shadow instance (nonexistent CIB file) (force) (XML)
=#=#=#= Begin test: Reset shadow instance (nonexistent shadow file) =#=#=#=
crm_shadow: Could not access shadow instance 'cts-cli': No such file or directory
=#=#=#= End test: Reset shadow instance (nonexistent shadow file) - No such object (105) =#=#=#=
* Passed: crm_shadow     - Reset shadow instance (nonexistent shadow file)
=#=#=#= Begin test: Reset shadow instance (nonexistent shadow file) (force) =#=#=#=
A new shadow instance was created. To begin using it, enter the following into your shell:
	export CIB_shadow=cts-cli
=#=#=#= End test: Reset shadow instance (nonexistent shadow file) (force) - OK (0) =#=#=#=
* Passed: crm_shadow     - Reset shadow instance (nonexistent shadow file) (force)
=#=#=#= Begin test: Reset shadow instance (nonexistent shadow file) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --reset cts-cli --batch --output-as=xml">
  <status code="105" message="No such object">
    <errors>
      <error>crm_shadow: Could not access shadow instance 'cts-cli': No such file or directory</error>
    </errors>
  </status>
</pacemaker-result>
=#=#=#= End test: Reset shadow instance (nonexistent shadow file) (XML) - No such object (105) =#=#=#=
* Passed: crm_shadow     - Reset shadow instance (nonexistent shadow file) (XML)
=#=#=#= Begin test: Reset shadow instance (nonexistent shadow file) (force) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --reset cts-cli --batch --force --output-as=xml">
  <instruction>A new shadow instance was created. To begin using it, enter the following into your shell:
	export CIB_shadow=cts-cli</instruction>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Reset shadow instance (nonexistent shadow file) (force) (XML) - OK (0) =#=#=#=
* Passed: crm_shadow     - Reset shadow instance (nonexistent shadow file) (force) (XML)
Created new pacemaker configuration
A new shadow instance was created. To begin using it, enter the following into your shell:
	export CIB_shadow=cts-cli
=#=#=#= Begin test: Switch to new shadow instance =#=#=#=
To switch to the named shadow instance, enter the following into your shell:
	export CIB_shadow=cts-cli
=#=#=#= End test: Switch to new shadow instance - OK (0) =#=#=#=
* Passed: crm_shadow     - Switch to new shadow instance
=#=#=#= Begin test: Switch to new shadow instance (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --switch cts-cli --batch --output-as=xml">
  <instruction>To switch to the named shadow instance, enter the following into your shell:
	export CIB_shadow=cts-cli</instruction>
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Switch to new shadow instance (XML) - OK (0) =#=#=#=
* Passed: crm_shadow     - Switch to new shadow instance (XML)
=#=#=#= Begin test: Switch to nonexistent shadow instance =#=#=#=
crm_shadow: Could not access shadow instance 'cts-cli': No such file or directory
=#=#=#= End test: Switch to nonexistent shadow instance - No such object (105) =#=#=#=
* Passed: crm_shadow     - Switch to nonexistent shadow instance
=#=#=#= Begin test: Switch to nonexistent shadow instance (force) =#=#=#=
crm_shadow: Could not access shadow instance 'cts-cli': No such file or directory
=#=#=#= End test: Switch to nonexistent shadow instance (force) - No such object (105) =#=#=#=
* Passed: crm_shadow     - Switch to nonexistent shadow instance (force)
=#=#=#= Begin test: Switch to nonexistent shadow instance (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --switch cts-cli --batch --output-as=xml">
  <status code="105" message="No such object">
    <errors>
      <error>crm_shadow: Could not access shadow instance 'cts-cli': No such file or directory</error>
    </errors>
  </status>
</pacemaker-result>
=#=#=#= End test: Switch to nonexistent shadow instance (XML) - No such object (105) =#=#=#=
* Passed: crm_shadow     - Switch to nonexistent shadow instance (XML)
=#=#=#= Begin test: Switch to nonexistent shadow instance (force) (XML) =#=#=#=
<pacemaker-result api-version="X" request="crm_shadow --switch cts-cli --batch --force --output-as=xml">
  <status code="105" message="No such object">
    <errors>
      <error>crm_shadow: Could not access shadow instance 'cts-cli': No such file or directory</error>
    </errors>
  </status>
</pacemaker-result>
=#=#=#= End test: Switch to nonexistent shadow instance (force) (XML) - No such object (105) =#=#=#=
* Passed: crm_shadow     - Switch to nonexistent shadow instance (force) (XML)
=#=#=#= Begin test: Verbosely verify a file-specified configuration with an unallowed fencing level ID =#=#=#=
warning: Ignoring topology registration with invalid level 10
Warnings found during check: config not valid
=#=#=#= End test: Verbosely verify a file-specified configuration with an unallowed fencing level ID - Invalid configuration (78) =#=#=#=
* Passed: crm_verify     - Verbosely verify a file-specified configuration with an unallowed fencing level ID
=#=#=#= Begin test: Verify a file-specified invalid configuration (text output) =#=#=#=
Errors found during check: config not valid
-V may provide more details
=#=#=#= End test: Verify a file-specified invalid configuration (text output) - Invalid configuration (78) =#=#=#=
* Passed: crm_verify     - Verify a file-specified invalid configuration (text output)
=#=#=#= Begin test: Verify a file-specified invalid configuration (verbose text output) =#=#=#=
unpack_config 	warning: Blind faith: not fencing unseen nodes
error: Resource test2:0 is of type systemd and therefore cannot be used as a promotable clone resource
error: Ignoring <clone> resource 'test2-clone' because configuration is invalid
error: CIB did not pass schema validation
Errors found during check: config not valid
=#=#=#= End test: Verify a file-specified invalid configuration (verbose text output) - Invalid configuration (78) =#=#=#=
* Passed: crm_verify     - Verify a file-specified invalid configuration (verbose text output)
=#=#=#= Begin test: Verify a file-specified invalid configuration (quiet text output) =#=#=#=
=#=#=#= End test: Verify a file-specified invalid configuration (quiet text output) - Invalid configuration (78) =#=#=#=
* Passed: crm_verify     - Verify a file-specified invalid configuration (quiet text output)
=#=#=#= Begin test: Verify a file-specified invalid configuration (XML output) =#=#=#=
<pacemaker-result api-version="X" request="crm_verify_invalid_bz.xml --output-as=xml">
  <status code="78" message="Invalid configuration">
    <errors>
      <error>error: Resource test2:0 is of type systemd and therefore cannot be used as a promotable clone resource</error>
      <error>error: Ignoring &lt;clone&gt; resource 'test2-clone' because configuration is invalid</error>
      <error>error: CIB did not pass schema validation</error>
      <error>Errors found during check: config not valid</error>
    </errors>
  </status>
</pacemaker-result>
=#=#=#= End test: Verify a file-specified invalid configuration (XML output) - Invalid configuration (78) =#=#=#=
* Passed: crm_verify     - Verify a file-specified invalid configuration (XML output)
=#=#=#= Begin test: Verify a file-specified invalid configuration (verbose XML output) =#=#=#=
unpack_config 	warning: Blind faith: not fencing unseen nodes
<pacemaker-result api-version="X" request="crm_verify_invalid_bz.xml --output-as=xml --verbose">
  <status code="78" message="Invalid configuration">
    <errors>
      <error>error: Resource test2:0 is of type systemd and therefore cannot be used as a promotable clone resource</error>
      <error>error: Ignoring &lt;clone&gt; resource 'test2-clone' because configuration is invalid</error>
      <error>error: CIB did not pass schema validation</error>
      <error>Errors found during check: config not valid</error>
    </errors>
  </status>
</pacemaker-result>
=#=#=#= End test: Verify a file-specified invalid configuration (verbose XML output) - Invalid configuration (78) =#=#=#=
* Passed: crm_verify     - Verify a file-specified invalid configuration (verbose XML output)
=#=#=#= Begin test: Verify a file-specified invalid configuration (quiet XML output) =#=#=#=
<pacemaker-result api-version="X" request="crm_verify_invalid_bz.xml --output-as=xml --quiet">
  <status code="78" message="Invalid configuration">
    <errors>
      <error>error: Resource test2:0 is of type systemd and therefore cannot be used as a promotable clone resource</error>
      <error>error: Ignoring &lt;clone&gt; resource 'test2-clone' because configuration is invalid</error>
      <error>error: CIB did not pass schema validation</error>
    </errors>
  </status>
</pacemaker-result>
=#=#=#= End test: Verify a file-specified invalid configuration (quiet XML output) - Invalid configuration (78) =#=#=#=
* Passed: crm_verify     - Verify a file-specified invalid configuration (quiet XML output)
=#=#=#= Begin test: Verify another file-specified invalid configuration (XML output) =#=#=#=
<pacemaker-result api-version="X" request="crm_verify_invalid_no_stonith.xml --output-as=xml">
  <status code="78" message="Invalid configuration">
    <errors>
      <error>error: Resource start-up disabled since no STONITH resources have been defined</error>
      <error>error: Either configure some or disable STONITH with the stonith-enabled option</error>
      <error>error: NOTE: Clusters with shared data need STONITH to ensure data integrity</error>
      <error>warning: Node pcmk-1 is unclean but cannot be fenced</error>
      <error>warning: Node pcmk-2 is unclean but cannot be fenced</error>
      <error>error: CIB did not pass schema validation</error>
      <error>Errors found during check: config not valid</error>
    </errors>
  </status>
</pacemaker-result>
=#=#=#= End test: Verify another file-specified invalid configuration (XML output) - Invalid configuration (78) =#=#=#=
* Passed: crm_verify     - Verify another file-specified invalid configuration (XML output)
=#=#=#= Begin test: Verify a file-specified valid configuration, outputting as xml =#=#=#=
<pacemaker-result api-version="X" request="crm_mon.xml --output-as=xml">
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Verify a file-specified valid configuration, outputting as xml - OK (0) =#=#=#=
* Passed: crm_verify     - Verify a file-specified valid configuration, outputting as xml
=#=#=#= Begin test: Verify a piped-in valid configuration, outputting as xml =#=#=#=
<pacemaker-result api-version="X" request="crm_verify -p --output-as=xml">
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Verify a piped-in valid configuration, outputting as xml - OK (0) =#=#=#=
* Passed: cat            - Verify a piped-in valid configuration, outputting as xml
=#=#=#= Begin test: Verbosely verify a file-specified valid configuration, outputting as xml =#=#=#=
<pacemaker-result api-version="X" request="crm_mon.xml --output-as=xml --verbose">
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Verbosely verify a file-specified valid configuration, outputting as xml - OK (0) =#=#=#=
* Passed: crm_verify     - Verbosely verify a file-specified valid configuration, outputting as xml
=#=#=#= Begin test: Verbosely verify a piped-in valid configuration, outputting as xml =#=#=#=
<pacemaker-result api-version="X" request="crm_verify -p --output-as=xml --verbose">
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Verbosely verify a piped-in valid configuration, outputting as xml - OK (0) =#=#=#=
* Passed: cat            - Verbosely verify a piped-in valid configuration, outputting as xml
=#=#=#= Begin test: Verify a string-supplied valid configuration, outputting as xml =#=#=#=
<pacemaker-result api-version="X" request="crm_feature_set=&quot;3.7.1&quot; transition-key=&quot;1:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot; transition-magic=&quot;0:0;1:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot; exit-reason=&quot;&quot; call-id=&quot;1&quot; rc-code=&quot;0&quot; op-status=&quot;0&quot; interval=&quot;0&quot; last-rc-change=&quot;1613491700&quot; exec-time=&quot;0&quot; queue-time=&quot;0&quot; op-digest=&quot;f2317cad3d54cec5d7d7aa7d0bf35cf8&quot;/&gt; &lt;/lrm_resource&gt; &lt;/lrm_resources&gt; &lt;/lrm&gt; &lt;/node_state&gt; &lt;/status&gt; &lt;/cib&gt;' --output-as=xml">
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Verify a string-supplied valid configuration, outputting as xml - OK (0) =#=#=#=
* Passed: crm_verify     - Verify a string-supplied valid configuration, outputting as xml
=#=#=#= Begin test: Verbosely verify a string-supplied valid configuration, outputting as xml =#=#=#=
<pacemaker-result api-version="X" request="crm_feature_set=&quot;3.7.1&quot; transition-key=&quot;1:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot; transition-magic=&quot;0:0;1:-1:0:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx&quot; exit-reason=&quot;&quot; call-id=&quot;1&quot; rc-code=&quot;0&quot; op-status=&quot;0&quot; interval=&quot;0&quot; last-rc-change=&quot;1613491700&quot; exec-time=&quot;0&quot; queue-time=&quot;0&quot; op-digest=&quot;f2317cad3d54cec5d7d7aa7d0bf35cf8&quot;/&gt; &lt;/lrm_resource&gt; &lt;/lrm_resources&gt; &lt;/lrm&gt; &lt;/node_state&gt; &lt;/status&gt; &lt;/cib&gt;' --output-as=xml --verbose">
  <status code="0" message="OK"/>
</pacemaker-result>
=#=#=#= End test: Verbosely verify a string-supplied valid configuration, outputting as xml - OK (0) =#=#=#=
* Passed: crm_verify     - Verbosely verify a string-supplied valid configuration, outputting as xml
